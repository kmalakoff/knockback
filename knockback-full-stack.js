/*
  knockback-full-stack.js 1.2.3
  Copyright (c)  2011-2022 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
(function webpackUniversalModuleDefinition(root, factory) {
  if (typeof exports === "object" && typeof module === "object")
    module.exports = factory();
  else if (typeof define === "function" && define.amd) define([], factory);
  else if (typeof exports === "object") exports["kb"] = factory();
  else root["kb"] = factory();
})(this, function () {
  return /******/ (function (modules) {
    // webpackBootstrap
    /******/ // The module cache
    /******/ var installedModules = {};
    /******/
    /******/ // The require function
    /******/ function __webpack_require__(moduleId) {
      /******/
      /******/ // Check if module is in cache
      /******/ if (installedModules[moduleId]) {
        /******/ return installedModules[moduleId].exports;
        /******/
      }
      /******/ // Create a new module (and put it into the cache)
      /******/ var module = (installedModules[moduleId] = {
        /******/ i: moduleId,
        /******/ l: false,
        /******/ exports: {},
        /******/
      });
      /******/
      /******/ // Execute the module function
      /******/ modules[moduleId].call(
        module.exports,
        module,
        module.exports,
        __webpack_require__
      );
      /******/
      /******/ // Flag the module as loaded
      /******/ module.l = true;
      /******/
      /******/ // Return the exports of the module
      /******/ return module.exports;
      /******/
    }
    /******/
    /******/
    /******/ // expose the modules object (__webpack_modules__)
    /******/ __webpack_require__.m = modules;
    /******/
    /******/ // expose the module cache
    /******/ __webpack_require__.c = installedModules;
    /******/
    /******/ // identity function for calling harmony imports with the correct context
    /******/ __webpack_require__.i = function (value) {
      return value;
    };
    /******/
    /******/ // define getter function for harmony exports
    /******/ __webpack_require__.d = function (exports, name, getter) {
      /******/ if (!__webpack_require__.o(exports, name)) {
        /******/ Object.defineProperty(exports, name, {
          /******/ configurable: false,
          /******/ enumerable: true,
          /******/ get: getter,
          /******/
        });
        /******/
      }
      /******/
    };
    /******/
    /******/ // getDefaultExport function for compatibility with non-harmony modules
    /******/ __webpack_require__.n = function (module) {
      /******/ var getter =
        module && module.__esModule
          ? /******/ function getDefault() {
              return module["default"];
            }
          : /******/ function getModuleExports() {
              return module;
            };
      /******/ __webpack_require__.d(getter, "a", getter);
      /******/ return getter;
      /******/
    };
    /******/
    /******/ // Object.prototype.hasOwnProperty.call
    /******/ __webpack_require__.o = function (object, property) {
      return Object.prototype.hasOwnProperty.call(object, property);
    };
    /******/
    /******/ // __webpack_public_path__
    /******/ __webpack_require__.p = "";
    /******/
    /******/ // Load entry module and return exports
    /******/ return __webpack_require__((__webpack_require__.s = 192));
    /******/
  })(
    /************************************************************************/
    /******/ [
      /* 0 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function (global) {
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps)
              _defineProperties(Constructor.prototype, protoProps);
            if (staticProps) _defineProperties(Constructor, staticProps);
            Object.defineProperty(Constructor, "prototype", {
              writable: false,
            });
            return Constructor;
          }

          /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
          var Backbone, LIFECYCLE_METHODS, _, kb, ko, window;

          window = window != null ? window : global;
          ko = __webpack_require__(119);
          LIFECYCLE_METHODS = ["release", "destroy", "dispose"]; // The 'kb' namespace for classes, factory functions, constants, etc.
          // @method .configure(options)
          //   Method to update Knockback global configuration.
          //   @param [Object] configuration options. 1) orm - select the library for relationships (default, backbone-orm, backbone-associations, backbone-relational), 2) deep_retain - true to multiply retain view models in the store
          // @method .collectionObservable(collection, options)
          //   Factory to create a new kb.CollectionObservable. See {kb.CollectionObservable#constructor} for information on options
          //   @param [Collection] collection the collection to observe (can be null)
          //   @param [Object] options the create options
          //   @return [ko.observableArray] the constructor does not return 'this' but a ko.observableArray
          // @method .observable(model, options, view_model)
          //   Factory to create a new kb.Observable. See {kb.Observable#constructor} for information on options
          //   @param [Model] model the model to observe (can be null)
          //   @param [String|Array|Object] options the create options. String is a single attribute name, Array is an array of attribute names.
          //   @return [ko.observable] the constructor does not return 'this' but a ko.observable
          // @method .viewModel(model, options, view_model)
          //   Factory to create a new kb.ViewModel. See {kb.ViewModel#constructor} for information on options
          //   @param [Model|ModelRef] model the model to observe (can be null)
          //   @param [Object] options the create options
          //   @return [ko.observable] the constructor returns 'this'
          // @method .defaultObservable(target, default_value)
          //   Factory to create a new kb.DefaultObservable. See {kb.DefaultObservable#constructor} for information on options. If you are using knockback-core or knockback-core-stack, you can include this from the lib/knockback-defaults component.
          //   @param [ko.observable] target_observable the observable to check for null, undefined, or the empty string
          //   @param [Any] default_value the default value. Can be a value, string or ko.observable
          //   @return [ko.observable] the constructor does not return 'this' but a ko.observable
          // @method .formattedObservable(format, arg1, arg2, etc)
          //   Factory to create a new kb.FormattedObservable. See {kb.FormattedObservable#constructor} for information on options. If you are using knockback-core or knockback-core-stack, you can include this from the lib/knockback-formatting component.
          //   @param [String|ko.observable] format the format string. Format: `"{0} and {1}"` where `{0}` and `{1}` would be synchronized with the arguments (eg. "Bob and Carol" where `{0}` is Bob and `{1}` is Carol)
          //   @param [Array] args arguments to be passed to the kb.LocaleManager's get() method
          //   @return [ko.observable] the constructor does not return 'this' but a ko.observable
          // @method .localizedObservable(value, options, view_model)
          //   Factory to create a new kb.LocalizedObservable. See {kb.LocalizedObservable#constructor} for information on options. If you are using knockback-core or knockback-core-stack, you can include this from the lib/knockback-localization component.
          //   @param [Data|ko.observable] value the value to localize
          //   @param [Object] options the create options
          //   @return [ko.observable] the constructor does not return 'this' but a ko.observable

          module.exports = kb = function () {
            var ref;

            var kb = /*#__PURE__*/ (function () {
              function kb() {
                _classCallCheck(this, kb);
              }

              _createClass(kb, null, [
                {
                  key: "wasReleased",
                  // Checks if an object has been released.
                  value:
                    // @param [Any] obj the object to release and also release its keys
                    function wasReleased(obj) {
                      return !obj || obj.__kb_released;
                    }, // Checks if an object can be released. Used to perform minimal nested releasing on objects by checking if self or next level contained items can be released.
                  // @param [Any] obj the object to release and also release its keys
                },
                {
                  key: "isReleaseable",
                  value: function isReleaseable(obj) {
                    var depth =
                      arguments.length > 1 && arguments[1] !== undefined
                        ? arguments[1]
                        : 0;
                    var j, key, len, method, value;

                    if (!obj || obj !== Object(obj) || obj.__kb_released) {
                      // must be an object and not already released
                      return false;
                    }

                    if (ko.isObservable(obj) || obj instanceof kb.ViewModel) {
                      // a known type that is releasable
                      return true;
                    }

                    if (
                      typeof obj === "function" ||
                      kb.isModel(obj) ||
                      kb.isCollection(obj)
                    ) {
                      // a known type that is not releaseable
                      return false;
                    } // a releaseable signature

                    for (j = 0, len = LIFECYCLE_METHODS.length; j < len; j++) {
                      method = LIFECYCLE_METHODS[j];

                      if (typeof obj[method] === "function") {
                        return true;
                      }
                    }

                    if (depth > 0) {
                      // max depth check for ViewModel inside of ViewModel
                      return false;
                    }

                    for (key in obj) {
                      value = obj[key];

                      if (
                        key !== "__kb" &&
                        kb.isReleaseable(value, depth + 1)
                      ) {
                        return true;
                      }
                    }

                    return false;
                  }, // Releases any type of view model or observable or items in an array using the conventions of release(), destroy(), dispose().
                  // @param [Any] obj the object to release and also release its keys
                  // @example
                  //   var view_model = kb.viewModel(model);
                  //   kb.release(view_model); view_model = null;
                  // @example
                  //   var todos = kb.collectionObservable(collection);
                  //   kb.release(todos); todos = null;
                },
                {
                  key: "release",
                  value: function release(obj) {
                    var array, index, j, len, method, value;

                    if (!kb.isReleaseable(obj)) {
                      return;
                    }

                    obj.__kb_released = true; // mark as released
                    // release array's items

                    if (_.isArray(obj)) {
                      for (index in obj) {
                        value = obj[index];

                        if (kb.isReleaseable(value)) {
                          (obj[index] = null), kb.release(value);
                        }
                      }

                      return;
                    } // observable or lifecycle managed

                    if (
                      ko.isObservable(obj) &&
                      _.isArray((array = kb.peek(obj)))
                    ) {
                      if (
                        obj.__kb_is_co ||
                        (obj.__kb_is_o &&
                          obj.valueType() === kb.TYPE_COLLECTION)
                      ) {
                        return typeof obj.destroy === "function"
                          ? obj.destroy()
                          : void 0;
                      }

                      for (index in array) {
                        value = array[index];

                        if (kb.isReleaseable(value)) {
                          (array[index] = null), kb.release(value);
                        }
                      }

                      if (typeof obj.dispose === "function") {
                        obj.dispose();
                      }

                      return;
                    } // a releaseable signature

                    for (j = 0, len = LIFECYCLE_METHODS.length; j < len; j++) {
                      method = LIFECYCLE_METHODS[j];

                      if (typeof obj[method] === "function") {
                        // releaseable signature
                        return obj[method].call(obj);
                      }
                    }

                    if (!ko.isObservable(obj)) {
                      // view model
                      return this.releaseKeys(obj);
                    }
                  }, // Releases and clears all of the keys on an object using the conventions of release(), destroy(), dispose() without releasing the top level object itself.
                },
                {
                  key: "releaseKeys",
                  value: function releaseKeys(obj) {
                    var key, value;

                    for (key in obj) {
                      value = obj[key];

                      if (key !== "__kb" && kb.isReleaseable(value)) {
                        (obj[key] = null), kb.release(value);
                      }
                    }
                  }, // Binds a callback to the node that releases the view model when the node is removed using ko.removeNode.
                  // ```
                  // ko.utils.domNodeDisposal.addDisposeCallback(node, function() { kb.release(view_model)} );
                  // ```
                  // @example The hard way to set up automatic calling of 'kb.release(view_model)' when the bound element is released.
                  //   var el = $('<div data-bind="name: name"></div>')[0];
                  //   var view_model = kb.viewModel(new Backbone.Model({name: 'Bob'}));
                  //   ko.applyBindings(view_model, el);
                  //   kb.releaseOnNodeRemove(view_model, el);
                  //   ...
                  //   ko.removeNode(el); // removes el from the DOM and calls kb.release(view_model)
                },
                {
                  key: "releaseOnNodeRemove",
                  value: function releaseOnNodeRemove(view_model, node) {
                    view_model ||
                      kb._throwUnexpected(this, "missing view model");
                    node || kb._throwUnexpected(this, "missing node");
                    return ko.utils.domNodeDisposal.addDisposeCallback(
                      node,
                      function () {
                        return kb.release(view_model);
                      }
                    );
                  }, // Renders a template and binds a callback to the node that releases the view model when the node is removed using ko.removeNode.
                  // NOTE: if you provide an afterRender method on the View Model and do not provide afterRender in the options, afterRender will be called with the following signature: afterRender(element) which differs from the Knockout signture of afterRender(elements)
                  // @example The easy way to set up automatic calling of 'kb.release(view_model)' when the bound element is released.
                  //   var el = kb.renderTemplate('my_template', kb.viewModel(new Backbone.Model({name: 'Bob'})));
                  //   ...
                  //   ko.removeNode(el); // removes el from the DOM and calls kb.release(view_model)
                },
                {
                  key: "renderTemplate",
                  value: function renderTemplate(template, view_model) {
                    var options =
                      arguments.length > 2 && arguments[2] !== undefined
                        ? arguments[2]
                        : {};
                    var document, el, i, j, observable, ref;

                    if (
                      !(document = window != null ? window.document : void 0)
                    ) {
                      return typeof console !== "undefined" && console !== null
                        ? console.log("renderTemplate: document is undefined")
                        : void 0;
                    }

                    el = document.createElement("div");
                    observable = ko.renderTemplate(
                      template,
                      view_model,
                      options,
                      el,
                      "replaceChildren"
                    );

                    if (el.childNodes.length === 1) {
                      // do not return the template wrapper if possible
                      el = el.childNodes[0];
                    } else if (el.childNodes.length) {
                      // ensure the context is passed up to wrapper from a child
                      for (
                        i = j = 0, ref = el.childNodes.length;
                        0 <= ref ? j <= ref : j >= ref;
                        i = 0 <= ref ? ++j : --j
                      ) {
                        try {
                          ko.storedBindingContextForNode(
                            el,
                            ko.contextFor(el.childNodes[i])
                          );
                          break;
                        } catch (error) {}
                      }
                    }

                    kb.releaseOnNodeRemove(view_model, el);
                    observable.dispose(); // we will handle memory management with ko.removeNode (otherwise creates memory leak on default bound dispose function)

                    if (view_model.afterRender && !options.afterRender) {
                      // call afterRender for custom setup unless provided in options (so doesn't get double called)
                      view_model.afterRender(el);
                    }

                    return el;
                  }, // Applies bindings and binds a callback to the node that releases the view model when the node is removed using ko.removeNode.
                  // @example The easy way to set up automatic calling of 'kb.release(view_model)' when the bound element is released.
                  //   var el = $('<div data-bind="name: name"></div>')[0];
                  //   kb.applyBindings(kb.viewModel(new Backbone.Model({name: 'Bob'})), el);
                  //   ...
                  //   ko.removeNode(el); // removes el from the DOM and calls kb.release(view_model)
                },
                {
                  key: "applyBindings",
                  value: function applyBindings(view_model, node) {
                    var child, children, j, len;

                    if (node.length) {
                      // convert to a root element
                      var _ref = [document.createElement("div"), node];
                      node = _ref[0];
                      children = _ref[1];

                      for (j = 0, len = children.length; j < len; j++) {
                        child = children[j];
                        node.appendChild(child);
                      }
                    }

                    ko.applyBindings(view_model, node);
                    kb.releaseOnNodeRemove(view_model, node);
                    return node;
                  },
                },
                {
                  key: "getValue",
                  value: function getValue(model, key, args) {
                    var ref;

                    if (!model) {
                      return;
                    }

                    if (
                      _.isFunction(model[key]) &&
                      ((ref = kb.settings.orm) != null
                        ? ref.useFunction(model, key)
                        : void 0)
                    ) {
                      return model[key]();
                    }

                    if (!args) {
                      return model.get(key);
                    }

                    return model.get.apply(
                      model,
                      _.map([key].concat(args), function (value) {
                        return kb.peek(value);
                      })
                    );
                  },
                },
                {
                  key: "setValue",
                  value: function setValue(model, key, value) {
                    var attributes, ref;

                    if (!model) {
                      return;
                    }

                    if (
                      _.isFunction(model[key]) &&
                      ((ref = kb.settings.orm) != null
                        ? ref.useFunction(model, key)
                        : void 0)
                    ) {
                      return model[key](value);
                    }

                    (attributes = {})[key] = value;
                    return model.set(attributes);
                  }, // @nodoc
                },
                {
                  key: "_throwMissing",
                  value: function _throwMissing(instance, message) {
                    throw ""
                      .concat(
                        _.isString(instance)
                          ? instance
                          : instance.constructor.name,
                        ": "
                      )
                      .concat(message, " is missing");
                  }, // @nodoc
                },
                {
                  key: "_throwUnexpected",
                  value: function _throwUnexpected(instance, message) {
                    throw ""
                      .concat(
                        _.isString(instance)
                          ? instance
                          : instance.constructor.name,
                        ": "
                      )
                      .concat(message, " is unexpected");
                  }, // @nodoc
                },
                {
                  key: "publishMethods",
                  value: function publishMethods(
                    observable,
                    instance,
                    methods
                  ) {
                    var fn, j, len;

                    for (j = 0, len = methods.length; j < len; j++) {
                      fn = methods[j];
                      observable[fn] = kb._.bind(instance[fn], instance);
                    }
                  }, // @nodoc
                },
                {
                  key: "peek",
                  value: function peek(obs) {
                    if (!ko.isObservable(obs)) {
                      return obs;
                    }

                    if (obs.peek) {
                      return obs.peek();
                    }

                    return kb.ignore(function () {
                      return obs();
                    });
                  }, // @nodoc
                },
                {
                  key: "isModel",
                  value: function isModel(obj) {
                    return (
                      obj &&
                      (obj instanceof kb.Model ||
                        (typeof obj.get === "function" &&
                          typeof obj.bind === "function"))
                    );
                  }, // @nodoc
                },
                {
                  key: "isCollection",
                  value: function isCollection(obj) {
                    return obj && obj instanceof kb.Collection;
                  },
                },
              ]);

              return kb;
            })(); // Knockback library semantic version

            kb.VERSION = "1.2.3"; //###################################
            // OBSERVABLE STORAGE TYPES
            //###################################
            // Stored value type is not known like null/undefined (could be observed as a Model or a Collection or a simple type)

            kb.TYPE_UNKNOWN = 0; // Stored value type is simple like a String or Number -> observable type: ko.observable

            kb.TYPE_SIMPLE = 1; // Stored value type is an Array -> observable type: ko.observableArray

            kb.TYPE_ARRAY = 2; // Stored value type is a Model -> observable type: ViewModel

            kb.TYPE_MODEL = 3; // Stored value type is a Collection -> observable type: kb.CollectionObservable

            kb.TYPE_COLLECTION = 4; // Helper to ignore dependencies in a function
            // @param [Object] obj the object to test
            // @example
            //   kb.ignore(fn);

            kb.ignore =
              ((ref = ko.dependencyDetection) != null ? ref.ignore : void 0) ||
              function (callback, callbackTarget, callbackArgs) {
                var value;
                value = null;
                ko.computed(function () {
                  return (value = callback.apply(
                    callbackTarget,
                    callbackArgs || []
                  ));
                }).dispose();
                return value;
              }; //###################################
            // INTERNAL HELPERS
            //###################################
            // @nodoc

            kb.extend = __webpack_require__(111);
            return kb;
          }.call(void 0);

          if (window.Parse) {
            Backbone = kb.Parse = window.Parse;
            _ = kb._ = window.Parse._;
          } else {
            Backbone = kb.Backbone = __webpack_require__(109);
            _ = kb._ = __webpack_require__(68);
          }

          kb.ko = ko; // cache local references

          kb.Collection = Backbone.Collection;
          kb.Model = Backbone.Object || Backbone.Model;
          kb.Events = Backbone.Events;
          /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(23)));

        /***/
      },
      /* 1 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function (global) {
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "a",
            function () {
              return VERSION;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "s",
            function () {
              return root;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "b",
            function () {
              return ArrayProto;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "j",
            function () {
              return ObjProto;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "n",
            function () {
              return SymbolProto;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "c",
            function () {
              return push;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "d",
            function () {
              return slice;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "l",
            function () {
              return toString;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "f",
            function () {
              return hasOwnProperty;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "p",
            function () {
              return supportsArrayBuffer;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "m",
            function () {
              return supportsDataView;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "t",
            function () {
              return nativeIsArray;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "k",
            function () {
              return nativeKeys;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "g",
            function () {
              return nativeCreate;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "o",
            function () {
              return nativeIsView;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "q",
            function () {
              return _isNaN;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "r",
            function () {
              return _isFinite;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "h",
            function () {
              return hasEnumBug;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "i",
            function () {
              return nonEnumerableProps;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "e",
            function () {
              return MAX_ARRAY_INDEX;
            }
          );
          // Current version.
          var VERSION = "1.13.4";

          // Establish the root object, `window` (`self`) in the browser, `global`
          // on the server, or `this` in some virtual machines. We use `self`
          // instead of `window` for `WebWorker` support.
          var root =
            (typeof self == "object" && self.self === self && self) ||
            (typeof global == "object" && global.global === global && global) ||
            Function("return this")() ||
            {};

          // Save bytes in the minified (but not gzipped) version:
          var ArrayProto = Array.prototype,
            ObjProto = Object.prototype;
          var SymbolProto =
            typeof Symbol !== "undefined" ? Symbol.prototype : null;

          // Create quick reference variables for speed access to core prototypes.
          var push = ArrayProto.push,
            slice = ArrayProto.slice,
            toString = ObjProto.toString,
            hasOwnProperty = ObjProto.hasOwnProperty;

          // Modern feature detection.
          var supportsArrayBuffer = typeof ArrayBuffer !== "undefined",
            supportsDataView = typeof DataView !== "undefined";

          // All **ECMAScript 5+** native function implementations that we hope to use
          // are declared here.
          var nativeIsArray = Array.isArray,
            nativeKeys = Object.keys,
            nativeCreate = Object.create,
            nativeIsView = supportsArrayBuffer && ArrayBuffer.isView;

          // Create references to these builtin functions because we override them.
          var _isNaN = isNaN,
            _isFinite = isFinite;

          // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
          var hasEnumBug = !{ toString: null }.propertyIsEnumerable("toString");
          var nonEnumerableProps = [
            "valueOf",
            "isPrototypeOf",
            "toString",
            "propertyIsEnumerable",
            "hasOwnProperty",
            "toLocaleString",
          ];

          // The largest integer that can be represented exactly.
          var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;

          /* WEBPACK VAR INJECTION */
        }.call(__webpack_exports__, __webpack_require__(23)));

        /***/
      },
      /* 2 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = keys;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isObject_js__ =
          __webpack_require__(13);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__setup_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__has_js__ =
          __webpack_require__(10);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__collectNonEnumProps_js__ =
          __webpack_require__(47);

        // Retrieve the names of an object's own properties.
        // Delegates to **ECMAScript 5**'s native `Object.keys`.
        function keys(obj) {
          if (
            !__webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__isObject_js__["a" /* default */]
            )(obj)
          )
            return [];
          if (__WEBPACK_IMPORTED_MODULE_1__setup_js__["k" /* nativeKeys */])
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__setup_js__["k" /* nativeKeys */]
            )(obj);
          var keys = [];
          for (var key in obj)
            if (
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__has_js__["a" /* default */]
              )(obj, key)
            )
              keys.push(key);
          // Ahem, IE < 9.
          if (__WEBPACK_IMPORTED_MODULE_1__setup_js__["h" /* hasEnumBug */])
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_3__collectNonEnumProps_js__[
                "a" /* default */
              ]
            )(obj, keys);
          return keys;
        }

        /***/
      },
      /* 3 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = tagTester;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);

        // Internal function for creating a `toString`-based type tester.
        function tagTester(name) {
          var tag = "[object " + name + "]";
          return function (obj) {
            return (
              __WEBPACK_IMPORTED_MODULE_0__setup_js__["l" /* toString */].call(
                obj
              ) === tag
            );
          };
        }

        /***/
      },
      /* 4 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = cb;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__underscore_js__ =
          __webpack_require__(7);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__baseIteratee_js__ =
          __webpack_require__(45);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__iteratee_js__ =
          __webpack_require__(80);

        // The function we call internally to generate a callback. It invokes
        // `_.iteratee` if overridden, otherwise `baseIteratee`.
        function cb(value, context, argCount) {
          if (
            __WEBPACK_IMPORTED_MODULE_0__underscore_js__["a" /* default */]
              .iteratee !==
            __WEBPACK_IMPORTED_MODULE_2__iteratee_js__["a" /* default */]
          )
            return __WEBPACK_IMPORTED_MODULE_0__underscore_js__[
              "a" /* default */
            ].iteratee(value, context);
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_1__baseIteratee_js__["a" /* default */]
          )(value, context, argCount);
        }

        /***/
      },
      /* 5 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createSizePropertyCheck_js__ =
          __webpack_require__(52);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getLength_js__ =
          __webpack_require__(8);

        // Internal helper for collection methods to determine whether a collection
        // should be iterated as an array or as an object.
        // Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
        // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__createSizePropertyCheck_js__[
              "a" /* default */
            ]
          )(__WEBPACK_IMPORTED_MODULE_1__getLength_js__["a" /* default */]);

        /***/
      },
      /* 6 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          restArguments;
        // Some functions take a variable number of arguments, or a few expected
        // arguments at the beginning and then a variable number of values to operate
        // on. This helper accumulates all remaining arguments past the function’s
        // argument length (or an explicit `startIndex`), into an array that becomes
        // the last argument. Similar to ES6’s "rest parameter".
        function restArguments(func, startIndex) {
          startIndex = startIndex == null ? func.length - 1 : +startIndex;
          return function () {
            var length = Math.max(arguments.length - startIndex, 0),
              rest = Array(length),
              index = 0;
            for (; index < length; index++) {
              rest[index] = arguments[index + startIndex];
            }
            switch (startIndex) {
              case 0:
                return func.call(this, rest);
              case 1:
                return func.call(this, arguments[0], rest);
              case 2:
                return func.call(this, arguments[0], arguments[1], rest);
            }
            var args = Array(startIndex + 1);
            for (index = 0; index < startIndex; index++) {
              args[index] = arguments[index];
            }
            args[startIndex] = rest;
            return func.apply(this, args);
          };
        }

        /***/
      },
      /* 7 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = _;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);

        // If Underscore is called as a function, it returns a wrapped object that can
        // be used OO-style. This wrapper holds altered versions of all functions added
        // through `_.mixin`. Wrapped objects may be chained.
        function _(obj) {
          if (obj instanceof _) return obj;
          if (!(this instanceof _)) return new _(obj);
          this._wrapped = obj;
        }

        _.VERSION = __WEBPACK_IMPORTED_MODULE_0__setup_js__["a" /* VERSION */];

        // Extracts the result from a wrapped and chained object.
        _.prototype.value = function () {
          return this._wrapped;
        };

        // Provide unwrapping proxies for some methods used in engine operations
        // such as arithmetic and JSON stringification.
        _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

        _.prototype.toString = function () {
          return String(this._wrapped);
        };

        /***/
      },
      /* 8 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shallowProperty_js__ =
          __webpack_require__(55);

        // Internal helper to obtain the `length` property of an object.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__shallowProperty_js__["a" /* default */]
          )("length");

        /***/
      },
      /* 9 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__setup_js__ =
          __webpack_require__(1);

        var isFunction = __webpack_require__.i(
          __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
        )("Function");

        // Optimize `isFunction` if appropriate. Work around some `typeof` bugs in old
        // v8, IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).
        var nodelist =
          __WEBPACK_IMPORTED_MODULE_1__setup_js__["s" /* root */].document &&
          __WEBPACK_IMPORTED_MODULE_1__setup_js__["s" /* root */].document
            .childNodes;
        if (
          typeof /./ != "function" &&
          typeof Int8Array != "object" &&
          typeof nodelist != "function"
        ) {
          isFunction = function (obj) {
            return typeof obj == "function" || false;
          };
        }

        /* harmony default export */ __webpack_exports__["a"] = isFunction;

        /***/
      },
      /* 10 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = has;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);

        // Internal function to check whether `key` is an own property name of `obj`.
        function has(obj, key) {
          return (
            obj != null &&
            __WEBPACK_IMPORTED_MODULE_0__setup_js__[
              "f" /* hasOwnProperty */
            ].call(obj, key)
          );
        }

        /***/
      },
      /* 11 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = each;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__optimizeCb_js__ =
          __webpack_require__(17);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isArrayLike_js__ =
          __webpack_require__(5);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__keys_js__ =
          __webpack_require__(2);

        // The cornerstone for collection functions, an `each`
        // implementation, aka `forEach`.
        // Handles raw objects in addition to array-likes. Treats all
        // sparse array-likes as if they were dense.
        function each(obj, iteratee, context) {
          iteratee = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__optimizeCb_js__["a" /* default */]
          )(iteratee, context);
          var i, length;
          if (
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__isArrayLike_js__["a" /* default */]
            )(obj)
          ) {
            for (i = 0, length = obj.length; i < length; i++) {
              iteratee(obj[i], i, obj);
            }
          } else {
            var _keys = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__keys_js__["a" /* default */]
            )(obj);
            for (i = 0, length = _keys.length; i < length; i++) {
              iteratee(obj[_keys[i]], _keys[i], obj);
            }
          }
          return obj;
        }

        /***/
      },
      /* 12 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tagTester_js__ =
          __webpack_require__(3);

        // Is a given value an array?
        // Delegates to ECMA5's native `Array.isArray`.
        /* harmony default export */ __webpack_exports__["a"] =
          __WEBPACK_IMPORTED_MODULE_0__setup_js__["t" /* nativeIsArray */] ||
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_1__tagTester_js__["a" /* default */]
          )("Array");

        /***/
      },
      /* 13 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isObject;
        // Is a given variable an object?
        function isObject(obj) {
          var type = typeof obj;
          return type === "function" || (type === "object" && !!obj);
        }

        /***/
      },
      /* 14 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = flatten;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getLength_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isArrayLike_js__ =
          __webpack_require__(5);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isArray_js__ =
          __webpack_require__(12);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__isArguments_js__ =
          __webpack_require__(35);

        // Internal implementation of a recursive `flatten` function.
        function flatten(input, depth, strict, output) {
          output = output || [];
          if (!depth && depth !== 0) {
            depth = Infinity;
          } else if (depth <= 0) {
            return output.concat(input);
          }
          var idx = output.length;
          for (
            var i = 0,
              length = __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0__getLength_js__["a" /* default */]
              )(input);
            i < length;
            i++
          ) {
            var value = input[i];
            if (
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__isArrayLike_js__["a" /* default */]
              )(value) &&
              (__webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__isArray_js__["a" /* default */]
              )(value) ||
                __webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_3__isArguments_js__[
                    "a" /* default */
                  ]
                )(value))
            ) {
              // Flatten current level of array or arguments object.
              if (depth > 1) {
                flatten(value, depth - 1, strict, output);
                idx = output.length;
              } else {
                var j = 0,
                  len = value.length;
                while (j < len) output[idx++] = value[j++];
              }
            } else if (!strict) {
              output[idx++] = value;
            }
          }
          return output;
        }

        /***/
      },
      /* 15 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = map;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cb_js__ =
          __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isArrayLike_js__ =
          __webpack_require__(5);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__keys_js__ =
          __webpack_require__(2);

        // Return the results of applying the iteratee to each element.
        function map(obj, iteratee, context) {
          iteratee = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__cb_js__["a" /* default */]
          )(iteratee, context);
          var _keys =
              !__webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__isArrayLike_js__["a" /* default */]
              )(obj) &&
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__keys_js__["a" /* default */]
              )(obj),
            length = (_keys || obj).length,
            results = Array(length);
          for (var index = 0; index < length; index++) {
            var currentKey = _keys ? _keys[index] : index;
            results[index] = iteratee(obj[currentKey], currentKey, obj);
          }
          return results;
        }

        /***/
      },
      /* 16 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = values;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__keys_js__ =
          __webpack_require__(2);

        // Retrieve the values of an object's properties.
        function values(obj) {
          var _keys = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__keys_js__["a" /* default */]
          )(obj);
          var length = _keys.length;
          var values = Array(length);
          for (var i = 0; i < length; i++) {
            values[i] = obj[_keys[i]];
          }
          return values;
        }

        /***/
      },
      /* 17 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = optimizeCb;
        // Internal function that returns an efficient (for current engines) version
        // of the passed-in callback, to be repeatedly applied in other Underscore
        // functions.
        function optimizeCb(func, context, argCount) {
          if (context === void 0) return func;
          switch (argCount == null ? 3 : argCount) {
            case 1:
              return function (value) {
                return func.call(context, value);
              };
            // The 2-argument case is omitted because we’re not using it.
            case 3:
              return function (value, index, collection) {
                return func.call(context, value, index, collection);
              };
            case 4:
              return function (accumulator, value, index, collection) {
                return func.call(
                  context,
                  accumulator,
                  value,
                  index,
                  collection
                );
              };
          }
          return function () {
            return func.apply(context, arguments);
          };
        }

        /***/
      },
      /* 18 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "b",
          function () {
            return hasStringTagBug;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "a",
          function () {
            return isIE11;
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__hasObjectTag_js__ =
          __webpack_require__(120);

        // In IE 10 - Edge 13, `DataView` has string tag `'[object Object]'`.
        // In IE 11, the most common among them, this problem also applies to
        // `Map`, `WeakMap` and `Set`.
        var hasStringTagBug =
            __WEBPACK_IMPORTED_MODULE_0__setup_js__[
              "m" /* supportsDataView */
            ] &&
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__hasObjectTag_js__["a" /* default */]
            )(new DataView(new ArrayBuffer(8))),
          isIE11 =
            typeof Map !== "undefined" &&
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__hasObjectTag_js__["a" /* default */]
            )(new Map());

        /***/
      },
      /* 19 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = toPath;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__underscore_js__ =
          __webpack_require__(7);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toPath_js__ =
          __webpack_require__(90);

        // Internal wrapper for `_.toPath` to enable minification.
        // Similar to `cb` for `_.iteratee`.
        function toPath(path) {
          return __WEBPACK_IMPORTED_MODULE_0__underscore_js__[
            "a" /* default */
          ].toPath(path);
        }

        /***/
      },
      /* 20 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = allKeys;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isObject_js__ =
          __webpack_require__(13);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__setup_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__collectNonEnumProps_js__ =
          __webpack_require__(47);

        // Retrieve all the enumerable property names of an object.
        function allKeys(obj) {
          if (
            !__webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__isObject_js__["a" /* default */]
            )(obj)
          )
            return [];
          var keys = [];
          for (var key in obj) keys.push(key);
          // Ahem, IE < 9.
          if (__WEBPACK_IMPORTED_MODULE_1__setup_js__["h" /* hasEnumBug */])
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__collectNonEnumProps_js__[
                "a" /* default */
              ]
            )(obj, keys);
          return keys;
        }

        /***/
      },
      /* 21 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = contains;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__ =
          __webpack_require__(5);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__values_js__ =
          __webpack_require__(16);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__indexOf_js__ =
          __webpack_require__(69);

        // Determine if the array or object contains a given item (using `===`).
        function contains(obj, item, fromIndex, guard) {
          if (
            !__webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__["a" /* default */]
            )(obj)
          )
            obj = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__values_js__["a" /* default */]
            )(obj);
          if (typeof fromIndex != "number" || guard) fromIndex = 0;
          return (
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__indexOf_js__["a" /* default */]
            )(obj, item, fromIndex) >= 0
          );
        }

        /***/
      },
      /* 22 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = filter;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cb_js__ =
          __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__each_js__ =
          __webpack_require__(11);

        // Return all the elements that pass a truth test.
        function filter(obj, predicate, context) {
          var results = [];
          predicate = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__cb_js__["a" /* default */]
          )(predicate, context);
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_1__each_js__["a" /* default */]
          )(obj, function (value, index, list) {
            if (predicate(value, index, list)) results.push(value);
          });
          return results;
        }

        /***/
      },
      /* 23 */
      /***/ function (module, exports) {
        var g;

        // This works in non-strict mode
        g = (function () {
          return this;
        })();

        try {
          // This works if eval is allowed (see CSP)
          g = g || Function("return this")() || (1, eval)("this");
        } catch (e) {
          // This works if the window reference is available
          if (typeof window === "object") g = window;
        }

        // g can still be undefined, but nothing to do about it...
        // We return undefined, instead of nothing here, so it's
        // easier to handle this case. if(!global) { ...}

        module.exports = g;

        /***/
      },
      /* 24 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = group;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cb_js__ =
          __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__each_js__ =
          __webpack_require__(11);

        // An internal function used for aggregate "group by" operations.
        function group(behavior, partition) {
          return function (obj, iteratee, context) {
            var result = partition ? [[], []] : {};
            iteratee = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__cb_js__["a" /* default */]
            )(iteratee, context);
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__each_js__["a" /* default */]
            )(obj, function (value, index) {
              var key = iteratee(value, index, obj);
              behavior(result, value, key);
            });
            return result;
          };
        }

        /***/
      },
      /* 25 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = matcher;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__extendOwn_js__ =
          __webpack_require__(31);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isMatch_js__ =
          __webpack_require__(74);

        // Returns a predicate for checking whether an object has a given set of
        // `key:value` pairs.
        function matcher(attrs) {
          attrs = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__extendOwn_js__["a" /* default */]
          )({}, attrs);
          return function (obj) {
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__isMatch_js__["a" /* default */]
            )(obj, attrs);
          };
        }

        /***/
      },
      /* 26 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__restArguments_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__executeBound_js__ =
          __webpack_require__(54);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__underscore_js__ =
          __webpack_require__(7);

        // Partially apply a function by creating a version that has had some of its
        // arguments pre-filled, without changing its dynamic `this` context. `_` acts
        // as a placeholder by default, allowing any combination of arguments to be
        // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.
        var partial = __webpack_require__.i(
          __WEBPACK_IMPORTED_MODULE_0__restArguments_js__["a" /* default */]
        )(function (func, boundArgs) {
          var placeholder = partial.placeholder;
          var bound = function () {
            var position = 0,
              length = boundArgs.length;
            var args = Array(length);
            for (var i = 0; i < length; i++) {
              args[i] =
                boundArgs[i] === placeholder
                  ? arguments[position++]
                  : boundArgs[i];
            }
            while (position < arguments.length)
              args.push(arguments[position++]);
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__executeBound_js__["a" /* default */]
            )(func, bound, this, this, args);
          };
          return bound;
        });

        partial.placeholder =
          __WEBPACK_IMPORTED_MODULE_2__underscore_js__["a" /* default */];
        /* harmony default export */ __webpack_exports__["a"] = partial;

        /***/
      },
      /* 27 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          createAssigner;
        // An internal function for creating assigner functions.
        function createAssigner(keysFunc, defaults) {
          return function (obj) {
            var length = arguments.length;
            if (defaults) obj = Object(obj);
            if (length < 2 || obj == null) return obj;
            for (var index = 1; index < length; index++) {
              var source = arguments[index],
                keys = keysFunc(source),
                l = keys.length;
              for (var i = 0; i < l; i++) {
                var key = keys[i];
                if (!defaults || obj[key] === void 0) obj[key] = source[key];
              }
            }
            return obj;
          };
        }

        /***/
      },
      /* 28 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = deepGet;
        // Internal function to obtain a nested property in `obj` along `path`.
        function deepGet(obj, path) {
          var length = path.length;
          for (var i = 0; i < length; i++) {
            if (obj == null) return void 0;
            obj = obj[path[i]];
          }
          return length ? obj : void 0;
        }

        /***/
      },
      /* 29 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shallowProperty_js__ =
          __webpack_require__(55);

        // Internal helper to obtain the `byteLength` property of an object.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__shallowProperty_js__["a" /* default */]
          )("byteLength");

        /***/
      },
      /* 30 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          ie11fingerprint;
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "d",
          function () {
            return mapMethods;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "c",
          function () {
            return weakMapMethods;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "b",
          function () {
            return setMethods;
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getLength_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isFunction_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__allKeys_js__ =
          __webpack_require__(20);

        // Since the regular `Object.prototype.toString` type tests don't work for
        // some types in IE 11, we use a fingerprinting heuristic instead, based
        // on the methods. It's not great, but it's the best we got.
        // The fingerprint method lists are defined below.
        function ie11fingerprint(methods) {
          var length = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__getLength_js__["a" /* default */]
          )(methods);
          return function (obj) {
            if (obj == null) return false;
            // `Map`, `WeakMap` and `Set` have no enumerable keys.
            var keys = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__allKeys_js__["a" /* default */]
            )(obj);
            if (
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0__getLength_js__["a" /* default */]
              )(keys)
            )
              return false;
            for (var i = 0; i < length; i++) {
              if (
                !__webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_1__isFunction_js__[
                    "a" /* default */
                  ]
                )(obj[methods[i]])
              )
                return false;
            }
            // If we are testing against `WeakMap`, we need to ensure that
            // `obj` doesn't have a `forEach` method in order to distinguish
            // it from a regular `Map`.
            return (
              methods !== weakMapMethods ||
              !__webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__isFunction_js__["a" /* default */]
              )(obj[forEachName])
            );
          };
        }

        // In the interest of compact minification, we write
        // each string in the fingerprints only once.
        var forEachName = "forEach",
          hasName = "has",
          commonInit = ["clear", "delete"],
          mapTail = ["get", hasName, "set"];

        // `Map`, `WeakMap` and `Set` each have slightly different
        // combinations of the above sublists.
        var mapMethods = commonInit.concat(forEachName, mapTail),
          weakMapMethods = commonInit.concat(mapTail),
          setMethods = ["add"].concat(commonInit, forEachName, hasName);

        /***/
      },
      /* 31 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createAssigner_js__ =
          __webpack_require__(27);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__keys_js__ =
          __webpack_require__(2);

        // Assigns a given object with all the own properties in the passed-in
        // object(s).
        // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__createAssigner_js__["a" /* default */]
          )(__WEBPACK_IMPORTED_MODULE_1__keys_js__["a" /* default */]);

        /***/
      },
      /* 32 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createPredicateIndexFinder_js__ =
          __webpack_require__(50);

        // Returns the first index on an array-like that passes a truth test.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__createPredicateIndexFinder_js__[
              "a" /* default */
            ]
          )(1);

        /***/
      },
      /* 33 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = identity;
        // Keep the identity function around for default iteratees.
        function identity(value) {
          return value;
        }

        /***/
      },
      /* 34 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true,
        });
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "VERSION",
          function () {
            return __WEBPACK_IMPORTED_MODULE_0__setup_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__restArguments_js__ =
          __webpack_require__(6);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "restArguments",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__restArguments_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isObject_js__ =
          __webpack_require__(13);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isObject",
          function () {
            return __WEBPACK_IMPORTED_MODULE_2__isObject_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__isNull_js__ =
          __webpack_require__(154);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isNull",
          function () {
            return __WEBPACK_IMPORTED_MODULE_3__isNull_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__isUndefined_js__ =
          __webpack_require__(79);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isUndefined",
          function () {
            return __WEBPACK_IMPORTED_MODULE_4__isUndefined_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__isBoolean_js__ =
          __webpack_require__(73);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isBoolean",
          function () {
            return __WEBPACK_IMPORTED_MODULE_5__isBoolean_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__isElement_js__ =
          __webpack_require__(148);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isElement",
          function () {
            return __WEBPACK_IMPORTED_MODULE_6__isElement_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__isString_js__ =
          __webpack_require__(37);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isString",
          function () {
            return __WEBPACK_IMPORTED_MODULE_7__isString_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__isNumber_js__ =
          __webpack_require__(76);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isNumber",
          function () {
            return __WEBPACK_IMPORTED_MODULE_8__isNumber_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__isDate_js__ =
          __webpack_require__(147);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isDate",
          function () {
            return __WEBPACK_IMPORTED_MODULE_9__isDate_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__isRegExp_js__ =
          __webpack_require__(155);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isRegExp",
          function () {
            return __WEBPACK_IMPORTED_MODULE_10__isRegExp_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__isError_js__ =
          __webpack_require__(151);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isError",
          function () {
            return __WEBPACK_IMPORTED_MODULE_11__isError_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__isSymbol_js__ =
          __webpack_require__(77);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isSymbol",
          function () {
            return __WEBPACK_IMPORTED_MODULE_12__isSymbol_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__isArrayBuffer_js__ =
          __webpack_require__(72);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isArrayBuffer",
          function () {
            return __WEBPACK_IMPORTED_MODULE_13__isArrayBuffer_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__isDataView_js__ =
          __webpack_require__(36);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isDataView",
          function () {
            return __WEBPACK_IMPORTED_MODULE_14__isDataView_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__isArray_js__ =
          __webpack_require__(12);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isArray",
          function () {
            return __WEBPACK_IMPORTED_MODULE_15__isArray_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__isFunction_js__ =
          __webpack_require__(9);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isFunction",
          function () {
            return __WEBPACK_IMPORTED_MODULE_16__isFunction_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__isArguments_js__ =
          __webpack_require__(35);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isArguments",
          function () {
            return __WEBPACK_IMPORTED_MODULE_17__isArguments_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__isFinite_js__ =
          __webpack_require__(152);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isFinite",
          function () {
            return __WEBPACK_IMPORTED_MODULE_18__isFinite_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__isNaN_js__ =
          __webpack_require__(75);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isNaN",
          function () {
            return __WEBPACK_IMPORTED_MODULE_19__isNaN_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__isTypedArray_js__ =
          __webpack_require__(78);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isTypedArray",
          function () {
            return __WEBPACK_IMPORTED_MODULE_20__isTypedArray_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__isEmpty_js__ =
          __webpack_require__(149);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isEmpty",
          function () {
            return __WEBPACK_IMPORTED_MODULE_21__isEmpty_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__isMatch_js__ =
          __webpack_require__(74);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isMatch",
          function () {
            return __WEBPACK_IMPORTED_MODULE_22__isMatch_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__isEqual_js__ =
          __webpack_require__(150);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isEqual",
          function () {
            return __WEBPACK_IMPORTED_MODULE_23__isEqual_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__isMap_js__ =
          __webpack_require__(153);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isMap",
          function () {
            return __WEBPACK_IMPORTED_MODULE_24__isMap_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__isWeakMap_js__ =
          __webpack_require__(157);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isWeakMap",
          function () {
            return __WEBPACK_IMPORTED_MODULE_25__isWeakMap_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__isSet_js__ =
          __webpack_require__(156);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isSet",
          function () {
            return __WEBPACK_IMPORTED_MODULE_26__isSet_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__isWeakSet_js__ =
          __webpack_require__(158);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "isWeakSet",
          function () {
            return __WEBPACK_IMPORTED_MODULE_27__isWeakSet_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__keys_js__ =
          __webpack_require__(2);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "keys",
          function () {
            return __WEBPACK_IMPORTED_MODULE_28__keys_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__allKeys_js__ =
          __webpack_require__(20);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "allKeys",
          function () {
            return __WEBPACK_IMPORTED_MODULE_29__allKeys_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__values_js__ =
          __webpack_require__(16);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "values",
          function () {
            return __WEBPACK_IMPORTED_MODULE_30__values_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__pairs_js__ =
          __webpack_require__(168);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "pairs",
          function () {
            return __WEBPACK_IMPORTED_MODULE_31__pairs_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__invert_js__ =
          __webpack_require__(71);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "invert",
          function () {
            return __WEBPACK_IMPORTED_MODULE_32__invert_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__functions_js__ =
          __webpack_require__(66);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "functions",
          function () {
            return __WEBPACK_IMPORTED_MODULE_33__functions_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "methods",
          function () {
            return __WEBPACK_IMPORTED_MODULE_33__functions_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__extend_js__ =
          __webpack_require__(62);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "extend",
          function () {
            return __WEBPACK_IMPORTED_MODULE_34__extend_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__extendOwn_js__ =
          __webpack_require__(31);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "extendOwn",
          function () {
            return __WEBPACK_IMPORTED_MODULE_35__extendOwn_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "assign",
          function () {
            return __WEBPACK_IMPORTED_MODULE_35__extendOwn_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__defaults_js__ =
          __webpack_require__(59);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "defaults",
          function () {
            return __WEBPACK_IMPORTED_MODULE_36__defaults_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__create_js__ =
          __webpack_require__(133);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "create",
          function () {
            return __WEBPACK_IMPORTED_MODULE_37__create_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__clone_js__ =
          __webpack_require__(129);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "clone",
          function () {
            return __WEBPACK_IMPORTED_MODULE_38__clone_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__tap_js__ =
          __webpack_require__(180);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "tap",
          function () {
            return __WEBPACK_IMPORTED_MODULE_39__tap_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__get_js__ =
          __webpack_require__(67);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "get",
          function () {
            return __WEBPACK_IMPORTED_MODULE_40__get_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__has_js__ =
          __webpack_require__(142);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "has",
          function () {
            return __WEBPACK_IMPORTED_MODULE_41__has_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__mapObject_js__ =
          __webpack_require__(161);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "mapObject",
          function () {
            return __WEBPACK_IMPORTED_MODULE_42__mapObject_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__identity_js__ =
          __webpack_require__(33);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "identity",
          function () {
            return __WEBPACK_IMPORTED_MODULE_43__identity_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__constant_js__ =
          __webpack_require__(58);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "constant",
          function () {
            return __WEBPACK_IMPORTED_MODULE_44__constant_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__noop_js__ =
          __webpack_require__(82);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "noop",
          function () {
            return __WEBPACK_IMPORTED_MODULE_45__noop_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__toPath_js__ =
          __webpack_require__(90);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "toPath",
          function () {
            return __WEBPACK_IMPORTED_MODULE_46__toPath_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__property_js__ =
          __webpack_require__(41);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "property",
          function () {
            return __WEBPACK_IMPORTED_MODULE_47__property_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__propertyOf_js__ =
          __webpack_require__(170);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "propertyOf",
          function () {
            return __WEBPACK_IMPORTED_MODULE_48__propertyOf_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__matcher_js__ =
          __webpack_require__(25);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "matcher",
          function () {
            return __WEBPACK_IMPORTED_MODULE_49__matcher_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "matches",
          function () {
            return __WEBPACK_IMPORTED_MODULE_49__matcher_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__times_js__ =
          __webpack_require__(183);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "times",
          function () {
            return __WEBPACK_IMPORTED_MODULE_50__times_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__random_js__ =
          __webpack_require__(84);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "random",
          function () {
            return __WEBPACK_IMPORTED_MODULE_51__random_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__now_js__ =
          __webpack_require__(39);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "now",
          function () {
            return __WEBPACK_IMPORTED_MODULE_52__now_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__escape_js__ =
          __webpack_require__(136);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "escape",
          function () {
            return __WEBPACK_IMPORTED_MODULE_53__escape_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__unescape_js__ =
          __webpack_require__(185);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "unescape",
          function () {
            return __WEBPACK_IMPORTED_MODULE_54__unescape_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__templateSettings_js__ =
          __webpack_require__(88);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "templateSettings",
          function () {
            return __WEBPACK_IMPORTED_MODULE_55__templateSettings_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__template_js__ =
          __webpack_require__(181);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "template",
          function () {
            return __WEBPACK_IMPORTED_MODULE_56__template_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__result_js__ =
          __webpack_require__(175);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "result",
          function () {
            return __WEBPACK_IMPORTED_MODULE_57__result_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__uniqueId_js__ =
          __webpack_require__(187);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "uniqueId",
          function () {
            return __WEBPACK_IMPORTED_MODULE_58__uniqueId_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__chain_js__ =
          __webpack_require__(127);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "chain",
          function () {
            return __WEBPACK_IMPORTED_MODULE_59__chain_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__iteratee_js__ =
          __webpack_require__(80);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "iteratee",
          function () {
            return __WEBPACK_IMPORTED_MODULE_60__iteratee_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__partial_js__ =
          __webpack_require__(26);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "partial",
          function () {
            return __WEBPACK_IMPORTED_MODULE_61__partial_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__bind_js__ =
          __webpack_require__(57);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "bind",
          function () {
            return __WEBPACK_IMPORTED_MODULE_62__bind_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__bindAll_js__ =
          __webpack_require__(126);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "bindAll",
          function () {
            return __WEBPACK_IMPORTED_MODULE_63__bindAll_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__memoize_js__ =
          __webpack_require__(162);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "memoize",
          function () {
            return __WEBPACK_IMPORTED_MODULE_64__memoize_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__delay_js__ =
          __webpack_require__(60);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "delay",
          function () {
            return __WEBPACK_IMPORTED_MODULE_65__delay_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__defer_js__ =
          __webpack_require__(135);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "defer",
          function () {
            return __WEBPACK_IMPORTED_MODULE_66__defer_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__throttle_js__ =
          __webpack_require__(182);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "throttle",
          function () {
            return __WEBPACK_IMPORTED_MODULE_67__throttle_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__debounce_js__ =
          __webpack_require__(134);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "debounce",
          function () {
            return __WEBPACK_IMPORTED_MODULE_68__debounce_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__wrap_js__ =
          __webpack_require__(190);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "wrap",
          function () {
            return __WEBPACK_IMPORTED_MODULE_69__wrap_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__negate_js__ =
          __webpack_require__(38);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "negate",
          function () {
            return __WEBPACK_IMPORTED_MODULE_70__negate_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__compose_js__ =
          __webpack_require__(131);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "compose",
          function () {
            return __WEBPACK_IMPORTED_MODULE_71__compose_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__after_js__ =
          __webpack_require__(125);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "after",
          function () {
            return __WEBPACK_IMPORTED_MODULE_72__after_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__before_js__ =
          __webpack_require__(56);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "before",
          function () {
            return __WEBPACK_IMPORTED_MODULE_73__before_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_74__once_js__ =
          __webpack_require__(167);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "once",
          function () {
            return __WEBPACK_IMPORTED_MODULE_74__once_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__findKey_js__ =
          __webpack_require__(64);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "findKey",
          function () {
            return __WEBPACK_IMPORTED_MODULE_75__findKey_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_76__findIndex_js__ =
          __webpack_require__(32);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "findIndex",
          function () {
            return __WEBPACK_IMPORTED_MODULE_76__findIndex_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_77__findLastIndex_js__ =
          __webpack_require__(65);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "findLastIndex",
          function () {
            return __WEBPACK_IMPORTED_MODULE_77__findLastIndex_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__sortedIndex_js__ =
          __webpack_require__(87);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "sortedIndex",
          function () {
            return __WEBPACK_IMPORTED_MODULE_78__sortedIndex_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__indexOf_js__ =
          __webpack_require__(69);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "indexOf",
          function () {
            return __WEBPACK_IMPORTED_MODULE_79__indexOf_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_80__lastIndexOf_js__ =
          __webpack_require__(160);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "lastIndexOf",
          function () {
            return __WEBPACK_IMPORTED_MODULE_80__lastIndexOf_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__find_js__ =
          __webpack_require__(63);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "find",
          function () {
            return __WEBPACK_IMPORTED_MODULE_81__find_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "detect",
          function () {
            return __WEBPACK_IMPORTED_MODULE_81__find_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_82__findWhere_js__ =
          __webpack_require__(138);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "findWhere",
          function () {
            return __WEBPACK_IMPORTED_MODULE_82__findWhere_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_83__each_js__ =
          __webpack_require__(11);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "each",
          function () {
            return __WEBPACK_IMPORTED_MODULE_83__each_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "forEach",
          function () {
            return __WEBPACK_IMPORTED_MODULE_83__each_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_84__map_js__ =
          __webpack_require__(15);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "map",
          function () {
            return __WEBPACK_IMPORTED_MODULE_84__map_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "collect",
          function () {
            return __WEBPACK_IMPORTED_MODULE_84__map_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_85__reduce_js__ =
          __webpack_require__(172);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "reduce",
          function () {
            return __WEBPACK_IMPORTED_MODULE_85__reduce_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "foldl",
          function () {
            return __WEBPACK_IMPORTED_MODULE_85__reduce_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "inject",
          function () {
            return __WEBPACK_IMPORTED_MODULE_85__reduce_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_86__reduceRight_js__ =
          __webpack_require__(173);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "reduceRight",
          function () {
            return __WEBPACK_IMPORTED_MODULE_86__reduceRight_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "foldr",
          function () {
            return __WEBPACK_IMPORTED_MODULE_86__reduceRight_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_87__filter_js__ =
          __webpack_require__(22);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "filter",
          function () {
            return __WEBPACK_IMPORTED_MODULE_87__filter_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "select",
          function () {
            return __WEBPACK_IMPORTED_MODULE_87__filter_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_88__reject_js__ =
          __webpack_require__(174);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "reject",
          function () {
            return __WEBPACK_IMPORTED_MODULE_88__reject_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_89__every_js__ =
          __webpack_require__(137);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "every",
          function () {
            return __WEBPACK_IMPORTED_MODULE_89__every_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "all",
          function () {
            return __WEBPACK_IMPORTED_MODULE_89__every_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_90__some_js__ =
          __webpack_require__(178);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "some",
          function () {
            return __WEBPACK_IMPORTED_MODULE_90__some_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "any",
          function () {
            return __WEBPACK_IMPORTED_MODULE_90__some_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_91__contains_js__ =
          __webpack_require__(21);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "contains",
          function () {
            return __WEBPACK_IMPORTED_MODULE_91__contains_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "includes",
          function () {
            return __WEBPACK_IMPORTED_MODULE_91__contains_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "include",
          function () {
            return __WEBPACK_IMPORTED_MODULE_91__contains_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_92__invoke_js__ =
          __webpack_require__(146);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "invoke",
          function () {
            return __WEBPACK_IMPORTED_MODULE_92__invoke_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_93__pluck_js__ =
          __webpack_require__(40);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "pluck",
          function () {
            return __WEBPACK_IMPORTED_MODULE_93__pluck_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_94__where_js__ =
          __webpack_require__(188);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "where",
          function () {
            return __WEBPACK_IMPORTED_MODULE_94__where_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_95__max_js__ =
          __webpack_require__(81);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "max",
          function () {
            return __WEBPACK_IMPORTED_MODULE_95__max_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_96__min_js__ =
          __webpack_require__(163);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "min",
          function () {
            return __WEBPACK_IMPORTED_MODULE_96__min_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_97__shuffle_js__ =
          __webpack_require__(176);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "shuffle",
          function () {
            return __WEBPACK_IMPORTED_MODULE_97__shuffle_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_98__sample_js__ =
          __webpack_require__(86);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "sample",
          function () {
            return __WEBPACK_IMPORTED_MODULE_98__sample_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_99__sortBy_js__ =
          __webpack_require__(179);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "sortBy",
          function () {
            return __WEBPACK_IMPORTED_MODULE_99__sortBy_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_100__groupBy_js__ =
          __webpack_require__(141);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "groupBy",
          function () {
            return __WEBPACK_IMPORTED_MODULE_100__groupBy_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_101__indexBy_js__ =
          __webpack_require__(144);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "indexBy",
          function () {
            return __WEBPACK_IMPORTED_MODULE_101__indexBy_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_102__countBy_js__ =
          __webpack_require__(132);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "countBy",
          function () {
            return __WEBPACK_IMPORTED_MODULE_102__countBy_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_103__partition_js__ =
          __webpack_require__(169);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "partition",
          function () {
            return __WEBPACK_IMPORTED_MODULE_103__partition_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_104__toArray_js__ =
          __webpack_require__(89);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "toArray",
          function () {
            return __WEBPACK_IMPORTED_MODULE_104__toArray_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_105__size_js__ =
          __webpack_require__(177);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "size",
          function () {
            return __WEBPACK_IMPORTED_MODULE_105__size_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_106__pick_js__ =
          __webpack_require__(83);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "pick",
          function () {
            return __WEBPACK_IMPORTED_MODULE_106__pick_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_107__omit_js__ =
          __webpack_require__(166);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "omit",
          function () {
            return __WEBPACK_IMPORTED_MODULE_107__omit_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_108__first_js__ =
          __webpack_require__(139);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "first",
          function () {
            return __WEBPACK_IMPORTED_MODULE_108__first_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "head",
          function () {
            return __WEBPACK_IMPORTED_MODULE_108__first_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "take",
          function () {
            return __WEBPACK_IMPORTED_MODULE_108__first_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_109__initial_js__ =
          __webpack_require__(70);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "initial",
          function () {
            return __WEBPACK_IMPORTED_MODULE_109__initial_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_110__last_js__ =
          __webpack_require__(159);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "last",
          function () {
            return __WEBPACK_IMPORTED_MODULE_110__last_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_111__rest_js__ =
          __webpack_require__(85);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "rest",
          function () {
            return __WEBPACK_IMPORTED_MODULE_111__rest_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "tail",
          function () {
            return __WEBPACK_IMPORTED_MODULE_111__rest_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "drop",
          function () {
            return __WEBPACK_IMPORTED_MODULE_111__rest_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_112__compact_js__ =
          __webpack_require__(130);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "compact",
          function () {
            return __WEBPACK_IMPORTED_MODULE_112__compact_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_113__flatten_js__ =
          __webpack_require__(140);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "flatten",
          function () {
            return __WEBPACK_IMPORTED_MODULE_113__flatten_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_114__without_js__ =
          __webpack_require__(189);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "without",
          function () {
            return __WEBPACK_IMPORTED_MODULE_114__without_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_115__uniq_js__ =
          __webpack_require__(91);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "uniq",
          function () {
            return __WEBPACK_IMPORTED_MODULE_115__uniq_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "unique",
          function () {
            return __WEBPACK_IMPORTED_MODULE_115__uniq_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_116__union_js__ =
          __webpack_require__(186);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "union",
          function () {
            return __WEBPACK_IMPORTED_MODULE_116__union_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_117__intersection_js__ =
          __webpack_require__(145);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "intersection",
          function () {
            return __WEBPACK_IMPORTED_MODULE_117__intersection_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_118__difference_js__ =
          __webpack_require__(61);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "difference",
          function () {
            return __WEBPACK_IMPORTED_MODULE_118__difference_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_119__unzip_js__ =
          __webpack_require__(92);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "unzip",
          function () {
            return __WEBPACK_IMPORTED_MODULE_119__unzip_js__["a"];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "transpose",
          function () {
            return __WEBPACK_IMPORTED_MODULE_119__unzip_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_120__zip_js__ =
          __webpack_require__(191);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "zip",
          function () {
            return __WEBPACK_IMPORTED_MODULE_120__zip_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_121__object_js__ =
          __webpack_require__(165);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "object",
          function () {
            return __WEBPACK_IMPORTED_MODULE_121__object_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_122__range_js__ =
          __webpack_require__(171);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "range",
          function () {
            return __WEBPACK_IMPORTED_MODULE_122__range_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_123__chunk_js__ =
          __webpack_require__(128);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "chunk",
          function () {
            return __WEBPACK_IMPORTED_MODULE_123__chunk_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_124__mixin_js__ =
          __webpack_require__(164);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "mixin",
          function () {
            return __WEBPACK_IMPORTED_MODULE_124__mixin_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_125__underscore_array_methods_js__ =
          __webpack_require__(184);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function () {
            return __WEBPACK_IMPORTED_MODULE_125__underscore_array_methods_js__[
              "a"
            ];
          }
        );
        // Named Exports
        // =============

        //     Underscore.js 1.13.4
        //     https://underscorejs.org
        //     (c) 2009-2022 Jeremy Ashkenas, Julian Gonggrijp, and DocumentCloud and Investigative Reporters & Editors
        //     Underscore may be freely distributed under the MIT license.

        // Baseline setup.

        // Object Functions
        // ----------------
        // Our most fundamental functions operate on any JavaScript object.
        // Most functions in Underscore depend on at least one function in this section.

        // A group of functions that check the types of core JavaScript values.
        // These are often informally referred to as the "isType" functions.

        // Functions that treat an object as a dictionary of key-value pairs.

        // Utility Functions
        // -----------------
        // A bit of a grab bag: Predicate-generating functions for use with filters and
        // loops, string escaping and templating, create random numbers and unique ids,
        // and functions that facilitate Underscore's chaining and iteration conventions.

        // Function (ahem) Functions
        // -------------------------
        // These functions take a function as an argument and return a new function
        // as the result. Also known as higher-order functions.

        // Finders
        // -------
        // Functions that extract (the position of) a single element from an object
        // or array based on some criterion.

        // Collection Functions
        // --------------------
        // Functions that work on any collection of elements: either an array, or
        // an object of key-value pairs.

        // `_.pick` and `_.omit` are actually object functions, but we put
        // them here in order to create a more natural reading order in the
        // monolithic build as they depend on `_.contains`.

        // Array Functions
        // ---------------
        // Functions that operate on arrays (and array-likes) only, because they’re
        // expressed in terms of operations on an ordered list of values.

        // OOP
        // ---
        // These modules support the "object-oriented" calling style. See also
        // `underscore.js` and `index-default.js`.

        /***/
      },
      /* 35 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__has_js__ =
          __webpack_require__(10);

        var isArguments = __webpack_require__.i(
          __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
        )("Arguments");

        // Define a fallback version of the method in browsers (ahem, IE < 9), where
        // there isn't any inspectable "Arguments" type.
        (function () {
          if (!isArguments(arguments)) {
            isArguments = function (obj) {
              return __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__has_js__["a" /* default */]
              )(obj, "callee");
            };
          }
        })();

        /* harmony default export */ __webpack_exports__["a"] = isArguments;

        /***/
      },
      /* 36 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isFunction_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isArrayBuffer_js__ =
          __webpack_require__(72);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__stringTagBug_js__ =
          __webpack_require__(18);

        var isDataView = __webpack_require__.i(
          __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
        )("DataView");

        // In IE 10 - Edge 13, we need a different heuristic
        // to determine whether an object is a `DataView`.
        function ie10IsDataView(obj) {
          return (
            obj != null &&
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__isFunction_js__["a" /* default */]
            )(obj.getInt8) &&
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__isArrayBuffer_js__["a" /* default */]
            )(obj.buffer)
          );
        }

        /* harmony default export */ __webpack_exports__["a"] =
          __WEBPACK_IMPORTED_MODULE_3__stringTagBug_js__[
            "b" /* hasStringTagBug */
          ]
            ? ie10IsDataView
            : isDataView;

        /***/
      },
      /* 37 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);

        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
          )("String");

        /***/
      },
      /* 38 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = negate;
        // Returns a negated version of the passed-in predicate.
        function negate(predicate) {
          return function () {
            return !predicate.apply(this, arguments);
          };
        }

        /***/
      },
      /* 39 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        // A (possibly faster) way to get the current timestamp as an integer.
        /* harmony default export */ __webpack_exports__["a"] =
          Date.now ||
          function () {
            return new Date().getTime();
          };

        /***/
      },
      /* 40 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = pluck;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__map_js__ =
          __webpack_require__(15);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__property_js__ =
          __webpack_require__(41);

        // Convenience version of a common use case of `_.map`: fetching a property.
        function pluck(obj, key) {
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__map_js__["a" /* default */]
          )(
            obj,
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__property_js__["a" /* default */]
            )(key)
          );
        }

        /***/
      },
      /* 41 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = property;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__deepGet_js__ =
          __webpack_require__(28);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toPath_js__ =
          __webpack_require__(19);

        // Creates a function that, when passed an object, will traverse that object’s
        // properties down the given `path`, specified as an array of keys or indices.
        function property(path) {
          path = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_1__toPath_js__["a" /* default */]
          )(path);
          return function (obj) {
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__deepGet_js__["a" /* default */]
            )(obj, path);
          };
        }

        /***/
      },
      /* 42 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ALL_ORMS, _, kb, key, ko, value;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;
        ALL_ORMS = {
          default: null,
          "backbone-orm": null,
          "backbone-associations": __webpack_require__(114),
          "backbone-relational": __webpack_require__(115),
        }; // @nodoc

        kb.settings = {
          orm: ALL_ORMS["default"],
        };

        for (key in ALL_ORMS) {
          value = ALL_ORMS[key];

          if (value && value.isAvailable()) {
            break;
          }

          kb.settings.orm = value;
        } // @nodoc

        module.exports = function () {
          var options =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : {};
          var orm;

          for (key in options) {
            value = options[key];

            switch (key) {
              case "orm":
                // set by name
                if (_.isString(value)) {
                  if (!ALL_ORMS.hasOwnProperty(value)) {
                    console.log(
                      "Knockback configure: could not find orm: "
                        .concat(value, ". Available: ")
                        .concat(_.keys(ALL_ORMS).join(", "))
                    );
                    continue;
                  }

                  if ((orm = ALL_ORMS[value]) && !orm.isAvailable()) {
                    console.log(
                      "Knockback configure: could not enable orm ".concat(
                        value,
                        ". Make sure it is included before Knockback"
                      )
                    );
                    continue;
                  }

                  kb.settings.orm = orm;
                  continue;
                } else {
                  // set by functions
                  kb.settings.orm = value;
                }

                break;

              default:
                kb.settings[key] = value;
            }
          }
        };

        /***/
      },
      /* 43 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        var TypedValue, _, kb, ko;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;

        // @nodoc
        module.exports = TypedValue = /*#__PURE__*/ (function () {
          function TypedValue(create_options1) {
            _classCallCheck(this, TypedValue);

            this.create_options = create_options1;
            this._vo = ko.observable(null); // create a value observable for the first dependency
          }

          _createClass(TypedValue, [
            {
              key: "destroy",
              value: function destroy() {
                var previous_value;
                this.__kb_released = true;

                if ((previous_value = this.__kb_value)) {
                  this.__kb_value = null;

                  if (
                    this.create_options.store &&
                    kb.utils.wrappedCreator(previous_value)
                  ) {
                    this.create_options.store.release(previous_value);
                  } else {
                    kb.release(previous_value);
                  }
                }

                return (this.create_options = null);
              },
            },
            {
              key: "value",
              value: function value() {
                return ko.utils.unwrapObservable(this._vo());
              },
            },
            {
              key: "rawValue",
              value: function rawValue() {
                return this.__kb_value;
              },
            },
            {
              key: "valueType",
              value: function valueType(model, key) {
                var new_value;
                new_value = kb.getValue(model, key);
                this.value_type || this._updateValueObservable(new_value); // create so we can check the type

                return this.value_type;
              },
            },
            {
              key: "update",
              value: function update(new_value) {
                var new_type, ref, value;

                if (this.__kb_released) {
                  // destroyed, nothing to do
                  return;
                } // determine the new type

                new_value !== void 0 || (new_value = null); // ensure null instead of undefined

                new_type = kb.utils.valueType(new_value);

                if (
                  (ref = this.__kb_value) != null ? ref.__kb_released : void 0
                ) {
                  this.__kb_value = this.value_type = void 0;
                }

                value = this.__kb_value;

                switch (this.value_type) {
                  case kb.TYPE_COLLECTION:
                    if (
                      this.value_type === kb.TYPE_COLLECTION &&
                      new_type === kb.TYPE_ARRAY
                    ) {
                      return value(new_value);
                    }

                    if (
                      new_type === kb.TYPE_COLLECTION ||
                      _.isNull(new_value)
                    ) {
                      // use the provided CollectionObservable
                      if (
                        new_value &&
                        new_value instanceof kb.CollectionObservable
                      ) {
                        this._updateValueObservable(
                          kb.utils.wrappedObject(new_value),
                          new_value
                        );
                      } else {
                        if (kb.peek(value.collection) !== new_value) {
                          // collection observables are allocated once
                          value.collection(new_value);
                        }
                      }

                      return;
                    }

                    break;

                  case kb.TYPE_MODEL:
                    if (new_type === kb.TYPE_MODEL || _.isNull(new_value)) {
                      // use the provided ViewModel
                      if (new_value && !kb.isModel(new_value)) {
                        this._updateValueObservable(
                          kb.utils.wrappedObject(new_value),
                          new_value
                        );
                      } else {
                        if (
                          kb.utils.wrappedObject(value) !==
                          kb.utils.resolveModel(new_value)
                        ) {
                          this._updateValueObservable(new_value);
                        }
                      }

                      return;
                    }
                }

                if (
                  this.value_type === new_type &&
                  !_.isUndefined(this.value_type)
                ) {
                  if (kb.peek(value) !== new_value) {
                    return value(new_value);
                  }
                } else {
                  if (kb.peek(value) !== new_value) {
                    return this._updateValueObservable(new_value);
                  }
                }
              },
            },
            {
              key: "_updateValueObservable",
              value: function _updateValueObservable(
                new_value,
                new_observable
              ) {
                var create_options, creator, previous_value, value, value_type;
                create_options = this.create_options;
                creator = kb.utils.inferCreator(
                  new_value,
                  create_options.factory,
                  create_options.path
                ); // retain previous type

                if (new_value === null && !creator) {
                  if (this.value_type === kb.TYPE_MODEL) {
                    creator = kb.ViewModel;
                  } else if (this.value_type === kb.TYPE_COLLECTION) {
                    creator = kb.CollectionObservable;
                  }
                }

                create_options.creator = creator;
                value_type = kb.TYPE_UNKNOWN;
                var _ref = [this.__kb_value, void 0];
                previous_value = _ref[0];
                this.__kb_value = _ref[1];

                if (new_observable) {
                  value = new_observable;

                  if (create_options.store) {
                    create_options.store.retain(
                      new_observable,
                      new_value,
                      creator
                    );
                  } // found a creator
                } else if (creator) {
                  // have the store, use it to create
                  if (create_options.store) {
                    value = create_options.store.retainOrCreate(
                      new_value,
                      create_options,
                      true
                    );
                  } else {
                    // create manually
                    if (creator.models_only) {
                      value = new_value;
                      value_type = kb.TYPE_SIMPLE;
                    } else if (creator.create) {
                      value = creator.create(new_value, create_options);
                    } else {
                      value = new creator(new_value, create_options);
                    }
                  }
                } else {
                  // create and cache the type
                  if (_.isArray(new_value)) {
                    value_type = kb.TYPE_ARRAY;
                    value = ko.observableArray(new_value);
                  } else {
                    value_type = kb.TYPE_SIMPLE;
                    value = ko.observable(new_value);
                  }
                } // determine the type

                if ((this.value_type = value_type) === kb.TYPE_UNKNOWN) {
                  if (!ko.isObservable(value)) {
                    // a view model, recognize view_models as non-observable
                    this.value_type = kb.TYPE_MODEL;
                    kb.utils.wrappedObject(
                      value,
                      kb.utils.resolveModel(new_value)
                    );
                  } else if (value.__kb_is_co) {
                    this.value_type = kb.TYPE_COLLECTION;
                    kb.utils.wrappedObject(value, new_value);
                  } else if (!this.value_type) {
                    this.value_type = kb.TYPE_SIMPLE;
                  }
                } // release previous

                if (previous_value) {
                  if (this.create_options.store) {
                    this.create_options.store.release(previous_value);
                  } else {
                    kb.release(previous_value);
                  }
                } // store the value

                this.__kb_value = value;
                return this._vo(value);
              },
            },
            {
              key: "_inferType",
              value: function _inferType(value) {},
            },
          ]);

          return TypedValue;
        })();

        /***/
      },
      /* 44 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = baseCreate;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isObject_js__ =
          __webpack_require__(13);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__setup_js__ =
          __webpack_require__(1);

        // Create a naked function reference for surrogate-prototype-swapping.
        function ctor() {
          return function () {};
        }

        // An internal function for creating a new object that inherits from another.
        function baseCreate(prototype) {
          if (
            !__webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__isObject_js__["a" /* default */]
            )(prototype)
          )
            return {};
          if (__WEBPACK_IMPORTED_MODULE_1__setup_js__["g" /* nativeCreate */])
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__setup_js__["g" /* nativeCreate */]
            )(prototype);
          var Ctor = ctor();
          Ctor.prototype = prototype;
          var result = new Ctor();
          Ctor.prototype = null;
          return result;
        }

        /***/
      },
      /* 45 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          baseIteratee;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__identity_js__ =
          __webpack_require__(33);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isFunction_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isObject_js__ =
          __webpack_require__(13);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__isArray_js__ =
          __webpack_require__(12);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__matcher_js__ =
          __webpack_require__(25);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__property_js__ =
          __webpack_require__(41);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__optimizeCb_js__ =
          __webpack_require__(17);

        // An internal function to generate callbacks that can be applied to each
        // element in a collection, returning the desired result — either `_.identity`,
        // an arbitrary callback, a property matcher, or a property accessor.
        function baseIteratee(value, context, argCount) {
          if (value == null)
            return __WEBPACK_IMPORTED_MODULE_0__identity_js__[
              "a" /* default */
            ];
          if (
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__isFunction_js__["a" /* default */]
            )(value)
          )
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_6__optimizeCb_js__["a" /* default */]
            )(value, context, argCount);
          if (
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__isObject_js__["a" /* default */]
            )(value) &&
            !__webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_3__isArray_js__["a" /* default */]
            )(value)
          )
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_4__matcher_js__["a" /* default */]
            )(value);
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_5__property_js__["a" /* default */]
          )(value);
        }

        /***/
      },
      /* 46 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = chainResult;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__underscore_js__ =
          __webpack_require__(7);

        // Helper function to continue chaining intermediate results.
        function chainResult(instance, obj) {
          return instance._chain
            ? __webpack_require__
                .i(
                  __WEBPACK_IMPORTED_MODULE_0__underscore_js__[
                    "a" /* default */
                  ]
                )(obj)
                .chain()
            : obj;
        }

        /***/
      },
      /* 47 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          collectNonEnumProps;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isFunction_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__has_js__ =
          __webpack_require__(10);

        // Internal helper to create a simple lookup structure.
        // `collectNonEnumProps` used to depend on `_.contains`, but this led to
        // circular imports. `emulatedSet` is a one-off solution that only works for
        // arrays of strings.
        function emulatedSet(keys) {
          var hash = {};
          for (var l = keys.length, i = 0; i < l; ++i) hash[keys[i]] = true;
          return {
            contains: function (key) {
              return hash[key] === true;
            },
            push: function (key) {
              hash[key] = true;
              return keys.push(key);
            },
          };
        }

        // Internal helper. Checks `keys` for the presence of keys in IE < 9 that won't
        // be iterated by `for key in ...` and thus missed. Extends `keys` in place if
        // needed.
        function collectNonEnumProps(obj, keys) {
          keys = emulatedSet(keys);
          var nonEnumIdx =
            __WEBPACK_IMPORTED_MODULE_0__setup_js__[
              "i" /* nonEnumerableProps */
            ].length;
          var constructor = obj.constructor;
          var proto =
            (__webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__isFunction_js__["a" /* default */]
            )(constructor) &&
              constructor.prototype) ||
            __WEBPACK_IMPORTED_MODULE_0__setup_js__["j" /* ObjProto */];

          // Constructor is a special case.
          var prop = "constructor";
          if (
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__has_js__["a" /* default */]
            )(obj, prop) &&
            !keys.contains(prop)
          )
            keys.push(prop);

          while (nonEnumIdx--) {
            prop =
              __WEBPACK_IMPORTED_MODULE_0__setup_js__[
                "i" /* nonEnumerableProps */
              ][nonEnumIdx];
            if (
              prop in obj &&
              obj[prop] !== proto[prop] &&
              !keys.contains(prop)
            ) {
              keys.push(prop);
            }
          }
        }

        /***/
      },
      /* 48 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          createEscaper;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__keys_js__ =
          __webpack_require__(2);

        // Internal helper to generate functions for escaping and unescaping strings
        // to/from HTML interpolation.
        function createEscaper(map) {
          var escaper = function (match) {
            return map[match];
          };
          // Regexes for identifying a key that needs to be escaped.
          var source =
            "(?:" +
            __webpack_require__
              .i(__WEBPACK_IMPORTED_MODULE_0__keys_js__["a" /* default */])(map)
              .join("|") +
            ")";
          var testRegexp = RegExp(source);
          var replaceRegexp = RegExp(source, "g");
          return function (string) {
            string = string == null ? "" : "" + string;
            return testRegexp.test(string)
              ? string.replace(replaceRegexp, escaper)
              : string;
          };
        }

        /***/
      },
      /* 49 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          createIndexFinder;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getLength_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__setup_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isNaN_js__ =
          __webpack_require__(75);

        // Internal function to generate the `_.indexOf` and `_.lastIndexOf` functions.
        function createIndexFinder(dir, predicateFind, sortedIndex) {
          return function (array, item, idx) {
            var i = 0,
              length = __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0__getLength_js__["a" /* default */]
              )(array);
            if (typeof idx == "number") {
              if (dir > 0) {
                i = idx >= 0 ? idx : Math.max(idx + length, i);
              } else {
                length =
                  idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
              }
            } else if (sortedIndex && idx && length) {
              idx = sortedIndex(array, item);
              return array[idx] === item ? idx : -1;
            }
            if (item !== item) {
              idx = predicateFind(
                __WEBPACK_IMPORTED_MODULE_1__setup_js__["d" /* slice */].call(
                  array,
                  i,
                  length
                ),
                __WEBPACK_IMPORTED_MODULE_2__isNaN_js__["a" /* default */]
              );
              return idx >= 0 ? idx + i : -1;
            }
            for (
              idx = dir > 0 ? i : length - 1;
              idx >= 0 && idx < length;
              idx += dir
            ) {
              if (array[idx] === item) return idx;
            }
            return -1;
          };
        }

        /***/
      },
      /* 50 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          createPredicateIndexFinder;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cb_js__ =
          __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getLength_js__ =
          __webpack_require__(8);

        // Internal function to generate `_.findIndex` and `_.findLastIndex`.
        function createPredicateIndexFinder(dir) {
          return function (array, predicate, context) {
            predicate = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__cb_js__["a" /* default */]
            )(predicate, context);
            var length = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__getLength_js__["a" /* default */]
            )(array);
            var index = dir > 0 ? 0 : length - 1;
            for (; index >= 0 && index < length; index += dir) {
              if (predicate(array[index], index, array)) return index;
            }
            return -1;
          };
        }

        /***/
      },
      /* 51 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          createReduce;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__ =
          __webpack_require__(5);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__keys_js__ =
          __webpack_require__(2);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__optimizeCb_js__ =
          __webpack_require__(17);

        // Internal helper to create a reducing function, iterating left or right.
        function createReduce(dir) {
          // Wrap code that reassigns argument variables in a separate function than
          // the one that accesses `arguments.length` to avoid a perf hit. (#1991)
          var reducer = function (obj, iteratee, memo, initial) {
            var _keys =
                !__webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__[
                    "a" /* default */
                  ]
                )(obj) &&
                __webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_1__keys_js__["a" /* default */]
                )(obj),
              length = (_keys || obj).length,
              index = dir > 0 ? 0 : length - 1;
            if (!initial) {
              memo = obj[_keys ? _keys[index] : index];
              index += dir;
            }
            for (; index >= 0 && index < length; index += dir) {
              var currentKey = _keys ? _keys[index] : index;
              memo = iteratee(memo, obj[currentKey], currentKey, obj);
            }
            return memo;
          };

          return function (obj, iteratee, memo, context) {
            var initial = arguments.length >= 3;
            return reducer(
              obj,
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__optimizeCb_js__["a" /* default */]
              )(iteratee, context, 4),
              memo,
              initial
            );
          };
        }

        /***/
      },
      /* 52 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          createSizePropertyCheck;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);

        // Common internal logic for `isArrayLike` and `isBufferLike`.
        function createSizePropertyCheck(getSizeProperty) {
          return function (collection) {
            var sizeProperty = getSizeProperty(collection);
            return (
              typeof sizeProperty == "number" &&
              sizeProperty >= 0 &&
              sizeProperty <=
                __WEBPACK_IMPORTED_MODULE_0__setup_js__[
                  "e" /* MAX_ARRAY_INDEX */
                ]
            );
          };
        }

        /***/
      },
      /* 53 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        // Internal list of HTML entities for escaping.
        /* harmony default export */ __webpack_exports__["a"] = {
          "&": "&amp;",
          "<": "&lt;",
          ">": "&gt;",
          '"': "&quot;",
          "'": "&#x27;",
          "`": "&#x60;",
        };

        /***/
      },
      /* 54 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          executeBound;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__baseCreate_js__ =
          __webpack_require__(44);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isObject_js__ =
          __webpack_require__(13);

        // Internal function to execute `sourceFunc` bound to `context` with optional
        // `args`. Determines whether to execute a function as a constructor or as a
        // normal function.
        function executeBound(
          sourceFunc,
          boundFunc,
          context,
          callingContext,
          args
        ) {
          if (!(callingContext instanceof boundFunc))
            return sourceFunc.apply(context, args);
          var self = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__baseCreate_js__["a" /* default */]
          )(sourceFunc.prototype);
          var result = sourceFunc.apply(self, args);
          if (
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__isObject_js__["a" /* default */]
            )(result)
          )
            return result;
          return self;
        }

        /***/
      },
      /* 55 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          shallowProperty;
        // Internal helper to generate a function to obtain property `key` from `obj`.
        function shallowProperty(key) {
          return function (obj) {
            return obj == null ? void 0 : obj[key];
          };
        }

        /***/
      },
      /* 56 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = before;
        // Returns a function that will only be executed up to (but not including) the
        // Nth call.
        function before(times, func) {
          var memo;
          return function () {
            if (--times > 0) {
              memo = func.apply(this, arguments);
            }
            if (times <= 1) func = null;
            return memo;
          };
        }

        /***/
      },
      /* 57 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__restArguments_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isFunction_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__executeBound_js__ =
          __webpack_require__(54);

        // Create a function bound to a given object (assigning `this`, and arguments,
        // optionally).
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__restArguments_js__["a" /* default */]
          )(function (func, context, args) {
            if (
              !__webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__isFunction_js__["a" /* default */]
              )(func)
            )
              throw new TypeError("Bind must be called on a function");
            var bound = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__restArguments_js__["a" /* default */]
            )(function (callArgs) {
              return __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__executeBound_js__[
                  "a" /* default */
                ]
              )(func, bound, context, this, args.concat(callArgs));
            });
            return bound;
          });

        /***/
      },
      /* 58 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = constant;
        // Predicate-generating function. Often useful outside of Underscore.
        function constant(value) {
          return function () {
            return value;
          };
        }

        /***/
      },
      /* 59 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createAssigner_js__ =
          __webpack_require__(27);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__allKeys_js__ =
          __webpack_require__(20);

        // Fill in a given object with default properties.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__createAssigner_js__["a" /* default */]
          )(__WEBPACK_IMPORTED_MODULE_1__allKeys_js__["a" /* default */], true);

        /***/
      },
      /* 60 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__restArguments_js__ =
          __webpack_require__(6);

        // Delays a function for the given number of milliseconds, and then calls
        // it with the arguments supplied.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__restArguments_js__["a" /* default */]
          )(function (func, wait, args) {
            return setTimeout(function () {
              return func.apply(null, args);
            }, wait);
          });

        /***/
      },
      /* 61 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__restArguments_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__flatten_js__ =
          __webpack_require__(14);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__filter_js__ =
          __webpack_require__(22);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__contains_js__ =
          __webpack_require__(21);

        // Take the difference between one array and a number of other arrays.
        // Only the elements present in just the first array will remain.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__restArguments_js__["a" /* default */]
          )(function (array, rest) {
            rest = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__flatten_js__["a" /* default */]
            )(rest, true, true);
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__filter_js__["a" /* default */]
            )(array, function (value) {
              return !__webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_3__contains_js__["a" /* default */]
              )(rest, value);
            });
          });

        /***/
      },
      /* 62 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createAssigner_js__ =
          __webpack_require__(27);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__allKeys_js__ =
          __webpack_require__(20);

        // Extend a given object with all the properties in passed-in object(s).
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__createAssigner_js__["a" /* default */]
          )(__WEBPACK_IMPORTED_MODULE_1__allKeys_js__["a" /* default */]);

        /***/
      },
      /* 63 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = find;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__ =
          __webpack_require__(5);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__findIndex_js__ =
          __webpack_require__(32);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__findKey_js__ =
          __webpack_require__(64);

        // Return the first value which passes a truth test.
        function find(obj, predicate, context) {
          var keyFinder = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__["a" /* default */]
          )(obj)
            ? __WEBPACK_IMPORTED_MODULE_1__findIndex_js__["a" /* default */]
            : __WEBPACK_IMPORTED_MODULE_2__findKey_js__["a" /* default */];
          var key = keyFinder(obj, predicate, context);
          if (key !== void 0 && key !== -1) return obj[key];
        }

        /***/
      },
      /* 64 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = findKey;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cb_js__ =
          __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__keys_js__ =
          __webpack_require__(2);

        // Returns the first key on an object that passes a truth test.
        function findKey(obj, predicate, context) {
          predicate = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__cb_js__["a" /* default */]
          )(predicate, context);
          var _keys = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__keys_js__["a" /* default */]
            )(obj),
            key;
          for (var i = 0, length = _keys.length; i < length; i++) {
            key = _keys[i];
            if (predicate(obj[key], key, obj)) return key;
          }
        }

        /***/
      },
      /* 65 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createPredicateIndexFinder_js__ =
          __webpack_require__(50);

        // Returns the last index on an array-like that passes a truth test.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__createPredicateIndexFinder_js__[
              "a" /* default */
            ]
          )(-1);

        /***/
      },
      /* 66 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = functions;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isFunction_js__ =
          __webpack_require__(9);

        // Return a sorted list of the function names available on the object.
        function functions(obj) {
          var names = [];
          for (var key in obj) {
            if (
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0__isFunction_js__["a" /* default */]
              )(obj[key])
            )
              names.push(key);
          }
          return names.sort();
        }

        /***/
      },
      /* 67 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = get;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toPath_js__ =
          __webpack_require__(19);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__deepGet_js__ =
          __webpack_require__(28);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isUndefined_js__ =
          __webpack_require__(79);

        // Get the value of the (deep) property on `path` from `object`.
        // If any property in `path` does not exist or if the value is
        // `undefined`, return `defaultValue` instead.
        // The `path` is normalized through `_.toPath`.
        function get(object, path, defaultValue) {
          var value = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_1__deepGet_js__["a" /* default */]
          )(
            object,
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__toPath_js__["a" /* default */]
            )(path)
          );
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_2__isUndefined_js__["a" /* default */]
          )(value)
            ? defaultValue
            : value;
        }

        /***/
      },
      /* 68 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true,
        });
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index_default_js__ =
          __webpack_require__(143);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function () {
            return __WEBPACK_IMPORTED_MODULE_0__index_default_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__index_js__ =
          __webpack_require__(34);
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "VERSION",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["VERSION"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "restArguments",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["restArguments"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isObject",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isObject"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isNull",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isNull"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isUndefined",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isUndefined"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isBoolean",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isBoolean"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isElement",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isElement"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isString",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isString"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isNumber",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isNumber"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isDate",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isDate"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isRegExp",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isRegExp"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isError",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isError"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isSymbol",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isSymbol"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isArrayBuffer",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isArrayBuffer"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isDataView",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isDataView"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isArray",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isArray"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isFunction",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isFunction"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isArguments",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isArguments"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isFinite",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isFinite"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isNaN",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isNaN"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isTypedArray",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isTypedArray"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isEmpty",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isEmpty"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isMatch",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isMatch"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isEqual",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isEqual"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isMap",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isMap"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isWeakMap",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isWeakMap"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isSet",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isSet"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "isWeakSet",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["isWeakSet"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "keys",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["keys"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "allKeys",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["allKeys"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "values",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["values"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "pairs",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["pairs"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "invert",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["invert"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "functions",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["functions"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "methods",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["methods"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "extend",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["extend"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "extendOwn",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["extendOwn"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "assign",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["assign"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "defaults",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["defaults"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "create",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["create"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "clone",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["clone"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "tap",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["tap"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "get",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["get"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "has",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["has"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "mapObject",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["mapObject"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "identity",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["identity"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "constant",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["constant"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "noop",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["noop"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "toPath",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["toPath"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "property",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["property"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "propertyOf",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["propertyOf"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "matcher",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["matcher"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "matches",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["matches"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "times",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["times"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "random",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["random"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "now",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["now"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "escape",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["escape"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "unescape",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["unescape"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "templateSettings",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["templateSettings"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "template",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["template"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "result",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["result"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "uniqueId",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["uniqueId"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "chain",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["chain"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "iteratee",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["iteratee"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "partial",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["partial"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "bind",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["bind"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "bindAll",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["bindAll"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "memoize",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["memoize"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "delay",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["delay"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "defer",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["defer"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "throttle",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["throttle"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "debounce",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["debounce"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "wrap",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["wrap"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "negate",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["negate"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "compose",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["compose"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "after",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["after"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "before",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["before"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "once",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["once"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "findKey",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["findKey"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "findIndex",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["findIndex"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "findLastIndex",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["findLastIndex"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "sortedIndex",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["sortedIndex"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "indexOf",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["indexOf"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "lastIndexOf",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["lastIndexOf"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "find",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["find"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "detect",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["detect"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "findWhere",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["findWhere"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "each",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["each"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "forEach",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["forEach"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "map",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["map"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "collect",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["collect"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "reduce",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["reduce"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "foldl",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["foldl"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "inject",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["inject"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "reduceRight",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["reduceRight"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "foldr",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["foldr"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "filter",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["filter"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "select",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["select"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "reject",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["reject"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "every",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["every"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "all",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["all"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "some",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["some"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "any",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["any"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "contains",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["contains"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "includes",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["includes"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "include",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["include"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "invoke",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["invoke"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "pluck",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["pluck"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "where",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["where"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "max",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["max"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "min",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["min"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "shuffle",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["shuffle"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "sample",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["sample"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "sortBy",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["sortBy"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "groupBy",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["groupBy"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "indexBy",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["indexBy"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "countBy",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["countBy"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "partition",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["partition"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "toArray",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["toArray"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "size",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["size"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "pick",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["pick"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "omit",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["omit"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "first",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["first"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "head",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["head"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "take",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["take"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "initial",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["initial"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "last",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["last"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "rest",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["rest"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "tail",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["tail"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "drop",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["drop"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "compact",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["compact"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "flatten",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["flatten"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "without",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["without"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "uniq",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["uniq"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "unique",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["unique"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "union",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["union"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "intersection",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["intersection"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "difference",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["difference"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "unzip",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["unzip"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "transpose",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["transpose"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "zip",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["zip"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "object",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["object"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "range",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["range"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "chunk",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["chunk"];
          }
        );
        /* harmony namespace reexport (by provided) */ __webpack_require__.d(
          __webpack_exports__,
          "mixin",
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__index_js__["mixin"];
          }
        );
        // ESM Exports
        // ===========
        // This module is the package entry point for ES module users. In other words,
        // it is the module they are interfacing with when they import from the whole
        // package instead of from a submodule, like this:
        //
        // ```js
        // import { map } from 'underscore';
        // ```
        //
        // The difference with `./index-default`, which is the package entry point for
        // CommonJS, AMD and UMD users, is purely technical. In ES modules, named and
        // default exports are considered to be siblings, so when you have a default
        // export, its properties are not automatically available as named exports. For
        // this reason, we re-export the named exports in addition to providing the same
        // default export as in `./index-default`.

        /***/
      },
      /* 69 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__sortedIndex_js__ =
          __webpack_require__(87);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__findIndex_js__ =
          __webpack_require__(32);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__createIndexFinder_js__ =
          __webpack_require__(49);

        // Return the position of the first occurrence of an item in an array,
        // or -1 if the item is not included in the array.
        // If the array is large and already in sort order, pass `true`
        // for **isSorted** to use binary search.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_2__createIndexFinder_js__[
              "a" /* default */
            ]
          )(
            1,
            __WEBPACK_IMPORTED_MODULE_1__findIndex_js__["a" /* default */],
            __WEBPACK_IMPORTED_MODULE_0__sortedIndex_js__["a" /* default */]
          );

        /***/
      },
      /* 70 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = initial;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);

        // Returns everything but the last entry of the array. Especially useful on
        // the arguments object. Passing **n** will return all the values in
        // the array, excluding the last N.
        function initial(array, n, guard) {
          return __WEBPACK_IMPORTED_MODULE_0__setup_js__["d" /* slice */].call(
            array,
            0,
            Math.max(0, array.length - (n == null || guard ? 1 : n))
          );
        }

        /***/
      },
      /* 71 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = invert;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__keys_js__ =
          __webpack_require__(2);

        // Invert the keys and values of an object. The values must be serializable.
        function invert(obj) {
          var result = {};
          var _keys = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__keys_js__["a" /* default */]
          )(obj);
          for (var i = 0, length = _keys.length; i < length; i++) {
            result[obj[_keys[i]]] = _keys[i];
          }
          return result;
        }

        /***/
      },
      /* 72 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);

        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
          )("ArrayBuffer");

        /***/
      },
      /* 73 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isBoolean;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);

        // Is a given value a boolean?
        function isBoolean(obj) {
          return (
            obj === true ||
            obj === false ||
            __WEBPACK_IMPORTED_MODULE_0__setup_js__["l" /* toString */].call(
              obj
            ) === "[object Boolean]"
          );
        }

        /***/
      },
      /* 74 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isMatch;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__keys_js__ =
          __webpack_require__(2);

        // Returns whether an object has a given set of `key:value` pairs.
        function isMatch(object, attrs) {
          var _keys = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__keys_js__["a" /* default */]
            )(attrs),
            length = _keys.length;
          if (object == null) return !length;
          var obj = Object(object);
          for (var i = 0; i < length; i++) {
            var key = _keys[i];
            if (attrs[key] !== obj[key] || !(key in obj)) return false;
          }
          return true;
        }

        /***/
      },
      /* 75 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isNaN;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isNumber_js__ =
          __webpack_require__(76);

        // Is the given value `NaN`?
        function isNaN(obj) {
          return (
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__isNumber_js__["a" /* default */]
            )(obj) &&
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__setup_js__["q" /* _isNaN */]
            )(obj)
          );
        }

        /***/
      },
      /* 76 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);

        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
          )("Number");

        /***/
      },
      /* 77 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);

        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
          )("Symbol");

        /***/
      },
      /* 78 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isDataView_js__ =
          __webpack_require__(36);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constant_js__ =
          __webpack_require__(58);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__isBufferLike_js__ =
          __webpack_require__(121);

        // Is a given value a typed array?
        var typedArrayPattern =
          /\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\]/;
        function isTypedArray(obj) {
          // `ArrayBuffer.isView` is the most future-proof, so use it when available.
          // Otherwise, fall back on the above regular expression.
          return __WEBPACK_IMPORTED_MODULE_0__setup_js__["o" /* nativeIsView */]
            ? __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0__setup_js__["o" /* nativeIsView */]
              )(obj) &&
                !__webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_1__isDataView_js__[
                    "a" /* default */
                  ]
                )(obj)
            : __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_3__isBufferLike_js__[
                  "a" /* default */
                ]
              )(obj) &&
                typedArrayPattern.test(
                  __WEBPACK_IMPORTED_MODULE_0__setup_js__[
                    "l" /* toString */
                  ].call(obj)
                );
        }

        /* harmony default export */ __webpack_exports__["a"] =
          __WEBPACK_IMPORTED_MODULE_0__setup_js__["p" /* supportsArrayBuffer */]
            ? isTypedArray
            : __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__constant_js__["a" /* default */]
              )(false);

        /***/
      },
      /* 79 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isUndefined;
        // Is a given variable undefined?
        function isUndefined(obj) {
          return obj === void 0;
        }

        /***/
      },
      /* 80 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = iteratee;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__underscore_js__ =
          __webpack_require__(7);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__baseIteratee_js__ =
          __webpack_require__(45);

        // External wrapper for our callback generator. Users may customize
        // `_.iteratee` if they want additional predicate/iteratee shorthand styles.
        // This abstraction hides the internal-only `argCount` argument.
        function iteratee(value, context) {
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_1__baseIteratee_js__["a" /* default */]
          )(value, context, Infinity);
        }
        __WEBPACK_IMPORTED_MODULE_0__underscore_js__[
          "a" /* default */
        ].iteratee = iteratee;

        /***/
      },
      /* 81 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = max;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__ =
          __webpack_require__(5);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__values_js__ =
          __webpack_require__(16);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__cb_js__ =
          __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__each_js__ =
          __webpack_require__(11);

        // Return the maximum element (or element-based computation).
        function max(obj, iteratee, context) {
          var result = -Infinity,
            lastComputed = -Infinity,
            value,
            computed;
          if (
            iteratee == null ||
            (typeof iteratee == "number" &&
              typeof obj[0] != "object" &&
              obj != null)
          ) {
            obj = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__["a" /* default */]
            )(obj)
              ? obj
              : __webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_1__values_js__["a" /* default */]
                )(obj);
            for (var i = 0, length = obj.length; i < length; i++) {
              value = obj[i];
              if (value != null && value > result) {
                result = value;
              }
            }
          } else {
            iteratee = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__cb_js__["a" /* default */]
            )(iteratee, context);
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_3__each_js__["a" /* default */]
            )(obj, function (v, index, list) {
              computed = iteratee(v, index, list);
              if (
                computed > lastComputed ||
                (computed === -Infinity && result === -Infinity)
              ) {
                result = v;
                lastComputed = computed;
              }
            });
          }
          return result;
        }

        /***/
      },
      /* 82 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = noop;
        // Predicate-generating function. Often useful outside of Underscore.
        function noop() {}

        /***/
      },
      /* 83 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__restArguments_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isFunction_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__optimizeCb_js__ =
          __webpack_require__(17);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__allKeys_js__ =
          __webpack_require__(20);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__keyInObj_js__ =
          __webpack_require__(122);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__flatten_js__ =
          __webpack_require__(14);

        // Return a copy of the object only containing the allowed properties.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__restArguments_js__["a" /* default */]
          )(function (obj, keys) {
            var result = {},
              iteratee = keys[0];
            if (obj == null) return result;
            if (
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__isFunction_js__["a" /* default */]
              )(iteratee)
            ) {
              if (keys.length > 1)
                iteratee = __webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_2__optimizeCb_js__[
                    "a" /* default */
                  ]
                )(iteratee, keys[1]);
              keys = __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_3__allKeys_js__["a" /* default */]
              )(obj);
            } else {
              iteratee =
                __WEBPACK_IMPORTED_MODULE_4__keyInObj_js__["a" /* default */];
              keys = __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_5__flatten_js__["a" /* default */]
              )(keys, false, false);
              obj = Object(obj);
            }
            for (var i = 0, length = keys.length; i < length; i++) {
              var key = keys[i];
              var value = obj[key];
              if (iteratee(value, key, obj)) result[key] = value;
            }
            return result;
          });

        /***/
      },
      /* 84 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = random;
        // Return a random integer between `min` and `max` (inclusive).
        function random(min, max) {
          if (max == null) {
            max = min;
            min = 0;
          }
          return min + Math.floor(Math.random() * (max - min + 1));
        }

        /***/
      },
      /* 85 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = rest;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);

        // Returns everything but the first entry of the `array`. Especially useful on
        // the `arguments` object. Passing an **n** will return the rest N values in the
        // `array`.
        function rest(array, n, guard) {
          return __WEBPACK_IMPORTED_MODULE_0__setup_js__["d" /* slice */].call(
            array,
            n == null || guard ? 1 : n
          );
        }

        /***/
      },
      /* 86 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = sample;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__ =
          __webpack_require__(5);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__values_js__ =
          __webpack_require__(16);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getLength_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__random_js__ =
          __webpack_require__(84);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__toArray_js__ =
          __webpack_require__(89);

        // Sample **n** random values from a collection using the modern version of the
        // [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
        // If **n** is not specified, returns a single random element.
        // The internal `guard` argument allows it to work with `_.map`.
        function sample(obj, n, guard) {
          if (n == null || guard) {
            if (
              !__webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__["a" /* default */]
              )(obj)
            )
              obj = __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__values_js__["a" /* default */]
              )(obj);
            return obj[
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_3__random_js__["a" /* default */]
              )(obj.length - 1)
            ];
          }
          var sample = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_4__toArray_js__["a" /* default */]
          )(obj);
          var length = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_2__getLength_js__["a" /* default */]
          )(sample);
          n = Math.max(Math.min(n, length), 0);
          var last = length - 1;
          for (var index = 0; index < n; index++) {
            var rand = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_3__random_js__["a" /* default */]
            )(index, last);
            var temp = sample[index];
            sample[index] = sample[rand];
            sample[rand] = temp;
          }
          return sample.slice(0, n);
        }

        /***/
      },
      /* 87 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = sortedIndex;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cb_js__ =
          __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getLength_js__ =
          __webpack_require__(8);

        // Use a comparator function to figure out the smallest index at which
        // an object should be inserted so as to maintain order. Uses binary search.
        function sortedIndex(array, obj, iteratee, context) {
          iteratee = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__cb_js__["a" /* default */]
          )(iteratee, context, 1);
          var value = iteratee(obj);
          var low = 0,
            high = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__getLength_js__["a" /* default */]
            )(array);
          while (low < high) {
            var mid = Math.floor((low + high) / 2);
            if (iteratee(array[mid]) < value) low = mid + 1;
            else high = mid;
          }
          return low;
        }

        /***/
      },
      /* 88 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__underscore_js__ =
          __webpack_require__(7);

        // By default, Underscore uses ERB-style template delimiters. Change the
        // following template settings to use alternative delimiters.
        /* harmony default export */ __webpack_exports__["a"] =
          __WEBPACK_IMPORTED_MODULE_0__underscore_js__[
            "a" /* default */
          ].templateSettings = {
            evaluate: /<%([\s\S]+?)%>/g,
            interpolate: /<%=([\s\S]+?)%>/g,
            escape: /<%-([\s\S]+?)%>/g,
          };

        /***/
      },
      /* 89 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = toArray;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isArray_js__ =
          __webpack_require__(12);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__setup_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isString_js__ =
          __webpack_require__(37);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__isArrayLike_js__ =
          __webpack_require__(5);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__map_js__ =
          __webpack_require__(15);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__identity_js__ =
          __webpack_require__(33);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__values_js__ =
          __webpack_require__(16);

        // Safely create a real, live array from anything iterable.
        var reStrSymbol =
          /[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;
        function toArray(obj) {
          if (!obj) return [];
          if (
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__isArray_js__["a" /* default */]
            )(obj)
          )
            return __WEBPACK_IMPORTED_MODULE_1__setup_js__[
              "d" /* slice */
            ].call(obj);
          if (
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__isString_js__["a" /* default */]
            )(obj)
          ) {
            // Keep surrogate pair characters together.
            return obj.match(reStrSymbol);
          }
          if (
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_3__isArrayLike_js__["a" /* default */]
            )(obj)
          )
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_4__map_js__["a" /* default */]
            )(
              obj,
              __WEBPACK_IMPORTED_MODULE_5__identity_js__["a" /* default */]
            );
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_6__values_js__["a" /* default */]
          )(obj);
        }

        /***/
      },
      /* 90 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = toPath;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__underscore_js__ =
          __webpack_require__(7);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isArray_js__ =
          __webpack_require__(12);

        // Normalize a (deep) property `path` to array.
        // Like `_.iteratee`, this function can be customized.
        function toPath(path) {
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_1__isArray_js__["a" /* default */]
          )(path)
            ? path
            : [path];
        }
        __WEBPACK_IMPORTED_MODULE_0__underscore_js__["a" /* default */].toPath =
          toPath;

        /***/
      },
      /* 91 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = uniq;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isBoolean_js__ =
          __webpack_require__(73);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__cb_js__ =
          __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getLength_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__contains_js__ =
          __webpack_require__(21);

        // Produce a duplicate-free version of the array. If the array has already
        // been sorted, you have the option of using a faster algorithm.
        // The faster algorithm will not work with an iteratee if the iteratee
        // is not a one-to-one function, so providing an iteratee will disable
        // the faster algorithm.
        function uniq(array, isSorted, iteratee, context) {
          if (
            !__webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__isBoolean_js__["a" /* default */]
            )(isSorted)
          ) {
            context = iteratee;
            iteratee = isSorted;
            isSorted = false;
          }
          if (iteratee != null)
            iteratee = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__cb_js__["a" /* default */]
            )(iteratee, context);
          var result = [];
          var seen = [];
          for (
            var i = 0,
              length = __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__getLength_js__["a" /* default */]
              )(array);
            i < length;
            i++
          ) {
            var value = array[i],
              computed = iteratee ? iteratee(value, i, array) : value;
            if (isSorted && !iteratee) {
              if (!i || seen !== computed) result.push(value);
              seen = computed;
            } else if (iteratee) {
              if (
                !__webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_3__contains_js__["a" /* default */]
                )(seen, computed)
              ) {
                seen.push(computed);
                result.push(value);
              }
            } else if (
              !__webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_3__contains_js__["a" /* default */]
              )(result, value)
            ) {
              result.push(value);
            }
          }
          return result;
        }

        /***/
      },
      /* 92 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = unzip;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__max_js__ =
          __webpack_require__(81);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getLength_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pluck_js__ =
          __webpack_require__(40);

        // Complement of zip. Unzip accepts an array of arrays and groups
        // each array's elements on shared indices.
        function unzip(array) {
          var length =
            (array &&
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0__max_js__["a" /* default */]
              )(
                array,
                __WEBPACK_IMPORTED_MODULE_1__getLength_js__["a" /* default */]
              ).length) ||
            0;
          var result = Array(length);

          for (var index = 0; index < length; index++) {
            result[index] = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__pluck_js__["a" /* default */]
            )(array, index);
          }
          return result;
        }

        /***/
      },
      /* 93 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var COMPARE_ASCENDING,
          COMPARE_DESCENDING,
          COMPARE_EQUAL,
          KEYS_PUBLISH,
          _,
          kb,
          ko,
          indexOf = [].indexOf;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;
        COMPARE_EQUAL = 0;
        COMPARE_ASCENDING = -1;
        COMPARE_DESCENDING = 1;
        KEYS_PUBLISH = [
          "destroy",
          "shareOptions",
          "filters",
          "comparator",
          "sortAttribute",
          "viewModelByModel",
          "hasViewModels",
        ];

        kb.compare = function (value_a, value_b) {
          if (_.isString(value_a)) {
            // String compare
            return value_a.localeCompare("".concat(value_b));
          }

          if (_.isString(value_b)) {
            return value_b.localeCompare("".concat(value_a));
          } // compare raw values

          if (value_a === value_b) {
            return COMPARE_EQUAL;
          } else {
            if (value_a < value_b) {
              return COMPARE_ASCENDING;
            } else {
              return COMPARE_DESCENDING;
            }
          }
        };

        kb.CollectionObservable = function () {
          // Base class for observing collections.
          // @example How to create a ko.CollectionObservable using the ko.collectionObservable factory.
          //   var collection = new Collection([{name: 'name1'}, {name: 'name2'}]);
          //   var view_model = {
          //     todos: kb.collectionObservable(collection)
          //   };
          // @example How to access and change the observed collection.
          //    var todos = new kb.CollectionObservable(new kb.Collection([{name: 'name1'}, {name: 'name2'}]);
          //    var current_collection = todos.collection(); // get
          //    todos.collection(new Backbone.Collection([{name: 'name3'}, {name: 'name4'}])); // set
          // @method .extend(prototype_properties, class_properties)
          //   Class method for JavaScript inheritance.
          //   @param [Object] prototype_properties the properties to add to the prototype
          //   @param [Object] class_properties the properties to add to the class
          //   @return [ko.observable] the constructor does not return 'this' but a ko.observableArray
          //   @example
          //     var MyCollectionObservable = kb.CollectionObservable.extend({
          //        constructor: function(collection, options) {
          //          // the constructor does not return 'this' but a ko.observableArray
          //          return kb.CollectionObservable.prototype.constructor.call(this, collection, {
          //            view_model: MyViewModel,
          //            options: options
          //        });
          //     });
          // @method #collection()
          //   Dual-purpose getter/setter ko.computed for the observed collection.
          //   @return [Collection|void] getter: the collection whose models are being observed (can be null) OR setter: void
          var CollectionObservable = /*#__PURE__*/ (function () {
            // Used to create a new kb.CollectionObservable.
            // When the observable is updated, the following Backbone.Events are triggered:
            // * ***add***: (view_model, collection_observable) or if batch: (collection_observable)
            // * ***resort***: (view_model, collection_observable, new_index) or if batch: (collection_observable)
            // * ***remove***: (view_model, collection_observable) or if batch: (collection_observable)
            // @param [Collection] collection the collection to observe (can be null)
            // @param [Object] options the create options
            // @option options [Boolean] models_only flag for skipping the creation of view models. The collection observable will be populated with (possibly sorted) models.
            // @option options [Boolean] auto_compact flag used to compact memory used by the collection observable when large changes occur, eg. resetting the collection.
            // @option options [Constructor] view_model the view model constructor used for models in the collection. Signature: constructor(model, options)
            // @option options [Function] create a function used to create a view model for models in the collection. Signature: create(model, options)
            // @option options [Object] factories a map of dot-deliminated paths; for example 'models.owner': kb.ViewModel to either constructors or create functions. Signature: 'some.path': function(object, options)
            // @option options [Function] comparator a function that is used to sort an object. Signature: `function(model_a, model_b)` returns negative value for ascending, 0 for equal, and positive for descending
            // @option options [String] sort_attribute the name of an attribute. Default: resort on all changes to a model.
            // @option options [Id|Function|Array] filters filters can be individual ids (observable or simple) or arrays of ids, functions, or arrays of functions.
            // @option options [String] path the path to the value (used to create related observables from the factory).
            // @option options [kb.Store] store a store used to cache and share view models.
            // @option options [kb.Factory] factory a factory used to create view models.
            // @option options [Object] options a set of options merge into these options. Useful for extending options when deriving classes rather than merging them by hand.
            // @return [ko.observableArray] the constructor does not return 'this' but a ko.observableArray
            // @note the constructor does not return 'this' but a ko.observableArray
            function CollectionObservable(collection, view_model, options) {
              var _this = this;

              _classCallCheck(this, CollectionObservable);

              var args; // @nodoc

              this._onCollectionChange = this._onCollectionChange.bind(this);
              args = Array.prototype.slice.call(
                _.isArguments(collection) ? collection : arguments
              );
              return kb.ignore(function () {
                var arg, create_options, i, len, observable;
                collection =
                  args[0] instanceof kb.Collection
                    ? args.shift()
                    : _.isArray(args[0])
                    ? new kb.Collection(args.shift())
                    : new kb.Collection();

                if (_.isFunction(args[0])) {
                  args[0] = {
                    view_model: args[0],
                  };
                }

                options = {};

                for (i = 0, len = args.length; i < len; i++) {
                  arg = args[i];

                  _.extend(options, arg);
                }

                observable = kb.utils.wrappedObservable(
                  _this,
                  ko.observableArray([])
                );
                observable.__kb_is_co = true; // mark as a kb.CollectionObservable

                _this.in_edit = 0; // bind callbacks

                _this.__kb || (_this.__kb = {}); // options

                options = kb.utils.collapseOptions(options);

                if (options.auto_compact) {
                  _this.auto_compact = true;
                }

                if (options.sort_attribute) {
                  _this._comparator = ko.observable(
                    _this._attributeComparator(options.sort_attribute)
                  );
                } else {
                  _this._comparator = ko.observable(options.comparator);
                }

                if (options.filters) {
                  _this._filters = ko.observableArray(
                    _.isArray(options.filters)
                      ? options.filters
                      : options.filters
                      ? [options.filters]
                      : void 0
                  );
                } else {
                  _this._filters = ko.observableArray([]);
                }

                create_options = _this.create_options = {
                  store: kb.Store.useOptionsOrCreate(
                    options,
                    collection,
                    observable
                  ), // create options
                };
                kb.utils.wrappedObject(observable, collection); // view model factory create factories

                _this.path = options.path;
                create_options.factory = kb.utils.wrappedFactory(
                  observable,
                  _this._shareOrCreateFactory(options)
                );
                create_options.path = kb.utils.pathJoin(options.path, "models"); // check for models only

                create_options.creator = create_options.factory.creatorForPath(
                  null,
                  create_options.path
                );

                if (create_options.creator) {
                  _this.models_only = create_options.creator.models_only;
                } // publish public interface on the observable and return instead of this

                kb.publishMethods(observable, _this, KEYS_PUBLISH); // start the processing

                _this._collection = ko.observable(collection);
                observable.collection = _this.collection = ko.computed({
                  read: function read() {
                    return _this._collection();
                  },
                  write: function write(new_collection) {
                    return kb.ignore(function () {
                      var previous_collection;

                      if (
                        (previous_collection = _this._collection()) ===
                        new_collection
                      ) {
                        // no change
                        return;
                      } // @create_options.store.reuse(@, new_collection) # not meant to be shared

                      kb.utils.wrappedObject(observable, new_collection);

                      if (previous_collection) {
                        // clean up
                        previous_collection.unbind(
                          "all",
                          _this._onCollectionChange
                        );
                      }

                      if (new_collection) {
                        // store in _kb_collection so that a collection() function can be exposed on the observable and so the collection can be
                        new_collection.bind("all", _this._onCollectionChange);
                      } // update references (including notification)

                      return _this._collection(new_collection);
                    });
                  },
                });

                if (collection) {
                  // bind now
                  collection.bind("all", _this._onCollectionChange);
                } // observable that will re-trigger when sort or filters or collection changes

                _this._mapper = ko.computed(function () {
                  var comparator,
                    current_collection,
                    filter,
                    filters,
                    models,
                    previous_view_models,
                    view_models;
                  comparator = _this._comparator(); // create dependency

                  filters = _this._filters(); // create dependency

                  if (filters) {
                    // create a dependency
                    (function () {
                      var j, len1, results;
                      results = [];

                      for (j = 0, len1 = filters.length; j < len1; j++) {
                        filter = filters[j];
                        results.push(ko.utils.unwrapObservable(filter));
                      }

                      return results;
                    })();
                  }

                  current_collection = _this._collection(); // create dependency

                  if (_this.in_edit) {
                    // we are doing the editing
                    return;
                  } // no models

                  observable = kb.utils.wrappedObservable(_this);
                  previous_view_models = kb.peek(observable);

                  if (current_collection) {
                    models = current_collection.models;
                  }

                  if (!models || current_collection.models.length === 0) {
                    view_models = [];
                  } else {
                    // apply filters
                    // process filters, sorting, etc
                    models = _.filter(models, function (model) {
                      return !filters.length || _this._selectModel(model);
                    }); // apply sorting

                    if (comparator) {
                      view_models = _.map(models, function (model) {
                        return _this._createViewModel(model);
                      }).sort(comparator);
                    } else {
                      // no sorting
                      if (_this.models_only) {
                        view_models = filters.length ? models : models.slice(); // clone the array if it wasn't filtered
                      } else {
                        view_models = _.map(models, function (model) {
                          return _this._createViewModel(model);
                        });
                      }
                    }
                  } // update the observable array for this collection observable

                  _this.in_edit++;
                  observable(view_models);
                  _this.in_edit--;
                }); // start subscribing
                // TODO: release previous
                // unless @models_only
                //   create_options.store.release(view_model) for view_model in previous_view_models

                observable.subscribe(
                  _.bind(_this._onObservableArrayChange, _this)
                );
                !kb.statistics ||
                  kb.statistics.register("CollectionObservable", _this); // collect memory management statistics

                return observable;
              });
            } // Required clean up function to break cycles, release view models, etc.
            // Can be called directly, via kb.release(object) or as a consequence of ko.releaseNode(element).

            _createClass(CollectionObservable, [
              {
                key: "destroy",
                value: function destroy() {
                  var array, collection, observable;
                  this.__kb_released = true;
                  observable = kb.utils.wrappedObservable(this);
                  collection = kb.peek(this._collection);
                  kb.utils.wrappedObject(observable, null);

                  if (collection) {
                    collection.unbind("all", this._onCollectionChange);
                    array = kb.peek(observable);
                    array.splice(0, array.length); // clear the view models or models
                  }

                  this.collection.dispose();
                  this._collection =
                    observable.collection =
                    this.collection =
                      null;

                  this._mapper.dispose();

                  this._mapper = null;
                  kb.release(this._filters);
                  this._filters = null;

                  this._comparator(null);

                  this._comparator = null;
                  this.create_options = null;
                  observable.collection = null;
                  kb.utils.wrappedDestroy(this);
                  return (
                    !kb.statistics ||
                    kb.statistics.unregister("CollectionObservable", this)
                  ); // collect memory management statistics
                }, // Get the options for a new collection that can be used for sharing view models.
                // @example Sharing view models for an HTML select element.
                //   var selected_collection = new Backbone.Collection();
                //   var available_collection = new Backbone.Collection([{name: 'Bob'}, {name: 'Fred'}]);
                //   var selected = kb.collectionObservable(available_collection);
                //   var available = kb.collectionObservable(available_collection, available_collection.shareOptions()); // view models shared with selected collection observable
              },
              {
                key: "shareOptions",
                value: function shareOptions() {
                  var observable;
                  observable = kb.utils.wrappedObservable(this);
                  return {
                    store: kb.utils.wrappedStore(observable),
                    factory: kb.utils.wrappedFactory(observable),
                  };
                }, // Setter for the filters array for excluding models in the collection observable.
                // @param [Id|Function|Array] filters filters can be individual ids (observable or simple) or arrays of ids, functions, or arrays of functions.
                // @example
                //    // exclude a single model by id
                //    collection_observable.filters(model.id);
              },
              {
                key: "filters",
                value: function filters(_filters) {
                  if (_filters) {
                    return this._filters(
                      _.isArray(_filters) ? _filters : [_filters]
                    );
                  } else {
                    return this._filters([]);
                  }
                }, // Setter for the sorted index function for auto-sorting the ViewModels or Models in a kb.CollectionObservable.
                // @param [Function] comparator a function that returns an index where to insert the model. Signature: function(models, model)
                // @param [Function] comparator a function that is used to sort an object. Signature: `function(model_a, model_b)` returns negative value for ascending, 0 for equal, and positive for descending
                // @example
                //    // change the sorting function
                //    collection_observable.comparator(
                //      function(view_models, vm){
                //        return _.comparator(view_models, vm, (test) -> kb.utils.wrappedModel(test).get('name'));
                //      }
                //    );
              },
              {
                key: "comparator",
                value: function comparator(_comparator) {
                  return this._comparator(_comparator);
                }, // Setter for the sort attribute name for auto-sorting the ViewModels or Models in a kb.CollectionObservable.
                // @param [String] sort_attribute the name of an attribute. Default: resort on all changes to a model.
                // @example
                //    var todos = new kb.CollectionObservable(new Backbone.Collection([{name: 'Zanadu', name: 'Alex'}]));
                //    // in order of Zanadu then Alex
                //    todos.sortAttribute('name');
                //    // in order of Alex then Zanadu
              },
              {
                key: "sortAttribute",
                value: function sortAttribute(sort_attribute) {
                  return this._comparator(
                    sort_attribute
                      ? this._attributeComparator(sort_attribute)
                      : null
                  );
                }, // Reverse lookup for a view model by model. If created with models_only option, will return null.
              },
              {
                key: "viewModelByModel",
                value: function viewModelByModel(model) {
                  var id_attribute;

                  if (this.models_only) {
                    return null;
                  }

                  id_attribute = model.hasOwnProperty(model.idAttribute)
                    ? model.idAttribute
                    : "cid";
                  return _.find(
                    kb.peek(kb.utils.wrappedObservable(this)),
                    function (test) {
                      var ref;

                      if (
                        test != null
                          ? (ref = test.__kb) != null
                            ? ref.object
                            : void 0
                          : void 0
                      ) {
                        return (
                          test.__kb.object[id_attribute] === model[id_attribute]
                        );
                      } else {
                        return false;
                      }
                    }
                  );
                }, // Will return true unless created with models_only option.
                // @example
                //   var todos1 = new kb.CollectionObservable(new Backbone.Collection(), {models_only: true});
                //   todos1.hasViewModels();     // false
                //   var todos2 = new kb.CollectionObservable(new Backbone.Collection());
                //   todos2.hasViewModels();     // true
              },
              {
                key: "hasViewModels",
                value: function hasViewModels() {
                  return !this.models_only;
                }, // Compacts the Collection Observable to use the least amount of memory. Currently, this is brute force meaning it releases than regenerates all view models when called.
              },
              {
                key: "compact",
                value: function compact() {
                  var _this2 = this;

                  return kb.ignore(function () {
                    var observable;
                    observable = kb.utils.wrappedObservable(_this2);

                    if (!kb.utils.wrappedStoreIsOwned(observable)) {
                      return;
                    }

                    kb.utils.wrappedStore(observable).clear();
                    return _this2._collection.notifySubscribers(
                      _this2._collection()
                    );
                  });
                }, //###################################################
                // Internal
                //###################################################
                // @nodoc
              },
              {
                key: "_shareOrCreateFactory",
                value: function _shareOrCreateFactory(options) {
                  var absolute_models_path,
                    existing_creator,
                    factories,
                    factory;
                  absolute_models_path = kb.utils.pathJoin(
                    options.path,
                    "models"
                  );
                  factories = options.factories; // check the existing factory

                  if ((factory = options.factory)) {
                    // models matches, check additional paths
                    if (
                      (existing_creator = factory.creatorForPath(
                        null,
                        absolute_models_path
                      )) &&
                      (!factories || factories["models"] === existing_creator)
                    ) {
                      if (!factories) {
                        // all match, share the factory
                        return factory;
                      }

                      if (factory.hasPathMappings(factories, options.path)) {
                        // all match, share the factory
                        return factory;
                      }
                    }
                  } // need to create a new factory

                  factory = new kb.Factory(options.factory);

                  if (factories) {
                    factory.addPathMappings(factories, options.path);
                  } // set up the default create function

                  if (!factory.creatorForPath(null, absolute_models_path)) {
                    if (options.hasOwnProperty("models_only")) {
                      if (options.models_only) {
                        factory.addPathMapping(absolute_models_path, {
                          models_only: true,
                        });
                      } else {
                        factory.addPathMapping(
                          absolute_models_path,
                          kb.ViewModel
                        );
                      }
                    } else if (options.view_model) {
                      factory.addPathMapping(
                        absolute_models_path,
                        options.view_model
                      );
                    } else if (options.create) {
                      factory.addPathMapping(absolute_models_path, {
                        create: options.create,
                      });
                    } else {
                      factory.addPathMapping(
                        absolute_models_path,
                        kb.ViewModel
                      );
                    }
                  }

                  return factory;
                },
              },
              {
                key: "_onCollectionChange",
                value: function _onCollectionChange(event, arg) {
                  var _this3 = this;

                  return kb.ignore(function () {
                    var collection, comparator, observable, view_model;

                    if (_this3.in_edit || kb.wasReleased(_this3)) {
                      // we are doing the editing or have been released
                      return;
                    }

                    switch (event) {
                      case "reset":
                        if (_this3.auto_compact) {
                          _this3.compact();
                        } else {
                          _this3._collection.notifySubscribers(
                            _this3._collection()
                          );
                        }

                        break;

                      case "sort":
                      case "resort":
                        _this3._collection.notifySubscribers(
                          _this3._collection()
                        );

                        break;

                      case "new":
                      case "add":
                        if (!_this3._selectModel(arg)) {
                          // filtered
                          return;
                        }

                        observable = kb.utils.wrappedObservable(_this3);
                        collection = _this3._collection();

                        if (collection.indexOf(arg) === -1) {
                          // the model may have been removed before we got a chance to add it
                          return;
                        }

                        if ((view_model = _this3.viewModelByModel(arg))) {
                          // it may have already been added by a change event
                          return;
                        }

                        _this3.in_edit++;

                        if ((comparator = _this3._comparator())) {
                          observable().push(_this3._createViewModel(arg));
                          observable.sort(comparator);
                        } else {
                          observable.splice(
                            collection.indexOf(arg),
                            0,
                            _this3._createViewModel(arg)
                          );
                        }

                        _this3.in_edit--;
                        break;

                      case "remove":
                      case "destroy":
                        _this3._onModelRemove(arg);

                        break;

                      case "change":
                        if (!_this3._selectModel(arg)) {
                          // filtered, remove
                          return _this3._onModelRemove(arg);
                        }

                        view_model = _this3.models_only
                          ? arg
                          : _this3.viewModelByModel(arg);

                        if (!view_model) {
                          // add new
                          return _this3._onCollectionChange("add", arg);
                        }

                        if (!(comparator = _this3._comparator())) {
                          return;
                        }

                        _this3.in_edit++;
                        kb.utils.wrappedObservable(_this3).sort(comparator);
                        _this3.in_edit--;
                    }
                  });
                }, // @nodoc
              },
              {
                key: "_onModelRemove",
                value: function _onModelRemove(model) {
                  var observable, view_model;
                  view_model = this.models_only
                    ? model
                    : this.viewModelByModel(model); // either remove a view model or a model

                  if (!view_model) {
                    // it may have already been removed
                    return;
                  }

                  observable = kb.utils.wrappedObservable(this);
                  this.in_edit++;
                  observable.remove(view_model);
                  return this.in_edit--;
                }, // @nodoc
              },
              {
                key: "_onObservableArrayChange",
                value: function _onObservableArrayChange(
                  models_or_view_models
                ) {
                  var _this4 = this;

                  return kb.ignore(function () {
                    var collection,
                      current_view_model,
                      has_filters,
                      i,
                      len,
                      model,
                      models,
                      observable,
                      view_model,
                      view_models;

                    if (_this4.in_edit) {
                      // we are doing the editing
                      return;
                    } // validate input

                    (_this4.models_only &&
                      (!models_or_view_models.length ||
                        kb.isModel(models_or_view_models[0]))) ||
                      (!_this4.models_only &&
                        (!models_or_view_models.length ||
                          (_.isObject(models_or_view_models[0]) &&
                            !kb.isModel(models_or_view_models[0])))) ||
                      kb._throwUnexpected(_this4, "incorrect type passed");
                    observable = kb.utils.wrappedObservable(_this4);
                    collection = kb.peek(_this4._collection);
                    has_filters = kb.peek(_this4._filters).length;

                    if (!collection) {
                      // no collection or we are updating ourselves
                      return;
                    }

                    view_models = models_or_view_models; // set Models

                    if (_this4.models_only) {
                      models = _.filter(
                        models_or_view_models,
                        function (model) {
                          return !has_filters || _this4._selectModel(model);
                        }
                      );
                    } else {
                      // set ViewModels
                      !has_filters || (view_models = []); // check for filtering of ViewModels

                      models = [];

                      for (
                        i = 0, len = models_or_view_models.length;
                        i < len;
                        i++
                      ) {
                        view_model = models_or_view_models[i];
                        model = kb.utils.wrappedObject(view_model);

                        if (has_filters) {
                          if (!_this4._selectModel(model)) {
                            // filtered so skip
                            continue;
                          }

                          view_models.push(view_model);
                        } // check for view models being different (will occur if a ko select selectedOptions is bound to this collection observable) -> update our store

                        if (
                          (current_view_model =
                            _this4.create_options.store.find(
                              model,
                              _this4.create_options.creator
                            ))
                        ) {
                          current_view_model.constructor ===
                            view_model.constructor ||
                            kb._throwUnexpected(
                              _this4,
                              "replacing different type of view model"
                            );
                        }

                        _this4.create_options.store.retain(
                          view_model,
                          model,
                          _this4.create_options.creator
                        );

                        models.push(model);
                      }
                    } // a change, update models

                    _this4.in_edit++;
                    models_or_view_models.length === view_models.length ||
                      observable(view_models); // replace the ViewModels because they were filtered

                    _.isEqual(collection.models, models) ||
                      collection.reset(models);
                    _this4.in_edit--;
                  });
                }, // @nodoc
              },
              {
                key: "_attributeComparator",
                value: function _attributeComparator(sort_attribute) {
                  var modelAttributeCompare;

                  modelAttributeCompare = function modelAttributeCompare(
                    model_a,
                    model_b
                  ) {
                    var attribute_name;
                    attribute_name = ko.utils.unwrapObservable(sort_attribute);
                    return kb.compare(
                      model_a.get(attribute_name),
                      model_b.get(attribute_name)
                    );
                  };

                  return this.models_only
                    ? modelAttributeCompare
                    : function (model_a, model_b) {
                        return modelAttributeCompare(
                          kb.utils.wrappedModel(model_a),
                          kb.utils.wrappedModel(model_b)
                        );
                      };
                }, // @nodoc
              },
              {
                key: "_createViewModel",
                value: function _createViewModel(model) {
                  if (this.models_only) {
                    return model;
                  }

                  return this.create_options.store.retainOrCreate(
                    model,
                    this.create_options
                  );
                }, // @nodoc
              },
              {
                key: "_selectModel",
                value: function _selectModel(model) {
                  var filter, filters, i, len, ref;
                  filters = kb.peek(this._filters);

                  for (i = 0, len = filters.length; i < len; i++) {
                    filter = filters[i];
                    filter = kb.peek(filter);

                    if (_.isFunction(filter)) {
                      if (!filter(model)) {
                        return false;
                      }
                    } else if (_.isArray(filter)) {
                      if (((ref = model.id), indexOf.call(filter, ref) < 0)) {
                        return false;
                      }
                    } else {
                      if (model.id !== filter) {
                        return false;
                      }
                    }
                  }

                  return true;
                },
              },
            ]);

            return CollectionObservable;
          })(); // @nodoc

          CollectionObservable.extend = kb.extend; // for Backbone non-Coffeescript inheritance (use "kb.SuperClass.extend({})" in Javascript instead of "class MyClass extends kb.SuperClass")

          return CollectionObservable;
        }.call(void 0); // factory function

        kb.collectionObservable = function (collection, view_model, options) {
          return new kb.CollectionObservable(arguments);
        };

        kb.observableCollection = kb.collectionObservable;

        /***/
      },
      /* 94 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var _, kb, ko;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;

        // Used to provide a central place to aggregate registered Model events rather than having all kb.Observables register for updates independently.
        kb.EventWatcher = /*#__PURE__*/ (function () {
          function EventWatcher(emitter, obj, callback_options) {
            _classCallCheck(this, EventWatcher);

            //###################################################
            // Internal
            //###################################################
            // @nodoc
            // NOTE: this is called by registerCallbacks so the model could already be bound and we just want to bind the new info
            // NOTE: this is called by emitter so it may be used to clear a previous emitter without triggering an intermediate change
            this._onModelLoaded = this._onModelLoaded.bind(this); // @nodoc

            this._onModelUnloaded = this._onModelUnloaded.bind(this); // @nodoc

            this._unbindCallbacks = this._unbindCallbacks.bind(this);
            this.__kb || (this.__kb = {});
            this.__kb.callbacks = {};
            this.ee = null;

            if (callback_options) {
              this.registerCallbacks(obj, callback_options);
            }

            if (emitter) {
              this.emitter(emitter);
            }
          } // Required clean up function to break cycles, release view emitters, etc.
          // Can be called directly, via kb.release(object) or as a consequence of ko.releaseNode(element).

          _createClass(
            EventWatcher,
            [
              {
                key: "destroy",
                value: function destroy() {
                  this.emitter(null);
                  this.__kb.callbacks = null;
                  return kb.utils.wrappedDestroy(this);
                }, // Dual-purpose getter/setter for the observed emitter.
                // @overload emitter()
                //   Gets the emitter or emitter reference
                //   @return [Model|ModelRef] the emitter whose attributes are being observed (can be null)
                // @overload emitter(new_emitter)
                //   Sets the emitter or emitter reference
                //   @param [Model|ModelRef] new_emitter the emitter whose attributes will be observed (can be null)
              },
              {
                key: "emitter",
                value: function emitter(new_emitter) {
                  if (arguments.length === 0 || this.ee === new_emitter) {
                    // get or no change
                    return this.ee;
                  } // clear and unbind previous

                  if (this.model_ref) {
                    this.model_ref.unbind("loaded", this._onModelLoaded);
                    this.model_ref.unbind("unloaded", this._onModelUnloaded);
                    this.model_ref.release();
                    this.model_ref = null;
                  } // set up current

                  if (
                    kb.Backbone &&
                    kb.Backbone.ModelRef &&
                    new_emitter instanceof kb.Backbone.ModelRef
                  ) {
                    this.model_ref = new_emitter;
                    this.model_ref.retain();
                    this.model_ref.bind("loaded", this._onModelLoaded);
                    this.model_ref.bind("unloaded", this._onModelUnloaded);
                    new_emitter = this.model_ref.model() || null;
                  } else {
                    delete this.model_ref;
                  } // switch bindings

                  if (this.ee !== new_emitter) {
                    if (new_emitter) {
                      this._onModelLoaded(new_emitter);
                    } else {
                      this._onModelUnloaded(this.ee);
                    }
                  }

                  return new_emitter;
                }, // Used to register callbacks for an emitter.
                // @param [Object] obj the owning object.
                // @param [Object] callback_info the callback information
                // @option options [Function] emitter callback for when the emitter changes (eg. is loaded). Signature: function(new_emitter)
                // @option options [Function] update callback for when the registered emitter is triggered. Signature: function(new_value)
                // @option options [String] emitter_name the name of the emitter.
                // @option options [String] key the optional key to filter update attribute events.
              },
              {
                key: "registerCallbacks",
                value: function registerCallbacks(obj, callback_info) {
                  var _this = this;

                  var event_name, event_names, i, len, model;
                  obj || kb._throwMissing(this, "obj");
                  callback_info || kb._throwMissing(this, "callback_info");
                  event_names = callback_info.event_selector
                    ? callback_info.event_selector.split(" ")
                    : ["change"];
                  model = this.ee;

                  for (i = 0, len = event_names.length; i < len; i++) {
                    event_name = event_names[i];

                    if (!event_name) {
                      // extra spaces
                      continue;
                    }

                    (function (event_name) {
                      var callbacks, info;

                      if (!(callbacks = _this.__kb.callbacks[event_name])) {
                        callbacks = _this.__kb.callbacks[event_name] = {
                          model: null,
                          list: [],
                          fn: function fn(model) {
                            var info, j, len1, ref;
                            ref = callbacks.list;

                            for (j = 0, len1 = ref.length; j < len1; j++) {
                              info = ref[j];

                              if (!info.update) {
                                continue;
                              }

                              if (
                                model &&
                                info.key &&
                                model.hasChanged &&
                                !model.hasChanged(
                                  ko.utils.unwrapObservable(info.key)
                                )
                              ) {
                                // key doesn't match
                                continue;
                              }

                              !kb.statistics ||
                                kb.statistics.addModelEvent({
                                  name: event_name,
                                  model: model,
                                  key: info.key,
                                  path: info.path,
                                });
                              info.update(); // trigger update
                            }

                            return null;
                          },
                        };
                      }

                      callbacks.list.push(
                        (info = _.defaults(
                          {
                            obj: obj,
                          },
                          callback_info
                        ))
                      ); // store the callback information

                      if (model) {
                        return _this._onModelLoaded(model);
                      }
                    })(event_name);
                  }

                  return this;
                },
              },
              {
                key: "releaseCallbacks",
                value: function releaseCallbacks(obj) {
                  var callbacks, event_name, ref;
                  this.ee = null;
                  ref = this.__kb.callbacks; // unbind all events

                  for (event_name in ref) {
                    callbacks = ref[event_name];

                    this._unbindCallbacks(
                      event_name,
                      callbacks,
                      kb.wasReleased(obj)
                    );
                  }

                  return delete this.__kb.callbacks;
                },
              },
              {
                key: "_onModelLoaded",
                value: function _onModelLoaded(model) {
                  var callbacks, event_name, i, info, len, ref, ref1, ref2;
                  this.ee = model;
                  ref = this.__kb.callbacks; // bind all events

                  for (event_name in ref) {
                    callbacks = ref[event_name];

                    if (callbacks.model && callbacks.model !== model) {
                      this._unbindCallbacks(event_name, callbacks, true);
                    }

                    if (!callbacks.model) {
                      (callbacks.model = model),
                        model.bind(event_name, callbacks.fn);
                    }

                    ref1 = callbacks.list;

                    for (i = 0, len = ref1.length; i < len; i++) {
                      info = ref1[i];
                      info.unbind_fn ||
                        (info.unbind_fn =
                          (ref2 = kb.settings.orm) != null
                            ? ref2.bind(model, info.key, info.update, info.path)
                            : void 0);
                      info.emitter ? info.emitter(model) : void 0;
                    }
                  }
                },
              },
              {
                key: "_onModelUnloaded",
                value: function _onModelUnloaded(model) {
                  var callbacks, event_name, ref;

                  if (this.ee !== model) {
                    return;
                  }

                  this.ee = null;
                  ref = this.__kb.callbacks; // unbind all events

                  for (event_name in ref) {
                    callbacks = ref[event_name];

                    this._unbindCallbacks(event_name, callbacks);
                  }
                },
              },
              {
                key: "_unbindCallbacks",
                value: function _unbindCallbacks(
                  event_name,
                  callbacks,
                  skip_emitter
                ) {
                  var i, info, len, ref;

                  if (callbacks.model) {
                    callbacks.model.unbind(event_name, callbacks.fn),
                      (callbacks.model = null);
                  }

                  ref = callbacks.list;

                  for (i = 0, len = ref.length; i < len; i++) {
                    info = ref[i];

                    if (info.unbind_fn) {
                      info.unbind_fn(), (info.unbind_fn = null);
                    }

                    if (
                      info.emitter &&
                      !skip_emitter &&
                      !kb.wasReleased(info.obj)
                    ) {
                      info.emitter(null);
                    }
                  }
                },
              },
            ],
            [
              {
                key: "useOptionsOrCreate",
                // Used to either register yourself with the existing emitter watcher or to create a new one.
                value:
                  // @param [Object] options please pass the options from your constructor to the register method. For example, constructor(emitter, options)
                  // @param [Model|ModelRef] obj the Model that will own or register with the store
                  // @param [ko.observable|Object] emitter the emitters of the event watcher
                  // @param [Object] callback_options information about the event and callback to register
                  // @option options [Function] emitter callback for when the emitter changes (eg. is loaded). Signature: function(new_emitter)
                  // @option options [Function] update callback for when the registered event is triggered. Signature: function(new_value)
                  // @option options [String] event_selector the name or names of events.
                  // @option options [String] key the optional key to filter update attribute events.
                  function useOptionsOrCreate(
                    options,
                    emitter,
                    obj,
                    callback_options
                  ) {
                    if (options.event_watcher) {
                      if (
                        !(
                          options.event_watcher.emitter() === emitter ||
                          options.event_watcher.model_ref === emitter
                        )
                      ) {
                        kb._throwUnexpected(this, "emitter not matching");
                      }

                      return kb.utils
                        .wrappedEventWatcher(obj, options.event_watcher)
                        .registerCallbacks(obj, callback_options);
                    } else {
                      kb.utils.wrappedEventWatcherIsOwned(obj, true);
                      return kb.utils
                        .wrappedEventWatcher(obj, new kb.EventWatcher(emitter))
                        .registerCallbacks(obj, callback_options);
                    }
                  },
              },
            ]
          );

          return EventWatcher;
        })(); // factory function

        kb.emitterObservable = function (emitter, observable) {
          return new kb.EventWatcher(emitter, observable);
        };

        /***/
      },
      /* 95 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var _, kb;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;

        // Used to share the hierachy of constructors and create functions by path to allow for custom creation per Model attribute.
        // @example Create an instance by path.
        //   var factory = new kb.Factory();
        //   factory.addPathMapping('bob.the.builder', kb.ViewModel);
        //   view_model = factory.createForPath(new Backbone.Model({name: 'Bob'}), 'bob.the.builder'); // creates kb.ViewModel
        kb.Factory = /*#__PURE__*/ (function () {
          function Factory(parent_factory) {
            _classCallCheck(this, Factory);

            this.paths = {};

            if (parent_factory) {
              this.parent_factory = parent_factory;
            }
          }

          _createClass(
            Factory,
            [
              {
                key: "hasPath",
                value: function hasPath(path) {
                  var ref;
                  return (
                    this.paths.hasOwnProperty(path) ||
                    ((ref = this.parent_factory) != null
                      ? ref.hasPath(path)
                      : void 0)
                  );
                },
              },
              {
                key: "addPathMapping",
                value: function addPathMapping(path, create_info) {
                  return (this.paths[path] = create_info);
                },
              },
              {
                key: "addPathMappings",
                value: function addPathMappings(factories, owner_path) {
                  var create_info, path;

                  for (path in factories) {
                    create_info = factories[path];
                    this.paths[kb.utils.pathJoin(owner_path, path)] =
                      create_info;
                  }
                },
              },
              {
                key: "hasPathMappings",
                value: function hasPathMappings(factories, owner_path) {
                  var all_exist, creator, existing_creator, path;
                  all_exist = true;

                  for (path in factories) {
                    creator = factories[path];
                    all_exist &=
                      (existing_creator = this.creatorForPath(
                        null,
                        kb.utils.pathJoin(owner_path, path)
                      )) && creator === existing_creator;
                  }

                  return all_exist;
                }, // If possible, creates an observable for an object using a dot-deliminated path.
                // @example Create an instance by path.
                //   var factory = new kb.Factory();
                //   factory.addPathMapping('bob.the.builder', kb.ViewModel);
                //   view_model = factory.createForPath(new Backbone.Model({name: 'Bob'}), 'bob.the.builder'); // creates kb.ViewModel
              },
              {
                key: "creatorForPath",
                value: function creatorForPath(obj, path) {
                  var creator, ref;

                  if ((creator = this.paths[path])) {
                    return creator.view_model ? creator.view_model : creator;
                  }

                  if (
                    (creator =
                      (ref = this.parent_factory) != null
                        ? ref.creatorForPath(obj, path)
                        : void 0)
                  ) {
                    return creator;
                  }

                  return null;
                },
              },
            ],
            [
              {
                key: "useOptionsOrCreate",
                // Used to either register yourself with the existing factory or to create a new factory.
                value:
                  // @param [Object] options please pass the options from your constructor to the register method. For example, constructor(model, options)
                  // @option options [Object] factories a map of dot-deliminated paths; for example 'models.owner': kb.ViewModel to either constructors or create functions. Signature: 'some.path': function(object, options)
                  // @param [Instance] obj the instance that will own or register with the store
                  // @param [String] owner_path the path to the owning object for turning relative scoping of the factories to absolute paths.
                  function useOptionsOrCreate(options, obj, owner_path) {
                    var factory; // share

                    if (
                      options.factory &&
                      (!options.factories ||
                        (options.factories &&
                          options.factory.hasPathMappings(
                            options.factories,
                            owner_path
                          )))
                    ) {
                      return kb.utils.wrappedFactory(obj, options.factory);
                    } // create a new factory

                    factory = kb.utils.wrappedFactory(
                      obj,
                      new kb.Factory(options.factory)
                    );

                    if (options.factories) {
                      factory.addPathMappings(options.factories, owner_path);
                    }

                    return factory;
                  },
              },
            ]
          );

          return Factory;
        })();

        /***/
      },
      /* 96 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var kb;
        module.exports = kb = __webpack_require__(0);
        kb.configure = __webpack_require__(42); // re-expose modules

        kb.modules = {
          underscore: kb._,
          backbone: kb.Parse || kb.Backbone,
          knockout: kb.ko,
        };

        /***/
      },
      /* 97 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function (global) {
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps)
              _defineProperties(Constructor.prototype, protoProps);
            if (staticProps) _defineProperties(Constructor, staticProps);
            Object.defineProperty(Constructor, "prototype", {
              writable: false,
            });
            return Constructor;
          }

          /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
          var _, _ko_applyBindings, kb, ko, _onReady, window;

          window = window != null ? window : global;

          var _kb = (kb = __webpack_require__(0));

          _ = _kb._;
          ko = _kb.ko;
          kb.RECUSIVE_AUTO_INJECT = true; // custom Knockout `inject` binding

          ko.bindingHandlers["inject"] = {
            init: function init(
              element,
              value_accessor,
              all_bindings_accessor,
              view_model
            ) {
              return kb.Inject.inject(
                ko.utils.unwrapObservable(value_accessor()),
                view_model,
                element,
                value_accessor,
                all_bindings_accessor
              );
            },
          }; // Used to inject ViewModels and observables dynamically from your HTML Views. For both the `'kb-inject'` attribute and the data-bind `'inject'` custom binding, the following properties are reserved:
          // * `'view_model'` class used to create a new ViewModel instance
          // * `'create'` function used to manually add observables to a view model
          // * `'options'` to pass to ko.applyBindings
          // * `'afterBinding'` callback (can alternatively be in the options)
          // * `'beforeBinding'` callback (can alternatively be in the options)
          // Each function/constructor gets called with the following signature `'function(view_model, element)'`.
          // @example Bind your application automatically when the DOM is loaded.
          //   <div kb-inject><span data-bind="text: 'Hello World!'"></span></div>
          // @example Bind your application with properties.
          //   <div kb-inject="message: ko.observable('Hello World!')"><input data-bind="value: message"></input></div>
          // @example Bind your application creating a specific ViewModel instance when the DOM is loaded.
          //   <div kb-inject="MyViewModel"><input data-bind="value: message"></input></div>
          //   var MyViewModel = function(view_model, el) {
          //     this.message = ko.observable('Hello World!');
          //   }
          // @example Bind your application using a function when the DOM is loaded (like Angular.js controllers).
          //   <div kb-inject="create: MyController"><input data-bind="value: message"></input></div>
          //   var MyController = function(view_model, el) {
          //     view_model.message = ko.observable('Hello World!');
          //   }
          // @example Bind your application with a specific ViewModel instance and a callback before and after the binding.
          //   <div kb-inject="MyViewModel"><input data-bind="value: message"></input></div>
          //   var MyViewModel = function(view_model, el) {
          //     this.message = ko.observable('Hello World!');
          //     this.beforeBinding = function() {alert('before'); };
          //     this.afterBinding = function() {alert('after'); };
          //   }
          // @example Dynamically inject new properties into your ViewModel.
          //   <div kb-inject="MyViewModel">
          //     <div class="control-group" data-bind="inject: {site: ko.observable('http://your.url.com')}">
          //       <label>Website</label>
          //       <input type="url" name="site" data-bind="value: site, valueUpdate: 'keyup'" required>
          //     </div>
          //   </div>
          //   var MyViewModel = function(view_model, el) {
          //     // site will be dynamically attached to this ViewModel
          //   }
          // @example Dynamically bind a form.
          //   <div kb-inject="MyViewModel">
          //      <form name="my_form" data-bind="inject: kb.formValidator">
          //        <div class="control-group">
          //         <label>Name</label>
          //         <input type="text" name="name" data-bind="value: name, valueUpdate: 'keyup'" required>
          //       </div>
          //       <div class="control-group">
          //         <label>Website</label>
          //         <input type="url" name="site" data-bind="value: site, valueUpdate: 'keyup'" required>
          //       </div>
          //     </form>
          //   </div>
          //   var MyViewModel = kb.ViewModel.extend({
          //     constructor: ->
          //       model = new Backbone.Model({name: '', site: 'http://your.url.com'});
          //       kb.ViewModel.prototype.constructor.call(this, model);
          //   });

          kb.Inject = /*#__PURE__*/ (function () {
            function Inject() {
              _classCallCheck(this, Inject);
            }

            _createClass(Inject, null, [
              {
                key: "inject",
                // @private
                value: function inject(
                  data,
                  view_model,
                  element,
                  value_accessor,
                  all_bindings_accessor,
                  nested
                ) {
                  var inject;

                  inject = function inject(data) {
                    var key, target, value;

                    if (_.isFunction(data)) {
                      view_model = new data(
                        view_model,
                        element,
                        value_accessor,
                        all_bindings_accessor
                      ); // use 'new' to allow for classes in addition to functions

                      kb.releaseOnNodeRemove(view_model, element);
                    } else {
                      // view_model constructor causes a scope change
                      if (data.view_model) {
                        // specifying a view_model changes the scope so we need to bind a destroy
                        view_model = new data.view_model(
                          view_model,
                          element,
                          value_accessor,
                          all_bindings_accessor
                        );
                        kb.releaseOnNodeRemove(view_model, element);
                      } // resolve and merge in each key

                      for (key in data) {
                        value = data[key];

                        if (key === "view_model") {
                          continue;
                        } // create function

                        if (key === "create") {
                          value(
                            view_model,
                            element,
                            value_accessor,
                            all_bindings_accessor
                          ); // resolve nested with assign or not
                        } else if (_.isObject(value) && !_.isFunction(value)) {
                          target =
                            nested || (value && value.create) ? {} : view_model;
                          view_model[key] = kb.Inject.inject(
                            value,
                            target,
                            element,
                            value_accessor,
                            all_bindings_accessor,
                            true
                          );
                        } else {
                          // simple set
                          view_model[key] = value;
                        }
                      }
                    }

                    return view_model;
                  }; // in recursive calls, we are already protected from propagating dependencies to the template

                  if (nested) {
                    return inject(data);
                  } else {
                    return kb.ignore(function () {
                      return inject(data);
                    });
                  }
                }, // Searches the DOM from root or document for elements with the `'kb-inject'` attribute and create/customizes ViewModels for the DOM tree when encountered. Also, used with the data-bind `'inject'` custom binding.
                // @param [DOM element] root the root DOM element to start searching for `'kb-inject'` attributes.
                // @return [Array] array of Objects with the DOM elements and ViewModels that were bound in the form `{el: DOM element, view_model: ViewModel}`.
              },
              {
                key: "injectViewModels",
                value: function injectViewModels(root) {
                  var afterBinding,
                    app,
                    beforeBinding,
                    data,
                    expression,
                    _findElements,
                    i,
                    len,
                    options,
                    results; // find all of the app elements

                  results = [];

                  _findElements = function findElements(el) {
                    var attr, child_el, i, len, ref;

                    if (!el.__kb_injected) {
                      // already injected -> skip, but still process children in case they were added afterwards
                      if (
                        el.attributes &&
                        (attr = _.find(el.attributes, function (attr) {
                          return attr.name === "kb-inject";
                        }))
                      ) {
                        el.__kb_injected = true; // mark injected

                        results.push({
                          el: el,
                          view_model: {},
                          binding: attr.value,
                        });
                      }
                    }

                    ref = el.childNodes;

                    for (i = 0, len = ref.length; i < len; i++) {
                      child_el = ref[i];

                      _findElements(child_el);
                    }
                  };

                  if (!root && (window != null ? window.document : void 0)) {
                    root = window.document;
                  }

                  _findElements(root); // bind the view models

                  for (i = 0, len = results.length; i < len; i++) {
                    app = results[i]; // evaluate the app data

                    if ((expression = app.binding)) {
                      expression.search(/[:]/) < 0 ||
                        (expression = "{".concat(expression, "}"));
                      data = new Function(
                        "",
                        "return ( ".concat(expression, " )")
                      )();
                      data || (data = {}); // no data

                      !data.options ||
                        ((options = data.options), delete data.options); // extract options

                      options || (options = {});
                      app.view_model = kb.Inject.inject(
                        data,
                        app.view_model,
                        app.el,
                        null,
                        null,
                        true
                      );
                      afterBinding =
                        app.view_model.afterBinding || options.afterBinding;
                      beforeBinding =
                        app.view_model.beforeBinding || options.beforeBinding;
                    }

                    if (beforeBinding) {
                      // auto-bind
                      beforeBinding.call(
                        app.view_model,
                        app.view_model,
                        app.el,
                        options
                      );
                    }

                    kb.applyBindings(app.view_model, app.el, options);

                    if (afterBinding) {
                      afterBinding.call(
                        app.view_model,
                        app.view_model,
                        app.el,
                        options
                      );
                    }
                  }

                  return results;
                },
              },
            ]);

            return Inject;
          })(); // auto-inject recursively

          _ko_applyBindings = ko.applyBindings;

          ko.applyBindings = function (context, element) {
            var results;
            results = kb.RECUSIVE_AUTO_INJECT
              ? kb.injectViewModels(element)
              : [];

            if (!results.length) {
              return _ko_applyBindings.apply(this, arguments);
            }
          }; //############################
          // Aliases
          //############################

          kb.injectViewModels = kb.Inject.injectViewModels; //############################
          // Auto Inject results
          //############################

          if (typeof document !== "undefined" && document !== null) {
            // use simple ready check
            (_onReady = function onReady() {
              if (document.readyState !== "complete") {
                // keep waiting for the document to load
                return setTimeout(_onReady, 0);
              }

              return kb.injectViewModels(); // the document is loaded
            })();
          }
          /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(23)));

        /***/
      },
      /* 98 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var _extend, kb, ko, ref, ref1;

        var _kb = (kb = __webpack_require__(0));

        ko = _kb.ko;

        // Allow for dependent release until is resolved https://github.com/knockout/knockout/issues/1464
        if (
          (ref = ko.subscribable) != null
            ? (ref1 = ref.fn) != null
              ? ref1.extend
              : void 0
            : void 0
        ) {
          _extend = ko.subscribable.fn.extend;

          ko.subscribable.fn.extend = function () {
            var _arguments = arguments,
              _this = this;

            var _dispose, target;

            target = _extend.apply(this, arguments); // release the extended observable

            if (target !== this && kb.isReleaseable(this)) {
              _dispose = target.dispose;

              target.dispose = function () {
                if (_dispose != null) {
                  _dispose.apply(target, _arguments);
                }

                return kb.release(_this);
              };
            }

            return target;
          };
        }

        /***/
      },
      /* 99 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var KEYS_INFO, KEYS_PUBLISH, TypedValue, _, kb, ko;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;
        TypedValue = __webpack_require__(43);
        KEYS_PUBLISH = ["value", "valueType", "destroy"];
        KEYS_INFO = ["args", "read", "write"]; // Base class for observing model attributes.
        // @example How to create a ko.CollectionObservable using the ko.collectionObservable factory.
        //   var ContactViewModel = function(model) {
        //     this.name = kb.observable(model, 'name');
        //     this.number = kb.observable(model, { key: 'number'});
        //   };
        //   var model = new Contact({ name: 'Ringo', number: '555-555-5556' });
        //   var view_model = new ContactViewModel(model);
        // @example How to create a kb.Observable with a default value.
        //   var model = Backbone.Model({name: 'Bob'});
        //   var name = kb.observable(model, {key:'name', default: '(none)'}); // name is Bob
        //   name.setToDefault(); // name is (none)
        // @method #model()
        //   Dual-purpose getter/setter ko.computed for the observed model.
        //   @return [Model|ModelRef|void] getter: the model whose attributes are being observed (can be null) OR setter: void
        //   @example
        //     var observable = kb.observable(new Backbone.Model({name: 'bob'}), 'name');
        //     var the_model = observable.model(); // get
        //     observable.model(new Backbone.Model({name: 'fred'})); // set

        kb.Observable = /*#__PURE__*/ (function () {
          // Used to create a new kb.Observable.
          // @param [Model] model the model to observe (can be null)
          // @param [String|Array|Object] options the create options. String is a single attribute name, Array is an array of attribute names.
          // @option options [String] key the name of the attribute.
          // @option options [Function] read a function used to provide transform the attribute value before passing it to the caller. Signature: read()
          // @option options [Function] write a function used to provide transform the value before passing it to the model set function. Signature: write(value)
          // @option options [Array] args arguments to pass to the read and write functions (they can be ko.observables). Can be useful for passing arguments to a locale manager.
          // @option options [Constructor] localizer a concrete kb.LocalizedObservable constructor for localization.
          // @option options [Data|ko.observable] default the default value. Can be a value, string or ko.observable.
          // @option options [String] path the path to the value (used to create related observables from the factory).
          // @option options [kb.Store] store a store used to cache and share view models.
          // @option options [kb.Factory] factory a factory used to create view models.
          // @option options [Object] options a set of options merge into these options. Useful for extending options when deriving classes rather than merging them by hand.
          // @return [ko.observable] the constructor does not return 'this' but a ko.observable
          // @note the constructor does not return 'this' but a ko.observable
          function Observable(model, key_or_info, options) {
            var _this = this;

            var _vm =
              arguments.length > 3 && arguments[3] !== undefined
                ? arguments[3]
                : {};

            _classCallCheck(this, Observable);

            this._vm = _vm;
            return kb.ignore(function () {
              var create_options, event_watcher, i, key, len, observable;
              key_or_info || kb._throwMissing(_this, "key_or_info");
              _this.key = key_or_info.key || key_or_info;

              for (i = 0, len = KEYS_INFO.length; i < len; i++) {
                key = KEYS_INFO[i];

                if (key_or_info[key]) {
                  _this[key] = key_or_info[key];
                }
              }

              create_options = kb.utils.collapseOptions(options);
              event_watcher = create_options.event_watcher;
              delete create_options.event_watcher; // set up basics

              _this._value = new TypedValue(create_options);
              _this._model = ko.observable();
              observable = kb.utils.wrappedObservable(
                _this,
                ko.computed({
                  read: function read() {
                    var _model, arg, args, j, len1, ref, ref1;

                    _model = _this._model();
                    ref = args = [_this.key].concat(_this.args || []);

                    for (j = 0, len1 = ref.length; j < len1; j++) {
                      arg = ref[j];
                      ko.utils.unwrapObservable(arg);
                    }

                    if ((ref1 = kb.utils.wrappedEventWatcher(_this)) != null) {
                      ref1.emitter(_model || null); // update the event watcher
                    }

                    if (_this.read) {
                      _this.update(_this.read.apply(_this._vm, args));
                    } else if (!_.isUndefined(_model)) {
                      kb.ignore(function () {
                        return _this.update(
                          kb.getValue(_model, kb.peek(_this.key), _this.args)
                        );
                      });
                    }

                    return _this._value.value();
                  },
                  write: function write(new_value) {
                    return kb.ignore(function () {
                      var _model, unwrapped_new_value;

                      unwrapped_new_value = kb.utils.unwrapModels(new_value); // unwrap for set (knockout may pass view models which are required for the observable but not the model)

                      _model = kb.peek(_this._model);

                      if (_this.write) {
                        _this.write.call(_this._vm, unwrapped_new_value);

                        new_value = kb.getValue(
                          _model,
                          kb.peek(_this.key),
                          _this.args
                        );
                      } else if (_model) {
                        kb.setValue(
                          _model,
                          kb.peek(_this.key),
                          unwrapped_new_value
                        );
                      }

                      return _this.update(new_value);
                    });
                  },
                  owner: _this._vm,
                })
              );
              observable.__kb_is_o = true; // mark as a kb.Observable

              create_options.store = kb.utils.wrappedStore(
                observable,
                create_options.store
              );
              create_options.path = kb.utils.pathJoin(
                create_options.path,
                _this.key
              );

              if (
                create_options.factories &&
                (typeof create_options.factories === "function" ||
                  create_options.factories.create)
              ) {
                create_options.factory = kb.utils.wrappedFactory(
                  observable,
                  new kb.Factory(create_options.factory)
                );
                create_options.factory.addPathMapping(
                  create_options.path,
                  create_options.factories
                );
              } else {
                create_options.factory = kb.Factory.useOptionsOrCreate(
                  create_options,
                  observable,
                  create_options.path
                );
              }

              delete create_options.factories; // publish public interface on the observable and return instead of this

              kb.publishMethods(observable, _this, KEYS_PUBLISH); // use external model observable or create

              observable.model = _this.model = ko.computed({
                read: function read() {
                  return ko.utils.unwrapObservable(_this._model);
                },
                write: function write(new_model) {
                  return kb.ignore(function () {
                    var new_value;

                    if (
                      _this.__kb_released ||
                      kb.peek(_this._model) === new_model
                    ) {
                      // destroyed or no change
                      return;
                    } // update references

                    new_value = kb.getValue(
                      new_model,
                      kb.peek(_this.key),
                      _this.args
                    );

                    _this._model(new_model);

                    if (!new_model) {
                      return _this.update(null);
                    } else if (!_.isUndefined(new_value)) {
                      return _this.update(new_value);
                    }
                  });
                },
              });
              kb.EventWatcher.useOptionsOrCreate(
                {
                  event_watcher: event_watcher,
                },
                model || null,
                _this,
                {
                  emitter: _this.model,
                  update: function update() {
                    return kb.ignore(function () {
                      return _this.update();
                    });
                  },
                  key: _this.key,
                  path: create_options.path,
                }
              );
              _this._value.rawValue() || _this._value.update(); // wasn't loaded so create

              if (kb.LocalizedObservable && key_or_info.localizer) {
                // wrap ourselves with a localizer
                observable = new key_or_info.localizer(observable);
              }

              if (
                kb.DefaultObservable &&
                key_or_info.hasOwnProperty("default")
              ) {
                // wrap ourselves with a default value
                observable = kb.defaultObservable(
                  observable,
                  key_or_info["default"]
                );
              }

              return observable;
            });
          } // Required clean up function to break cycles, release view models, etc.
          // Can be called directly, via kb.release(object) or as a consequence of ko.releaseNode(element).

          _createClass(Observable, [
            {
              key: "destroy",
              value: function destroy() {
                var observable;
                observable = kb.utils.wrappedObservable(this);
                this.__kb_released = true;

                this._value.destroy();

                this._value = null;
                this.model.dispose();
                this.model = observable.model = null;
                return kb.utils.wrappedDestroy(this);
              }, // @return [kb.CollectionObservable|kb.ViewModel|ko.observable] exposes the raw value inside the kb.observable. For example, if your attribute is a Collection, it will hold a CollectionObservable.
            },
            {
              key: "value",
              value: function value() {
                return this._value.rawValue();
              }, // @return [kb.TYPE_UNKNOWN|kb.TYPE_SIMPLE|kb.TYPE_ARRAY|kb.TYPE_MODEL|kb.TYPE_COLLECTION] provides the type of the wrapped value.
            },
            {
              key: "valueType",
              value: function valueType() {
                return this._value.valueType(
                  kb.peek(this._model),
                  kb.peek(this.key)
                );
              }, //###################################################
              // Internal
              //###################################################
              // @nodoc
            },
            {
              key: "update",
              value: function update(new_value) {
                if (this.__kb_released) {
                  // destroyed, nothing to do
                  return;
                }

                if (!arguments.length) {
                  new_value = kb.getValue(
                    kb.peek(this._model),
                    kb.peek(this.key)
                  );
                }

                return this._value.update(new_value);
              },
            },
          ]);

          return Observable;
        })();

        kb.observable = function (model, key, options, view_model) {
          return new kb.Observable(model, key, options, view_model);
        };

        /***/
      },
      /* 100 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var _, kb;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;

        // kb.Statistics is an optional components that is useful for measuring your application's performance. You can record all of the Backbone.Events that have triggered ko.observable subscription updates and the memory footprint (instance count-only) of your ViewModels and collection observables.
        // kb.Statistics is not included in `knockback.js` nor `knockback-core.js` so you need to manually include it from the `lib` directory.
        module.exports = kb.Statistics = /*#__PURE__*/ (function () {
          function Statistics() {
            _classCallCheck(this, Statistics);

            this.model_events_tracker = [];
            this.registered_tracker = {};
          } // Clear the tracked model events (but keep the registered objects intact)

          _createClass(
            Statistics,
            [
              {
                key: "clear",
                value: function clear() {
                  return (this.model_events_tracker = []);
                }, //##############################
                // Registered Events
                //##############################
                // Register a model event
              },
              {
                key: "addModelEvent",
                value: function addModelEvent(event) {
                  return this.model_events_tracker.push(event);
                }, // A debug helper to summarize the registered events in human-readable form
              },
              {
                key: "modelEventsStatsString",
                value: function modelEventsStatsString() {
                  var event_groups, key, stats_string, value;
                  stats_string = "";
                  stats_string += "Total Count: ".concat(
                    this.model_events_tracker.length
                  );
                  event_groups = _.groupBy(
                    this.model_events_tracker,
                    function (test) {
                      return "event name: '"
                        .concat(test.name, "', attribute name: '")
                        .concat(test.key, "'");
                    }
                  );

                  for (key in event_groups) {
                    value = event_groups[key];
                    stats_string += "\n "
                      .concat(key, ", count: ")
                      .concat(value.length);
                  }

                  return stats_string;
                }, //##############################
                // Registered Observables and View Models
                //##############################
                // Register an object by key
              },
              {
                key: "register",
                value: function register(key, obj) {
                  return this.registeredTracker(key).push(obj);
                }, // Unregister an object by key
              },
              {
                key: "unregister",
                value: function unregister(key, obj) {
                  var index, type_tracker;
                  type_tracker = this.registeredTracker(key);

                  if ((index = _.indexOf(type_tracker, obj)) < 0) {
                    return typeof console !== "undefined" && console !== null
                      ? console.log(
                          "kb.Statistics: failed to unregister type: ".concat(
                            key
                          )
                        )
                      : void 0;
                  }

                  return type_tracker.splice(index, 1);
                }, // @return [Integer] the number of registered objects by type
              },
              {
                key: "registeredCount",
                value: function registeredCount(type) {
                  var count, ref, type_tracker;

                  if (type) {
                    return this.registeredTracker(type).length;
                  }

                  count = 0;
                  ref = this.registered_tracker[type];

                  for (type in ref) {
                    type_tracker = ref[type];
                    count += type_tracker.length;
                  }

                  return count;
                }, // A debug helper to summarize the current registered objects by key
                // @param [String] success_message a message to return if there are no registered objects
                // @return [String] a human readable string summarizing the currently registered objects or success_message
              },
              {
                key: "registeredStatsString",
                value: function registeredStatsString(success_message) {
                  var ref, stats_string, type, type_tracker, written;
                  stats_string = "";
                  ref = this.registered_tracker;

                  for (type in ref) {
                    type_tracker = ref[type];

                    if (!type_tracker.length) {
                      continue;
                    }

                    if (written) {
                      stats_string += "\n ";
                    }

                    stats_string += ""
                      .concat(type ? type : "No Name", ": ")
                      .concat(type_tracker.length);
                    written = true;
                  }

                  if (stats_string) {
                    return stats_string;
                  } else {
                    return success_message;
                  }
                }, // @nodoc
              },
              {
                key: "registeredTracker",
                value: function registeredTracker(key) {
                  var type_tracker;

                  if (this.registered_tracker.hasOwnProperty(key)) {
                    return this.registered_tracker[key];
                  }

                  type_tracker = [];
                  this.registered_tracker[key] = type_tracker;
                  return type_tracker;
                },
              },
            ],
            [
              {
                key: "eventsStats",
                value: function eventsStats(obj, key) {
                  var events, i, len, node, ref, stats, tail;
                  stats = {
                    count: 0,
                  };
                  events = obj._events || obj._callbacks || {};
                  ref = key ? [key] : _.keys(events);

                  for (i = 0, len = ref.length; i < len; i++) {
                    key = ref[i];

                    if (!(node = events[key])) {
                      continue;
                    }

                    if (_.isArray(node)) {
                      stats[key] = _.compact(node).length;
                    } else {
                      stats[key] = 0;
                      tail = node.tail;

                      while ((node = node.next) !== tail) {
                        stats[key]++;
                      }
                    }

                    stats.count += stats[key];
                  }

                  return stats;
                },
              },
            ]
          );

          return Statistics;
        })();

        /***/
      },
      /* 101 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var _, kb, ko;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;

        // Used to share and manage the persistence of ViewModels and observables. ks.Store can be used to break relationship cycles between models, to reduce memory usage, and to share view models between kb.CollectionObservables (for example, when using Knockout.js selectedOptions).
        // @example How to create a ko.CollectionObservable using the ko.collectionObservable factory.
        //   var co = kb.collectionObservable(new Backbone.Collection());
        //   var co_selected_options = kb.collectionObservable(new Backbone.Collection(), {
        //     store: kb.utils.wrappedStore(co)
        //   });
        module.exports = kb.Store = function () {
          var Store = /*#__PURE__*/ (function () {
            // Used to create a new kb.Store.
            function Store() {
              _classCallCheck(this, Store);

              this.observable_records = {};
              this.replaced_observables = [];
              kb.Store.instances.push(this);
            } // Required clean up function to break cycles, release view models, etc.
            // Can be called directly, via kb.release(object) or as a consequence of ko.releaseNode(element).

            _createClass(
              Store,
              [
                {
                  key: "destroy",
                  value: function destroy() {
                    var index;
                    this.__kb_released = true;
                    this.clear();

                    if ((index = _.indexOf(kb.Store.instances, this)) >= 0) {
                      return kb.Store.instances.splice(index, 1);
                    }
                  }, // Manually clear the store
                },
                {
                  key: "clear",
                  value: function clear() {
                    var cid,
                      creator_id,
                      i,
                      len,
                      observable,
                      observable_records,
                      records,
                      replaced_observables;
                    var _ref = [this.observable_records, {}];
                    observable_records = _ref[0];
                    this.observable_records = _ref[1];

                    for (creator_id in observable_records) {
                      records = observable_records[creator_id];

                      for (cid in records) {
                        observable = records[cid];
                        this.release(observable, true);
                      }
                    }

                    var _ref2 = [this.replaced_observables, []];
                    replaced_observables = _ref2[0];
                    this.replaced_observables = _ref2[1];

                    for (
                      i = 0, len = replaced_observables.length;
                      i < len;
                      i++
                    ) {
                      observable = replaced_observables[i];

                      if (!observable.__kb_released) {
                        this.release(observable, true);
                      }
                    }
                  }, // Manually compact the store by searching for released view models
                },
                {
                  key: "compact",
                  value: function compact() {
                    var cid, creator_id, observable, records, ref;
                    ref = this.observable_records;

                    for (creator_id in ref) {
                      records = ref[creator_id];

                      for (cid in records) {
                        observable = records[cid];

                        if (observable.__kb_released) {
                          delete records[cid];
                        }
                      }
                    }
                  }, // Used to register a new view model with the store.
                  // @param [Model] obj the Model
                  // @param [ko.observable] observable the observable to share for the Model
                  // @param [Object] options please pass the options from your constructor to the register method. For example, constructor(model, options)
                  // @option options [Constructor|Function] creator the constructor or function used to create the observable. It is used to match observables in the store.
                  // @option options [String] path the path to the value (used to create related observables from the factory).
                  // @option options [kb.Store] store a store used to cache and share view models.
                  // @option options [kb.Factory] factory a factory used to create view models.
                  // @example retain an observable with the store
                  //   store.retain(observable, obj, creator);
                },
                {
                  key: "retain",
                  value: function retain(observable, obj, creator) {
                    var current_observable;

                    if (!this._canRegister(observable)) {
                      return;
                    }

                    creator || (creator = observable.constructor); // default is to use the constructor

                    if ((current_observable = this.find(obj, creator))) {
                      if (current_observable === observable) {
                        // already in this store
                        this._getOrCreateStoreReferences(observable)
                          .ref_count++;
                        return observable;
                      }

                      this._retire(current_observable);
                    }

                    this._add(observable, obj, creator);

                    this._getOrCreateStoreReferences(observable).ref_count++;
                    return observable;
                  }, // Used to find an existing observable in the store or create a new one if it doesn't exist.
                  // @param [Model|Collection|Data] obj the object to create the observable for. Only Models are cached in the store.
                  // @param [Object] options please pass the options from your constructor to the register method. For example, constructor(model, options)
                  // @param [boolean] deep_retain setting to true retains an existing observable when found.
                  // @option options [Constructor|Function] creator the constructor or function used to create the observable. It is used to match observables in the store.
                  // @option options [String] path the path to the value (used to create related observables from the factory).
                  // @option options [kb.Store] store a store used to cache and share view models.
                  // @option options [kb.Factory] factory a factory used to create view models.
                  // @example register an observable with the store
                  //   observable = store.retainOrCreate(value, {path: kb.utils.wrappedPath(observable), factory: kb.utils.wrappedFactory(observable)})
                },
                {
                  key: "retainOrCreate",
                  value: function retainOrCreate(obj, options, deep_retain) {
                    var _this = this;

                    var creator, observable;

                    if (!(creator = this._creator(obj, options))) {
                      return kb.utils.createFromDefaultCreator(obj, options);
                    }

                    if (creator.models_only) {
                      return obj;
                    }

                    if ((observable = this.find(obj, creator))) {
                      return deep_retain && kb.settings.deep_retain
                        ? this.retain(observable, obj, creator)
                        : observable;
                    }

                    if (!_.isFunction(creator.create || creator)) {
                      throw new Error(
                        'Invalid factory for "'.concat(options.path, '"')
                      );
                    }

                    observable = kb.ignore(function () {
                      options = _.defaults(
                        {
                          store: _this,
                          creator: creator,
                        },
                        options
                      ); // set our own creator so we can register ourselves above

                      observable = creator.create
                        ? creator.create(obj, options)
                        : new creator(obj, options);
                      return observable || ko.observable(null); // default to null
                    });
                    this.retain(observable, obj, creator);
                    return observable;
                  }, // @nodoc
                },
                {
                  key: "reuse",
                  value: function reuse(observable, obj) {
                    var creator, current_obj, current_observable;

                    if (
                      (current_obj = kb.utils.wrappedObject(observable)) === obj
                    ) {
                      return;
                    }

                    if (!this._canRegister(observable)) {
                      throw new Error("Cannot reuse a simple observable");
                    }

                    if (this._refCount(observable) !== 1) {
                      throw new Error(
                        "Trying to change a shared view model. Ref count: ".concat(
                          this._refCount(observable)
                        )
                      );
                    }

                    creator =
                      kb.utils.wrappedCreator(observable) ||
                      observable.constructor; // default is to use the constructor

                    if (!_.isUndefined(current_obj)) {
                      current_observable = this.find(current_obj, creator);
                    }

                    this.retain(observable, obj, creator);

                    if (current_observable) {
                      this.release(current_observable);
                    }
                  }, // Release a reference to a a ViewModel in this store.
                },
                {
                  key: "release",
                  value: function release(observable, force) {
                    var store_references;

                    if (!this._canRegister(observable)) {
                      // just release
                      return kb.release(observable);
                    } // maybe be externally added

                    if (
                      (store_references = this._storeReferences(observable))
                    ) {
                      if (!force && --store_references.ref_count > 0) {
                        // do not release yet
                        return;
                      }

                      this._clearStoreReferences(observable);
                    }

                    this._remove(observable);

                    if (observable.__kb_released) {
                      return;
                    }

                    if (force || this._refCount(observable) <= 1) {
                      // allow for a single initial reference in another store
                      return kb.release(observable);
                    }
                  }, // @nodoc
                },
                {
                  key: "find",
                  value: function find(obj, creator) {
                    var observable, records, ref;

                    if (
                      !(records =
                        this.observable_records[this._creatorId(creator)])
                    ) {
                      return null;
                    }

                    if (
                      (ref = observable = records[this._cid(obj)]) != null
                        ? ref.__kb_released
                        : void 0
                    ) {
                      delete records[this._cid(obj)];
                      return null;
                    }

                    return observable;
                  }, // @nodoc
                },
                {
                  key: "_refCount",
                  value: function _refCount(observable) {
                    var stores_references;

                    if (observable.__kb_released) {
                      if (typeof console !== "undefined" && console !== null) {
                        console.log("Observable already released");
                      }

                      return 0;
                    }

                    if (
                      !(stores_references = kb.utils.get(
                        observable,
                        "stores_references"
                      ))
                    ) {
                      return 1;
                    }

                    return _.reduce(
                      stores_references,
                      function (memo, store_references) {
                        return memo + store_references.ref_count;
                      },
                      0
                    );
                  }, // @nodoc
                },
                {
                  key: "_canRegister",
                  value: function _canRegister(observable) {
                    return (
                      observable &&
                      !ko.isObservable(observable) &&
                      !observable.__kb_is_co
                    ); // only register view models not basic ko.observables nor kb.CollectionObservables
                  }, // @nodoc
                },
                {
                  key: "_cid",
                  value: function _cid(obj) {
                    var cid;
                    return (cid = obj
                      ? obj.cid || (obj.cid = _.uniqueId("c"))
                      : "null");
                  }, // @nodoc
                },
                {
                  key: "_creatorId",
                  value: function _creatorId(creator) {
                    var create, i, item, len, ref;
                    create = creator.create || creator;
                    create.__kb_cids || (create.__kb_cids = []);
                    ref = create.__kb_cids;

                    for (i = 0, len = ref.length; i < len; i++) {
                      item = ref[i];

                      if (item.create === create) {
                        return item.cid;
                      }
                    }

                    create.__kb_cids.push(
                      (item = {
                        create: create,
                        cid: _.uniqueId("kb"),
                      })
                    );

                    return item.cid;
                  }, // @nodoc
                },
                {
                  key: "_storeReferences",
                  value: function _storeReferences(observable) {
                    var _this2 = this;

                    var stores_references;

                    if (
                      !(stores_references = kb.utils.get(
                        observable,
                        "stores_references"
                      ))
                    ) {
                      return;
                    }

                    return _.find(
                      stores_references,
                      function (store_references) {
                        return store_references.store === _this2;
                      }
                    );
                  }, // @nodoc
                },
                {
                  key: "_getOrCreateStoreReferences",
                  value: function _getOrCreateStoreReferences(observable) {
                    var _this3 = this;

                    var store_references, stores_references;
                    stores_references = kb.utils.orSet(
                      observable,
                      "stores_references",
                      []
                    );

                    if (
                      !(store_references = _.find(
                        stores_references,
                        function (store_references) {
                          return store_references.store === _this3;
                        }
                      ))
                    ) {
                      stores_references.push(
                        (store_references = {
                          store: this,
                          ref_count: 0,
                          release: function release() {
                            return _this3.release(observable);
                          },
                        })
                      );
                    }

                    return store_references;
                  }, // @nodoc
                },
                {
                  key: "_clearStoreReferences",
                  value: function _clearStoreReferences(observable) {
                    var index, ref, store_references, stores_references;

                    if (
                      (stores_references = kb.utils.get(
                        observable,
                        "stores_references"
                      ))
                    ) {
                      ref = observable.__kb.stores_references;

                      for (index in ref) {
                        store_references = ref[index];

                        if (store_references.store === this) {
                          observable.__kb.stores_references.splice(index, 1);

                          break;
                        }
                      }
                    }
                  }, // @nodoc
                },
                {
                  key: "_retire",
                  value: function _retire(observable) {
                    this._clearStoreReferences(observable);

                    this.replaced_observables.push(observable);
                    return this._remove(observable);
                  }, // @nodoc
                },
                {
                  key: "_add",
                  value: function _add(observable, obj, creator) {
                    var base, name;
                    creator || (creator = observable.constructor); // default is to use the constructor

                    kb.utils.wrappedObject(observable, obj);
                    kb.utils.wrappedCreator(observable, creator);
                    return (((base = this.observable_records)[
                      (name = this._creatorId(creator))
                    ] || (base[name] = {}))[this._cid(obj)] = observable);
                  }, // @nodoc
                },
                {
                  key: "_remove",
                  value: function _remove(observable) {
                    var creator, current_observable, obj;
                    creator =
                      kb.utils.wrappedCreator(observable) ||
                      observable.constructor; // default is to use the constructor

                    if (
                      (current_observable = this.find(
                        (obj = kb.utils.wrappedObject(observable)),
                        creator
                      ))
                    ) {
                      // already released
                      if (current_observable === observable) {
                        // not already replaced
                        delete this.observable_records[
                          this._creatorId(creator)
                        ][this._cid(obj)];
                      }
                    }

                    kb.utils.wrappedObject(observable, null);
                    return kb.utils.wrappedCreator(observable, null);
                  }, // @nodoc
                },
                {
                  key: "_creator",
                  value: function _creator(obj, options) {
                    var creator;

                    if (options.creator) {
                      return options.creator;
                    }

                    if (
                      (creator = kb.utils.inferCreator(
                        obj,
                        options.factory,
                        options.path
                      ))
                    ) {
                      return creator;
                    }

                    if (kb.isModel(obj)) {
                      return kb.ViewModel;
                    }
                  },
                },
              ],
              [
                {
                  key: "useOptionsOrCreate",
                  // Used to either register yourself with the existing store or to create a new store.
                  value:
                    // @param [Object] options please pass the options from your constructor to the register method. For example, constructor(model, options)
                    // @param [Instance] obj the instance that will own or register with the store
                    // @param [ko.observable] observable the observable that will own the store
                    // @example
                    //   kb.Store.useOptionsOrCreate(model, this, options);
                    function useOptionsOrCreate(options, obj, observable) {
                      var store;

                      if (!options.store) {
                        kb.utils.wrappedStoreIsOwned(observable, true);
                      }

                      store = kb.utils.wrappedStore(
                        observable,
                        options.store || new kb.Store()
                      );
                      store.retain(observable, obj, options.creator);
                      return store;
                    },
                },
              ]
            );

            return Store;
          })(); // @nodoc

          Store.instances = [];
          return Store;
        }.call(void 0);

        /***/
      },
      /* 102 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var _, kb, ko;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;

        kb.utils = function () {
          //###################################################
          // Public API
          //###################################################
          // Library of general-purpose utilities
          var utils = /*#__PURE__*/ (function () {
            function utils() {
              _classCallCheck(this, utils);
            }

            _createClass(utils, null, [
              {
                key: "get",
                // @nodoc
                value: function get(obj, key, default_value) {
                  if (!obj.__kb || !obj.__kb.hasOwnProperty(key)) {
                    return default_value;
                  } else {
                    return obj.__kb[key];
                  }
                }, // @nodoc
              },
              {
                key: "set",
                value: function set(obj, key, value) {
                  return ((obj.__kb || (obj.__kb = {}))[key] = value);
                }, // @nodoc
              },
              {
                key: "orSet",
                value: function orSet(obj, key, value) {
                  if (!(obj.__kb || (obj.__kb = {})).hasOwnProperty(key)) {
                    obj.__kb[key] = value;
                  }

                  return obj.__kb[key];
                }, // @nodoc
              },
              {
                key: "has",
                value: function has(obj, key) {
                  return obj.__kb && obj.__kb.hasOwnProperty(key);
                }, // Dual-purpose getter/setter for retrieving and storing the observable on an instance that returns a ko.observable instead of 'this'. Relevant for:
                //   * [kb.CollectionObservable]('classes/kb/CollectionObservable.html')
                //   * [kb.Observable]('classes/kb/Observable.html')
                //   * [kb.DefaultObservable]('classes/kb/DefaultObservable.html')
                //   * [kb.FormattedObservable]('classes/kb/FormattedObservable.html')
                //   * [kb.LocalizedObservable]('classes/kb/LocalizedObservable.html')
                //   * [kb.TriggeredObservable]('classes/kb/TriggeredObservable.html')
                // @overload wrappedObservable(instance)
                //   Gets the observable from an object
                //   @param [Any] instance the owner
                //   @return [ko.observable|ko.observableArray] the observable
                // @overload wrappedObservable(instance, observable)
                //   Sets the observable on an object
                //   @param [Any] instance the owner
                //   @param [ko.observable|ko.observableArray] observable the observable
                // @example
                //   var ShortDateLocalizer = kb.LocalizedObservable.extend({
                //     constructor: function(value, options, view_model) {
                //       kb.LocalizedObservable.prototype.constructor.apply(this, arguments);
                //       return kb.utils.wrappedObservable(this);
                //     }
                //   });
              },
              {
                key: "wrappedObservable",
                value: function wrappedObservable(obj, value) {
                  if (arguments.length === 1) {
                    return kb.utils.get(obj, "observable");
                  } else {
                    return kb.utils.set(obj, "observable", value);
                  }
                }, // Dual-purpose getter/setter for retrieving and storing the Model or Collection on an owner.
                // @note this is almost the same as {kb.utils.wrappedModel} except that if the Model doesn't exist, it returns null.
                // @overload wrappedObject(obj)
                //   Gets the observable from an object
                //   @param [Object|kb.ViewModel|kb.CollectionObservable] obj owner the ViewModel/CollectionObservable owning the kb.Model or kb.Collection.
                //   @return [Model|Collection] the model/collection
                // @overload wrappedObject(obj, value)
                //   Sets the observable on an object
                //   @param [Object|kb.ViewModel|kb.CollectionObservable] obj owner the ViewModel/CollectionObservable owning the kb.Model or kb.Collection.
                //   @param [Model|Collection] value the model/collection
                // @example
                //   var model = kb.utils.wrappedObject(view_model);
                //   var collection = kb.utils.wrappedObject(collection_observable);
              },
              {
                key: "wrappedObject",
                value: function wrappedObject(obj, value) {
                  if (arguments.length === 1) {
                    return kb.utils.get(obj, "object");
                  } else {
                    return kb.utils.set(obj, "object", value);
                  }
                }, // @nodoc
              },
              {
                key: "wrappedCreator",
                value: function wrappedCreator(obj, value) {
                  if (arguments.length === 1) {
                    return kb.utils.get(obj, "creator");
                  } else {
                    return kb.utils.set(obj, "creator", value);
                  }
                }, // Dual-purpose getter/setter for retrieving and storing the Model on a ViewModel.
                // @note this is almost the same as {kb.utils.wrappedObject} except that if the Model doesn't exist, it returns the ViewModel itself (which is useful behaviour for sorting because it you can iterate over a kb.CollectionObservable's ko.ObservableArray whether it holds ViewModels or Models with the models_only option).
                // @overload wrappedModel(view_model)
                //   Gets the model from a ViewModel
                //   @param [Object|kb.ViewModel] view_model the owning ViewModel for the Model.
                //   @return [Model|ViewModel] the Model or ViewModel itself if there is no Model
                // @overload wrappedModel(view_model, model)
                //   Sets the observable on an object
                //   @param [Object|kb.ViewModel] view_model the owning ViewModel for the Model.
                //   @param [Model] model the Model
              },
              {
                key: "wrappedModel",
                value: function wrappedModel(obj, value) {
                  if (arguments.length === 1) {
                    if (_.isUndefined((value = kb.utils.get(obj, "object")))) {
                      return obj;
                    } else {
                      return value;
                    }
                  } else {
                    return kb.utils.set(obj, "object", value);
                  }
                }, // Dual-purpose getter/setter for retrieving and storing a kb.Store on an owner.
                // @overload wrappedStore(obj)
                //   Gets the store from an object
                //   @param [Any] obj the owner
                //   @return [kb.Store] the store
                // @overload wrappedStore(obj, store)
                //   Sets the store on an object
                //   @param [Any] obj the owner
                //   @param [kb.Store] store the store
                // @example
                //   var co = kb.collectionObservable(new Backbone.Collection());
                //   var co_selected_options = kb.collectionObservable(new Backbone.Collection(), {
                //     store: kb.utils.wrappedStore(co)
                //   });
              },
              {
                key: "wrappedStore",
                value: function wrappedStore(obj, value) {
                  if (arguments.length === 1) {
                    return kb.utils.get(obj, "store");
                  } else {
                    return kb.utils.set(obj, "store", value);
                  }
                }, // @private
              },
              {
                key: "wrappedStoreIsOwned",
                value: function wrappedStoreIsOwned(obj, value) {
                  if (arguments.length === 1) {
                    return kb.utils.get(obj, "store_is_owned");
                  } else {
                    return kb.utils.set(obj, "store_is_owned", value);
                  }
                }, // Dual-purpose getter/setter for retrieving and storing a kb.Factory on an owner.
                // @overload wrappedFactory(obj)
                //   Gets the factory from an object
                //   @param [Any] obj the owner
                //   @return [kb.Factory] the factory
                // @overload wrappedFactory(obj, factory)
                //   Sets the factory on an object
                //   @param [Any] obj the owner
                //   @param [kb.Factory] factory the factory
              },
              {
                key: "wrappedFactory",
                value: function wrappedFactory(obj, value) {
                  if (arguments.length === 1) {
                    return kb.utils.get(obj, "factory");
                  } else {
                    return kb.utils.set(obj, "factory", value);
                  }
                }, // Dual-purpose getter/setter for retrieving and storing a kb.EventWatcher on an owner.
                // @overload wrappedEventWatcher(obj)
                //   Gets the event_watcher from an object
                //   @param [Any] obj the owner
                //   @return [kb.EventWatcher] the event_watcher
                // @overload wrappedEventWatcher(obj, event_watcher)
                //   Sets the event_watcher on an object
                //   @param [Any] obj the owner
                //   @param [kb.EventWatcher] event_watcher the event_watcher
              },
              {
                key: "wrappedEventWatcher",
                value: function wrappedEventWatcher(obj, value) {
                  if (arguments.length === 1) {
                    return kb.utils.get(obj, "event_watcher");
                  } else {
                    return kb.utils.set(obj, "event_watcher", value);
                  }
                }, // @private
              },
              {
                key: "wrappedEventWatcherIsOwned",
                value: function wrappedEventWatcherIsOwned(obj, value) {
                  if (arguments.length === 1) {
                    return kb.utils.get(obj, "event_watcher_is_owned");
                  } else {
                    return kb.utils.set(obj, "event_watcher_is_owned", value);
                  }
                }, // Retrieves the value stored in a ko.observable.
                // @see kb.Observable valueType
                // @example
                //   var view_model = kb.viewModel(new Model({simple_attr: null, model_attr: null}), {factories: {model_attr: kb.ViewModel});
                //   kb.utils.valueType(view_model.simple_attr); // kb.TYPE_SIMPLE
                //   kb.utils.valueType(view_model.model_attr);  // kb.TYPE_MODEL
              },
              {
                key: "valueType",
                value: function valueType(observable) {
                  if (!observable) {
                    return kb.TYPE_UNKNOWN;
                  }

                  if (observable.__kb_is_o) {
                    return observable.valueType();
                  }

                  if (
                    observable.__kb_is_co ||
                    observable instanceof kb.Collection
                  ) {
                    return kb.TYPE_COLLECTION;
                  }

                  if (
                    observable instanceof kb.ViewModel ||
                    observable instanceof kb.Model
                  ) {
                    return kb.TYPE_MODEL;
                  }

                  if (_.isArray(observable)) {
                    return kb.TYPE_ARRAY;
                  }

                  return kb.TYPE_SIMPLE;
                }, // Helper to join a dot-deliminated path.
                // @param [String] path1 start path.
                // @param [String] path2 append path.
                // @return [String] combined dot-delimited path.
                // @example
                //   kb.utils.pathJoin('models', 'name'); // 'models.name'
              },
              {
                key: "pathJoin",
                value: function pathJoin(path1, path2) {
                  return (
                    (path1
                      ? path1[path1.length - 1] !== "."
                        ? "".concat(path1, ".")
                        : path1
                      : "") + path2
                  );
                }, // Helper to join a dot-deliminated path with the path on options and returns a new options object with the result.
                // @param [Object] options with path property for the start path
                // @param [String] path append path.
                // @return [Object] new options with combined dot-delimited path `{path: combined_path}`.
                // @example
                //   this.friends = kb.collectionObservable(model.get('friends'), kb.utils.optionsPathJoin(options, 'friends'));
              },
              {
                key: "optionsPathJoin",
                value: function optionsPathJoin(options, path) {
                  return _.defaults(
                    {
                      path: this.pathJoin(options.path, path),
                    },
                    options
                  );
                }, // Helper to find the creator constructor or function from a factory or ORM solution
              },
              {
                key: "inferCreator",
                value: function inferCreator(value, factory, path) {
                  var creator;

                  if (
                    factory &&
                    (creator = factory.creatorForPath(value, path))
                  ) {
                    return creator;
                  }

                  if (!value) {
                    // try fallbacks
                    return null;
                  }

                  if (value instanceof kb.Model) {
                    return kb.ViewModel;
                  }

                  if (value instanceof kb.Collection) {
                    return kb.CollectionObservable;
                  }

                  return null;
                }, // Creates an observable based on a value's type.
              },
              {
                key: "createFromDefaultCreator",
                value: function createFromDefaultCreator(obj, options) {
                  if (kb.isModel(obj)) {
                    return kb.viewModel(obj, options);
                  }

                  if (kb.isCollection(obj)) {
                    return kb.collectionObservable(obj, options);
                  }

                  if (_.isArray(obj)) {
                    return ko.observableArray(obj);
                  }

                  return ko.observable(obj);
                }, // @nodoc
              },
              {
                key: "resolveModel",
                value: function resolveModel(model) {
                  if (
                    model &&
                    kb.Backbone &&
                    kb.Backbone.ModelRef &&
                    model instanceof kb.Backbone.ModelRef
                  ) {
                    return model.model();
                  } else {
                    return model;
                  }
                },
              },
            ]);

            return utils;
          })(); // Clean up function that releases all of the wrapped values on an owner.

          utils.wrappedDestroy = __webpack_require__(113); // Helper to merge options including ViewmModel options like `keys` and `factories`
          // @param [Object] obj the object to test
          // @example
          //   kb.utils.collapseOptions(options);

          utils.collapseOptions = __webpack_require__(110); // used for attribute setting to ensure all model attributes have their underlying models

          utils.unwrapModels = __webpack_require__(112);
          return utils;
        }.call(void 0);

        /***/
      },
      /* 103 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var KEYS_OPTIONS,
          _,
          assignViewModelKey,
          createObservable,
          createStaticObservables,
          kb,
          ko;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;

        // @nodoc
        assignViewModelKey = function assignViewModelKey(vm, key) {
          var vm_key;
          vm_key =
            vm.__kb.internals && ~_.indexOf(vm.__kb.internals, key)
              ? "_".concat(key)
              : key;

          if (vm.__kb.view_model.hasOwnProperty(vm_key)) {
            // already exists, skip
            return;
          }

          vm.__kb.view_model[vm_key] = null;
          return vm_key;
        }; // @nodoc

        createObservable = function createObservable(
          vm,
          model,
          key,
          create_options
        ) {
          var vm_key;

          if (vm.__kb.excludes && ~_.indexOf(vm.__kb.excludes, key)) {
            return;
          }

          if (vm.__kb.statics && ~_.indexOf(vm.__kb.statics, key)) {
            return;
          }

          if (!(vm_key = assignViewModelKey(vm, key))) {
            return;
          }

          return (vm[vm_key] = vm.__kb.view_model[vm_key] =
            kb.observable(model, key, create_options, vm));
        }; // @nodoc

        createStaticObservables = function createStaticObservables(vm, model) {
          var i, key, len, ref, vm_key;
          ref = vm.__kb.statics;

          for (i = 0, len = ref.length; i < len; i++) {
            key = ref[i];

            if ((vm_key = assignViewModelKey(vm, key))) {
              if (model.has(vm_key)) {
                vm[vm_key] = vm.__kb.view_model[vm_key] = model.get(vm_key);
              } else if (
                vm.__kb.static_defaults &&
                vm_key in vm.__kb.static_defaults
              ) {
                vm[vm_key] = vm.__kb.view_model[vm_key] =
                  vm.__kb.static_defaults[vm_key];
              } else {
                delete vm.__kb.view_model[vm_key];
              }
            }
          }
        };

        KEYS_OPTIONS = [
          "keys",
          "internals",
          "excludes",
          "statics",
          "static_defaults",
        ];

        kb.ViewModel = function () {
          // Base class for ViewModels for Models.
          // @example How to create a ViewModel with first_name and last_name observables.
          //   var view_model = kb.viewModel(new Backbone.Model({first_name: "Planet", last_name: "Earth"}));
          // @example Bulk kb.Observable create using 'key' Object to customize the kb.Observable created per attribute.
          //   var ContactViewModel = function(model) {
          //     this.loading_message = new kb.LocalizedStringLocalizer(new LocalizedString('loading'));
          //     this._auto = kb.viewModel(model, {
          //       keys: {
          //         name: { key: 'name', 'default': this.loading_message },
          //         number: { key: 'number', 'default': this.loading_message },
          //         date: { key: 'date', 'default': this.loading_message, localizer: kb.ShortDateLocalizer }
          //       }
          //     }, this);
          //     return this;
          //   };
          // @example Creating ko.Observables on a target ViewModel
          //   var view_model = {};
          //   kb.viewModel(model, ['name', 'date'], view_model); // observables are added to view_model
          // @method .extend(prototype_properties, class_properties)
          //   Class method for JavaScript inheritance.
          //   @param [Object] prototype_properties the properties to add to the prototype
          //   @param [Object] class_properties the properties to add to the class
          //   @return [kb.ViewModel] the constructor returns 'this'
          //   @example
          //     var ContactViewModel = kb.ViewModel.extend({
          //       constructor: function(model) {
          //         kb.ViewModel.prototype.constructor.call(this, model, {internals: ['email', 'date']});   // call super constructor: @name, @_email, and @_date created in super from the model attributes
          //         this.email = kb.defaultObservable(this._email, 'your.name@yourplace.com');
          //         this.date = new LongDateLocalizer(this._date);
          //         return this;
          //       }
          //     });
          //   @example
          //     var ViewModel = kb.ViewModel.extend({
          //       constructor: function(model){
          //         kb.ViewModel.prototype.constructor.apply(this, arguments);
          //         this.full_name = ko.computed(function() { return this.first_name() + " " + this.last_name(); }, this);
          //       }
          //     });
          //     var view_model = new ViewModel(model);
          // @method #model()
          //   Dual-purpose getter/setter ko.computed for the observed model.
          //   @return [Model|ModelRef|void] getter: the model whose attributes are being observed (can be null) OR setter: void
          //   @example
          //     var view_model = kb.viewModel(new Backbone.Model({name: 'bob'}));
          //     var the_model = view_model.model(); // get
          //     view_model.model(new Backbone.Model({name: 'fred'})); // set
          var ViewModel = /*#__PURE__*/ (function () {
            // Used to create a new kb.ViewModel.
            // @param [Model|ModelRef] model the model to observe (can be null)
            // @param [Object] options the create options
            // @option options [Array|String] internals an array of atttributes that should be scoped with an underscore, eg. name -> _name
            // @option options [Array|String] requires an array of atttributes that will have kb.Observables created even if they do not exist on the Model. Useful for binding Views that require specific observables to exist
            // @option options [Array|String] keys restricts the keys used on a model. Useful for reducing the number of kb.Observables created from a limited set of Model attributes
            // @option options [Object|Array|String] excludes if an array is supplied, excludes keys to exclude on the view model; for example, if you want to provide a custom implementation. If an Object, it provides options to the kb.Observable constructor.
            // @option options [Array] statics creates non-observable properties on your view model for Model attributes that do not need to be observed for changes.
            // @option options [Object] static_defaults provides default values for statics.
            // @option options [String] path the path to the value (used to create related observables from the factory).
            // @option options [kb.Store] store a store used to cache and share view models.
            // @option options [Object] factories a map of dot-deliminated paths; for example `{'models.name': kb.ViewModel}` to either constructors or create functions. Signature: `{'some.path': function(object, options)}`
            // @option options [kb.Factory] factory a factory used to create view models.
            // @option options [Object] options a set of options merge into these options. Useful for extending options when deriving classes rather than merging them by hand.
            // @return [ko.observable] the constructor returns 'this'
            // @param [Object] view_model a view model to also set the kb.Observables on. Useful when batch creating observable on an owning view model.
            function ViewModel(model) {
              var _this = this;

              var options =
                arguments.length > 1 && arguments[1] !== undefined
                  ? arguments[1]
                  : {};
              var view_model = arguments.length > 2 ? arguments[2] : undefined;

              _classCallCheck(this, ViewModel);

              var args;
              args = Array.prototype.slice.call(
                _.isArguments(model) ? model : arguments
              );
              return kb.ignore(function () {
                var _model, arg, event_watcher, i, j, key, len, len1;

                !(model = args.shift()) ||
                  kb.isModel(model) ||
                  kb._throwUnexpected(_this, "not a model");

                if (_.isArray(args[0])) {
                  args[0] = {
                    keys: args[0],
                  };
                }

                _this.__kb || (_this.__kb = {});
                _this.__kb.view_model = args.length > 1 ? args.pop() : _this;
                options = {};

                for (i = 0, len = args.length; i < len; i++) {
                  arg = args[i];

                  _.extend(options, arg);
                }

                options = kb.utils.collapseOptions(options);

                for (j = 0, len1 = KEYS_OPTIONS.length; j < len1; j++) {
                  key = KEYS_OPTIONS[j];

                  if (options.hasOwnProperty(key)) {
                    _this.__kb[key] = options[key];
                  }
                } // always use a store to ensure recursive view models are handled correctly

                kb.Store.useOptionsOrCreate(options, model, _this); // view model factory

                _this.__kb.path = options.path;
                kb.Factory.useOptionsOrCreate(options, _this, options.path);
                _model = kb.utils.set(_this, "_model", ko.observable());
                _this.model = ko.computed({
                  read: function read() {
                    return ko.utils.unwrapObservable(_model);
                  },
                  write: function write(new_model) {
                    return kb.ignore(function () {
                      if (kb.wasReleased(_this) || !event_watcher) {
                        return;
                      }

                      _this.__kb.store.reuse(
                        _this,
                        kb.utils.resolveModel(new_model)
                      );

                      event_watcher.emitter(new_model);

                      _model(event_watcher.ee);

                      return (
                        !event_watcher.ee ||
                        _this.createObservables(event_watcher.ee)
                      );
                    });
                  },
                });
                event_watcher = kb.utils.wrappedEventWatcher(
                  _this,
                  new kb.EventWatcher(model, _this, {
                    emitter: _this._model,
                    update: function update() {
                      return kb.ignore(function () {
                        return (
                          !(event_watcher != null
                            ? event_watcher.ee
                            : void 0) ||
                          _this.createObservables(
                            event_watcher != null ? event_watcher.ee : void 0
                          )
                        );
                      });
                    },
                  })
                );
                kb.utils.wrappedObject(_this, (model = event_watcher.ee));

                _model(event_watcher.ee); // update the observables

                _this.__kb.create_options = {
                  store: kb.utils.wrappedStore(_this),
                  factory: kb.utils.wrappedFactory(_this),
                  path: _this.__kb.path,
                  event_watcher: kb.utils.wrappedEventWatcher(_this),
                };
                !options.requires ||
                  _this.createObservables(model, options.requires);
                !_this.__kb.internals ||
                  _this.createObservables(model, _this.__kb.internals);
                !options.mappings ||
                  _this.createObservables(model, options.mappings);
                !_this.__kb.statics || createStaticObservables(_this, model);

                _this.createObservables(model, _this.__kb.keys);

                !kb.statistics || kb.statistics.register("ViewModel", _this); // collect memory management statistics

                return _this;
              });
            } // Required clean up function to break cycles, release view models, etc.
            // Can be called directly, via kb.release(object) or as a consequence of ko.releaseNode(element).

            _createClass(ViewModel, [
              {
                key: "destroy",
                value: function destroy() {
                  var vm_key;
                  this.__kb_released = true;

                  if (this.__kb.view_model !== this) {
                    // clear the external references
                    (function () {
                      var results;
                      results = [];

                      for (vm_key in this.__kb.vm_keys) {
                        results.push((this.__kb.view_model[vm_key] = null));
                      }

                      return results;
                    }.call(this));
                  }

                  this.__kb.view_model = this.__kb.create_options = null;
                  kb.releaseKeys(this);
                  kb.utils.wrappedDestroy(this);
                  return (
                    !kb.statistics ||
                    kb.statistics.unregister("ViewModel", this)
                  ); // collect memory management statistics
                }, // Get the options for a new view model that can be used for sharing view models.
              },
              {
                key: "shareOptions",
                value: function shareOptions() {
                  return {
                    store: kb.utils.wrappedStore(this),
                    factory: kb.utils.wrappedFactory(this),
                  };
                }, // create observables manually
              },
              {
                key: "createObservables",
                value: function createObservables(model, keys) {
                  var i, key, len, mapping_info, ref, rel_keys, vm_key;

                  if (!keys) {
                    if (this.__kb.keys || !model) {
                      // only use the keys provided
                      return;
                    }

                    for (key in model.attributes) {
                      createObservable(
                        this,
                        model,
                        key,
                        this.__kb.create_options
                      );
                    }

                    if (
                      (rel_keys =
                        (ref = kb.settings.orm) != null
                          ? typeof ref.keys === "function"
                            ? ref.keys(model)
                            : void 0
                          : void 0)
                    ) {
                      (function () {
                        var i, len, results;
                        results = [];

                        for (i = 0, len = rel_keys.length; i < len; i++) {
                          key = rel_keys[i];
                          results.push(
                            createObservable(
                              this,
                              model,
                              key,
                              this.__kb.create_options
                            )
                          );
                        }

                        return results;
                      }.call(this));
                    }
                  } else if (_.isArray(keys)) {
                    for (i = 0, len = keys.length; i < len; i++) {
                      key = keys[i];
                      createObservable(
                        this,
                        model,
                        key,
                        this.__kb.create_options
                      );
                    }
                  } else {
                    for (key in keys) {
                      mapping_info = keys[key];

                      if (!(vm_key = assignViewModelKey(this, key))) {
                        continue;
                      }

                      if (!_.isString(mapping_info)) {
                        mapping_info.key || (mapping_info.key = vm_key);
                      }

                      this[vm_key] = this.__kb.view_model[vm_key] =
                        kb.observable(
                          model,
                          mapping_info,
                          this.__kb.create_options,
                          this
                        );
                    }
                  }
                },
              },
            ]);

            return ViewModel;
          })(); // @nodoc

          ViewModel.extend = kb.extend; // for Backbone non-Coffeescript inheritance (use "kb.SuperClass.extend({})" in Javascript instead of "class MyClass extends kb.SuperClass")

          return ViewModel;
        }.call(void 0); // Factory function to create a kb.ViewModel.

        kb.viewModel = function (model, options, view_model) {
          return new kb.ViewModel(arguments);
        };

        /***/
      },
      /* 104 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var KEYS_PUBLISH, _, kb, ko;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;

        __webpack_require__(116);

        KEYS_PUBLISH = ["destroy", "setToDefault"]; // Used to provide a default value when an observable is null, undefined, or the empty string.
        // @example Provide a observable with observable and/or non observable default argument in the form of:
        //   var wrapped_name = kb.defaultObservable(kb.observable(model, 'name'), '(no name)');

        module.exports = kb.DefaultObservable = /*#__PURE__*/ (function () {
          // Used to create a new kb.DefaultObservable.
          // @param [ko.observable] target_observable the observable to check for null, undefined, or the empty string
          // @param [Any] default_value the default value. Can be a value, string or ko.observable
          // @return [ko.observable] the constructor does not return 'this' but a ko.observable
          // @note the constructor does not return 'this' but a ko.observable
          function DefaultObservable(target_observable, dv) {
            var _this = this;

            _classCallCheck(this, DefaultObservable);

            // @dv is default value
            var observable;
            this.dv = dv;
            observable = kb.utils.wrappedObservable(
              this,
              ko.computed({
                read: function read() {
                  var current_target;
                  current_target = ko.utils.unwrapObservable(
                    target_observable()
                  );

                  if (
                    _.isNull(current_target) ||
                    _.isUndefined(current_target)
                  ) {
                    return ko.utils.unwrapObservable(_this.dv);
                  } else {
                    return current_target;
                  }
                },
                write: function write(value) {
                  return target_observable(value);
                },
              })
            ); // publish public interface on the observable and return instead of this

            kb.publishMethods(observable, this, KEYS_PUBLISH);
            return observable;
          } // Required clean up function to break cycles, release view models, etc.
          // Can be called directly, via kb.release(object) or as a consequence of ko.releaseNode(element).

          _createClass(DefaultObservable, [
            {
              key: "destroy",
              value: function destroy() {
                return kb.utils.wrappedDestroy(this);
              }, // Forces the observable to take the default value.
              // @note Can be used with kb.utils.setToDefault, kb.Observable.setToDefault, kb.ViewModel.setToDefault
            },
            {
              key: "setToDefault",
              value: function setToDefault() {
                return kb.utils.wrappedObservable(this)(this.dv);
              },
            },
          ]);

          return DefaultObservable;
        })();

        kb.defaultObservable = function (target, default_value) {
          return new kb.DefaultObservable(target, default_value);
        };

        kb.observableDefault = kb.defaultObservable;

        /***/
      },
      /* 105 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var _, arraySlice, kb, ko;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;
        arraySlice = Array.prototype.slice;

        kb.toFormattedString = function (format) {
          var arg, args, index, parameter_index, result, value;
          result = format.slice();
          args = arraySlice.call(arguments, 1);

          for (index in args) {
            arg = args[index];
            value = ko.utils.unwrapObservable(arg);

            if (_.isUndefined(value) || _.isNull(value)) {
              value = "";
            }

            parameter_index = format.indexOf("{".concat(index, "}"));

            while (parameter_index >= 0) {
              result = result.replace("{".concat(index, "}"), value);
              parameter_index = format.indexOf(
                "{".concat(index, "}"),
                parameter_index + 1
              );
            }
          }

          return result;
        };

        kb.parseFormattedString = function (string, format) {
          var count,
            format_indices_to_matched_indices,
            index,
            match_index,
            matches,
            parameter_count,
            parameter_index,
            positions,
            regex,
            regex_string,
            result,
            results,
            sorted_positions;
          regex_string = format.slice();
          index = 0;
          parameter_count = 0;
          positions = {};

          while (regex_string.search("\\{".concat(index, "\\}")) >= 0) {
            // store the positions of the replacements
            parameter_index = format.indexOf("{".concat(index, "}"));

            while (parameter_index >= 0) {
              regex_string = regex_string.replace(
                "{".concat(index, "}"),
                "(.*)"
              );
              positions[parameter_index] = index;
              parameter_count++;
              parameter_index = format.indexOf(
                "{".concat(index, "}"),
                parameter_index + 1
              );
            }

            index++;
          }

          count = index;
          regex = new RegExp(regex_string);
          matches = regex.exec(string);

          if (matches) {
            matches.shift();
          } // return fake empty data

          if (!matches || matches.length !== parameter_count) {
            result = [];

            while (count-- > 0) {
              result.push("");
            }

            return result;
          } // sort the matches since the parameters could be requested unordered

          sorted_positions = _.sortBy(
            _.keys(positions),
            function (parameter_index, format_index) {
              return parseInt(parameter_index, 10);
            }
          );
          format_indices_to_matched_indices = {};

          for (match_index in sorted_positions) {
            parameter_index = sorted_positions[match_index];
            index = positions[parameter_index];

            if (format_indices_to_matched_indices.hasOwnProperty(index)) {
              continue;
            }

            format_indices_to_matched_indices[index] = match_index;
          }

          results = [];
          index = 0;

          while (index < count) {
            results.push(matches[format_indices_to_matched_indices[index]]);
            index++;
          }

          return results;
        }; // Handles two-way formatted string convertions and will reformat a string when any argument changes. The format string can also be an observable.
        // @example change the formatted name whenever a model's name attribute changes
        //   var observable = kb.formattedObservable("{0} and {1}", arg1, arg2);

        module.exports = kb.FormattedObservable = /*#__PURE__*/ (function () {
          // Used to create a new kb.FormattedObservable.
          // @param [String|ko.observable] format the format string. Format: `"{0} and {1}"` where `{0}` and `{1}` would be synchronized with the arguments (eg. "Bob and Carol" where `{0}` is Bob and `{1}` is Carol)
          // @param [Array] args arguments to be passed to the kb.LocaleManager's get() method
          // @return [ko.observable] the constructor does not return 'this' but a ko.observable
          // @note the constructor does not return 'this' but a ko.observable
          function FormattedObservable(format, args) {
            _classCallCheck(this, FormattedObservable);

            var observable, observable_args; // being called by the factory function

            if (_.isArray(args)) {
              format = format;
              observable_args = args;
            } else {
              observable_args = arraySlice.call(arguments, 1);
            }

            observable = kb.utils.wrappedObservable(
              this,
              ko.computed({
                read: function read() {
                  var arg, i, len;
                  args = [ko.utils.unwrapObservable(format)];

                  for (i = 0, len = observable_args.length; i < len; i++) {
                    arg = observable_args[i];
                    args.push(ko.utils.unwrapObservable(arg));
                  }

                  return kb.toFormattedString.apply(null, args);
                },
                write: function write(value) {
                  var index, matches, max_count;
                  matches = kb.parseFormattedString(
                    value,
                    ko.utils.unwrapObservable(format)
                  );
                  max_count = Math.min(observable_args.length, matches.length);
                  index = 0;

                  while (index < max_count) {
                    observable_args[index](matches[index]);
                    index++;
                  }
                },
              })
            );
            return observable;
          } // Required clean up function to break cycles, release view models, etc.
          // Can be called directly, via kb.release(object) or as a consequence of ko.releaseNode(element).

          _createClass(FormattedObservable, [
            {
              key: "destroy",
              value: function destroy() {
                return kb.utils.wrappedDestroy(this);
              },
            },
          ]);

          return FormattedObservable;
        })();

        kb.formattedObservable = function (format, args) {
          return new kb.FormattedObservable(
            format,
            arraySlice.call(arguments, 1)
          );
        };

        kb.observableFormatted = kb.formattedObservable;

        /***/
      },
      /* 106 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var KEYS_PUBLISH, _, kb, ko;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;
        KEYS_PUBLISH = ["destroy", "observedValue", "resetToCurrent"]; // Locale Manager - if you are using localization, set this property.
        // It must have Backbone.Events mixed in and implement a get method like Backbone.Model, eg. get: (attribute_name) -> return somthing

        kb.locale_manager || (kb.locale_manager = void 0); // @abstract You must provide the following two methods:
        //   * read: function(value, observable) called to get the value and each time the locale changes
        //   * write: function(localized_string, value, observable) called to set the value (optional)
        // Base class for observing localized data that changes when the locale changes.
        // @example How to create a ko.CollectionObservable using the ko.collectionObservable factory.
        //   kb.ShortDateLocalizer = kb.LocalizedObservable.extend({
        //     constructor: function(value, options, view_model) {
        //       kb.LocalizedObservable.prototype.constructor.apply(this, arguments);
        //       return kb.utils.wrappedObservable(this);
        //     },
        //     read: function(value) {
        //       return Globalize.format(value, Globalize.cultures[kb.locale_manager.getLocale()].calendars.standard.patterns.d, kb.locale_manager.getLocale());
        //     },
        //     write: function(localized_string, value) {
        //       var new_value;
        //       new_value = Globalize.parseDate(localized_string, Globalize.cultures[kb.locale_manager.getLocale()].calendars.standard.patterns.d, kb.locale_manager.getLocale());
        //       if (!(new_value && _.isDate(new_value))) {
        //         return kb.utils.wrappedObservable(this).resetToCurrent();
        //       }
        //       return value.setTime(new_value.valueOf());
        //     }
        //   });
        //   var ViewModel = function(model) {
        //     this.localized_date = kb.observable(model, {
        //       key: 'date',
        //       'default': this.loading_message,
        //       localizer: ShortDateLocalizer
        //     }, this);
        //   };
        //   var view_model = new ViewModel(new Backbone.Model({date: new Date()}));
        // @method .extend(prototype_properties, class_properties)
        //   Class method for JavaScript inheritance.
        //   @param [Object] prototype_properties the properties to add to the prototype
        //   @param [Object] class_properties the properties to add to the class
        //   @return [ko.observable] the constructor does not return 'this' but a ko.observable
        //   @example
        //     var MyLocalizedObservable = kb.LocalizedObservable.extend({
        //        constructor: function(value, options, view_model) {
        //          // the constructor does not return 'this' but a ko.observable
        //          return kb.LocalizedObservable.prototype.constructor.apply(this, arguments);
        //        }
        //     });

        module.exports = kb.LocalizedObservable = function () {
          var LocalizedObservable = /*#__PURE__*/ (function () {
            // Used to create a new kb.LocalizedObservable. This an abstract class.
            // @param [Data|ko.observable] value the value to localize
            // @param [Object] options the create options
            // @option options [Data|ko.observable] default a default value to present when the value is null, an empty string, etc.
            // @option options [Function] onChange a notification that gets called when the locale changes. Signature: function(localized_string, value, observable)
            // @return [ko.observable] the constructor does not return 'this' but a ko.observable
            // @note the constructor does not return 'this' but a ko.observable
            function LocalizedObservable(value1, options, vm) {
              var _this = this;

              _classCallCheck(this, LocalizedObservable);

              // @vm is view_model
              var observable, value;
              this.value = value1;
              this.vm = vm;
              options || (options = {});
              this.vm || (this.vm = {});
              this.read || kb._throwMissing(this, "read");
              kb.locale_manager || kb._throwMissing(this, "kb.locale_manager"); // bind callbacks

              this.__kb || (this.__kb = {});
              this.__kb._onLocaleChange = _.bind(this._onLocaleChange, this);
              this.__kb._onChange = options.onChange;

              if (this.value) {
                // internal state
                value = ko.utils.unwrapObservable(this.value);
              }

              this.vo = ko.observable(!value ? null : this.read(value, null));
              observable = kb.utils.wrappedObservable(
                this,
                ko.computed({
                  read: function read() {
                    if (_this.value) {
                      ko.utils.unwrapObservable(_this.value);
                    }

                    _this.vo(); // create a depdenency

                    return _this.read(ko.utils.unwrapObservable(_this.value));
                  },
                  write: function write(value) {
                    _this.write ||
                      kb._throwUnexpected(_this, "writing to read-only");

                    _this.write(value, ko.utils.unwrapObservable(_this.value));

                    _this.vo(value);

                    if (_this.__kb._onChange) {
                      return _this.__kb._onChange(value);
                    }
                  },
                  owner: this.vm,
                })
              ); // publish public interface on the observable and return instead of this

              kb.publishMethods(observable, this, KEYS_PUBLISH); // start

              kb.locale_manager.bind("change", this.__kb._onLocaleChange);

              if (options.hasOwnProperty("default")) {
                // wrap ourselves with a default value
                observable =
                  kb.DefaultObservable &&
                  ko.defaultObservable(observable, options["default"]);
              }

              return observable;
            } // Required clean up function to break cycles, release view models, etc.
            // Can be called directly, via kb.release(object) or as a consequence of ko.releaseNode(element).

            _createClass(LocalizedObservable, [
              {
                key: "destroy",
                value: function destroy() {
                  kb.locale_manager.unbind("change", this.__kb._onLocaleChange);
                  this.vm = null;
                  return kb.utils.wrappedDestroy(this);
                }, // Used to reset the value if localization is not possible.
              },
              {
                key: "resetToCurrent",
                value: function resetToCurrent() {
                  var current_value, observable;
                  observable = kb.utils.wrappedObservable(this);
                  current_value = this.value
                    ? this.read(ko.utils.unwrapObservable(this.value))
                    : null;

                  if (observable() === current_value) {
                    return;
                  }

                  return observable(current_value);
                }, // Dual purpose set/get
              },
              {
                key: "observedValue",
                value: function observedValue(value) {
                  if (arguments.length === 0) {
                    return this.value;
                  }

                  this.value = value;

                  this._onLocaleChange();
                }, //###################################################
                // Internal
                //###################################################
                // @nodoc
              },
              {
                key: "_onLocaleChange",
                value: function _onLocaleChange() {
                  var value;
                  value = this.read(ko.utils.unwrapObservable(this.value));
                  this.vo(value);

                  if (this.__kb._onChange) {
                    return this.__kb._onChange(value);
                  }
                },
              },
            ]);

            return LocalizedObservable;
          })();

          LocalizedObservable.extend = kb.extend; // for Backbone non-Coffeescript inheritance (use "kb.SuperClass.extend({})" in Javascript instead of "class MyClass extends kb.SuperClass")

          return LocalizedObservable;
        }.call(void 0); // factory function

        kb.localizedObservable = function (value, options, view_model) {
          return new kb.LocalizedObservable(value, options, view_model);
        };

        kb.observableLocalized = kb.localizedObservable;

        /***/
      },
      /* 107 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var KEYS_PUBLISH, _, kb, ko;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;
        KEYS_PUBLISH = ["destroy"]; // Class for observing emitter events.
        // @example create an observable whose subscriptions are notified with the change event is triggered.
        //   var triggered_observable = kb.triggeredObservable(name, 'change');
        // @example How to watch a emitter for events.
        //   var trigger_count = 0;
        //   var emitter = new Backbone.Model();
        //   var view_emitter = {
        //     triggered_observable: kb.triggeredObservable(emitter, 'change')
        //   };
        //   view_emitter.counter = ko.computed(function() {
        //     view_emitter.triggered_observable() // add a dependency
        //     return trigger_count++
        //   });
        //   emitter.set(name: 'bob');       # trigger_count: 1
        //   emitter.set(name: 'george');    # trigger_count: 2
        //   emitter.set(last: 'smith');     # trigger_count: 3

        module.exports = kb.TriggeredObservable = /*#__PURE__*/ (function () {
          // Used to create a new kb.Observable.
          // @param [Model] emitter the emitter to observe (can be null)
          // @param [String] event_selector the event name to trigger Knockout subscriptions on.
          // @return [ko.observable] the constructor does not return 'this' but a ko.observable
          // @note the constructor does not return 'this' but a ko.observable
          function TriggeredObservable(emitter, event_selector1) {
            var _this = this;

            _classCallCheck(this, TriggeredObservable);

            var observable;
            this.event_selector = event_selector1;
            emitter || kb._throwMissing(this, "emitter");
            this.event_selector || kb._throwMissing(this, "event_selector"); // internal state

            this.vo = ko.observable();
            observable = kb.utils.wrappedObservable(
              this,
              ko.computed(function () {
                return _this.vo();
              })
            ); // publish public interface on the observable and return instead of this

            kb.publishMethods(observable, this, KEYS_PUBLISH); // create emitter observable

            kb.utils.wrappedEventWatcher(
              this,
              new kb.EventWatcher(emitter, this, {
                emitter: _.bind(this.emitter, this),
                update: _.bind(this.update, this),
                event_selector: this.event_selector,
              })
            );
            return observable;
          } // Required clean up function to break cycles, release view models, etc.
          // Can be called directly, via kb.release(object) or as a consequence of ko.releaseNode(element).

          _createClass(TriggeredObservable, [
            {
              key: "destroy",
              value: function destroy() {
                return kb.utils.wrappedDestroy(this);
              }, // Dual-purpose getter/setter for the observed emitter.
              // @overload emitter()
              //   Gets the emitter or emitter reference
              //   @return [Model|ModelRef|Collection] the emitter whose events are being bound (can be null)
              // @overload emitter(new_emitter)
              //   Sets the emitter or emitter reference
              //   @param [Model|ModelRef|Collection] new_emitter the emitter whose events will be bound (can be null)
            },
            {
              key: "emitter",
              value: function emitter(new_emitter) {
                if (arguments.length === 0 || this.ee === new_emitter) {
                  // get or no change
                  return this.ee;
                }

                if ((this.ee = new_emitter)) {
                  return this.update();
                }
              }, //###################################################
              // Internal
              //###################################################
              // @nodoc
            },
            {
              key: "update",
              value: function update() {
                if (!this.ee) {
                  // do not trigger if there is no emitter
                  return;
                }

                if (this.vo() !== this.ee) {
                  return this.vo(this.ee);
                } else {
                  return this.vo.valueHasMutated(); // manually trigger the dependable
                }
              },
            },
          ]);

          return TriggeredObservable;
        })(); // factory function

        kb.triggeredObservable = function (emitter, event_selector) {
          return new kb.TriggeredObservable(emitter, event_selector);
        };

        kb.observableTriggered = kb.triggeredObservable;

        /***/
      },
      /* 108 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var _, callOrGet, kb, ko;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;

        __webpack_require__(117); // internal helper

        callOrGet = function callOrGet(value) {
          value = ko.utils.unwrapObservable(value);

          if (typeof value === "function") {
            return value.apply(null, Array.prototype.slice.call(arguments, 1));
          } else {
            return value;
          }
        }; // Helpers for validating forms, inputs, and values.
        // @example A Named Form
        //   <form name="myForm">
        //      <input name="input1", data-bind="value: input1" required>
        //      <input type="url" name="input2", data-bind="value: input2">
        //    </form>
        //   Because there is a form name, it will add the following property to your ViewModel (wrapped in an observable):
        //    $myForm: {
        //      input1: {required: boolean, valid: boolean, invalid: boolean},
        //      input2: {url: boolean, valid: boolean, invalid: boolean},
        //      valid: boolean,
        //      invalid: boolean
        //    }
        // @example A Unnamed Form
        //   <form>
        //     <input name="input1", data-bind="value: input1" required>
        //     <input type="url" name="input2", data-bind="value: input2">
        //   </form>
        //   Because there is not a form name, it will extend the following on your ViewModel (each wrapped separately in an observable):
        //   {
        //     $input1: {required: boolean, valid: boolean, invalid: boolean},
        //     $input2: {url: boolean, valid: boolean, invalid: boolean}
        //   }
        // @method .valueValidator(value, bindings, validation_options={})
        //   Used to create an observable that wraps all of the validators for a value and also generates helpers for $valid, $error_count, $enabled, $disabled, and $active_error.
        //   @note Called using `kb.valueValidator` (not  kb.Validation.valueValidator)
        //   @param [Observable] value the value to validate
        //   @param [Object] bindings the named validators to use to validate the value
        //   @param [Object] validation_options the validation options
        //   @option validation_options [Boolean|Function] disable the test for disabling validations
        //   @option validation_options [Boolean|Function] enable the test for enabling validations
        //   @option validation_options [String|Array] priorities the priority order of the validators (used to set $active_error in the case of multiple being active simulateously)
        //   @return [ko.computed] a single observable storing an Object with all of the validators and generated helpers
        // @method .inputValidator(view_model, el, validation_options={})
        //   Used to create an observable that wraps all of the validators for an HTML input element using `kb.valueValidator`. See kb.valueValidator for shared options.
        //   In addition, you can add custom bindings by including a `validations` Object in your data-bind statement where each property has a function(value) that returns true if there are errors.
        //   It will automatically generate validators from the input for the following attributes:
        //   * type: for url, email, and number
        //   * required: must have a length or a value
        //   @note Called using `kb.inputValidator` (not  kb.Validation.inputValidator)
        //   @return [ko.computed] a single observable storing an Object with all of the validators and generated helpers
        //   @example Binding an input using Knockback inject.
        //     <input type="url" name="name" data-bind="value: name, inject: kb.inputValidator" required>
        //     Adds the following to your ViewModel:
        //       $name: kb.observable({required: Boolean, url: Boolean, $valid: Boolean, $error_count: Number, $active_error: String})
        //   @example Binding an input with custom validations using Knockback inject.
        //     <input type="url" name="name" data-bind="value: name, inject: kb.inputValidator, validations: {unique: nameTaken}" required>
        //     Adds the following to your ViewModel:
        //       $name: kb.observable({required: Boolean, url: Boolean, unique: Boolean, $valid: Boolean, $error_count: Number, $active_error: String})
        //   @example Binding an input with validation options using Knockback inject.
        //     <input type="url" name="name" data-bind="value: name, inject: kb.inputValidator, validation_options: {disable: disable, priorities: 'url'}" required>
        //     Adds the following to your ViewModel:
        //       $name: kb.observable({required: Boolean, url: Boolean, unique: Boolean, $valid: Boolean, $error_count: Number, $enabled: Boolean, $disabled: Boolean, $active_error: String})
        // @method .formValidator(view_model, el)
        //   Used to create an observable that wraps all of the validators for all the inputs on an HTML form element using `kb.inputValidator`. See kb.inputValidator for per input options.
        //   In addition, the formValidator aggregates the following helpers for its inputs: $valid, $error_count, $enabled, and $disabled. Also, if you provide a name attribute for the form, it will attach all of the inputs to a $name property on your view model.
        //   @note Called using `kb.formValidator` (not  kb.Validation.formValidator)
        //   @return [Object] an Object with all of the validators and generated helpers
        //   @example Binding a form by name using Knockback inject.
        //     <form name='my_form' data-bind="inject: kb.formValidator, validation_options: {priorities: ['required', 'url']}">
        //       <input type="text" name="name" data-bind="value: name" required>
        //       <input type="url" name="site" data-bind="value: site" required>
        //     </form>
        //     Adds the following to your ViewModel:
        //     $my_form: {
        //       name: kb.observable({required: Boolean, $valid: Boolean, $error_count: Number, $active_error: String}),
        //       site: kb.observable({required: Boolean, url: Boolean, $valid: Boolean, $error_count: Number, $active_error: String})
        //     }
        //   @example Binding a form without a name using Knockback inject.
        //     <form data-bind="inject: kb.formValidator, validation_options: {priorities: ['required', 'url']}">
        //       <input type="text" name="name" data-bind="value: name" required>
        //       <input type="url" name="site" data-bind="value: site" required>
        //     </form>
        //     Extends your ViewModel with the following Object:
        //     {
        //       $name: kb.observable({required: Boolean, $valid: Boolean, $error_count: Number, $active_error: String}),
        //       $site: kb.observable({required: Boolean, url: Boolean, $valid: Boolean, $error_count: Number, $active_error: String})
        //     }
        // @method .hasChangedFn(model)
        //   A validation helper that can be used to wait for a change before enabling validations.
        //   @note Called using `kb.hasChangedFn` (not  kb.Validation.hasChangedFn)
        //   @return [Function] Validator function bound with model
        //   @example Enabling validations after a change has been made to a model.
        //     <form class="form-horizontal" data-bind="inject: kb.formValidator, validation_options: {enable: kb.hasChangedFn(model)}">
        // @method .minLengthFn(length)
        //   A validator that will be invalid until the length of the value is below a minimum value.
        //   @note Called using `kb.minLengthFn` (not  kb.Validation.minLengthFn)
        //   @return [Function] Validator function bound with min length
        //   @example Validations will be invalid until the name is at least 4 characters long.
        //     <input type="text" name="name" data-bind="value: name, validations: {length: kb.minLengthFn(4)}">
        // @method .uniqueValueFn(model, key, collection)
        //   Checks for a unique attribute value by key in a collection
        //   @note Called using `kb.uniqueValueFn` (not  kb.Validation.uniqueValueFn)
        //   @return [Function] Validator function bound with model, attribute key, and collection
        //   @example Validations will be invalid until the name attribute is unique in the collection.
        //     <input type="text" name="name" data-bind="value: name, validations: {unique: kb.uniqueValueFn(model, 'name', some_collection)}">
        // @method .untilTrueFn(stand_in, fn, model)
        //   Used to combine conditions.
        //   @note Called using `kb.untilTrueFn` (not  kb.Validation.untilTrueFn)
        //   @return [Function] Validator function bound with stand_in value before condition is met, validator function, and optionally model (will reset if the model changes).
        //   @example Filter the minimum length test of name until it has be valid (that way, won't report invalid while typing in a new input).
        //     <input type="text" name="name" data-bind="value: name, validations: {length_filtered: kb.untilFalseFn(false, kb.minLengthFn(4), model)}">
        // @method .untilFalseFn(stand_in, fn, model)
        //   Used to combine conditions.
        //   @note Called using `kb.untilFalseFn` (not  kb.Validation.untilFalseFn)
        //   @return [Function] Validator function bound with stand_in value before condition is met, validator function, and optionally model (will reset if the model changes).

        module.exports = kb.Validation = /*#__PURE__*/ _createClass(
          function Validation() {
            _classCallCheck(this, Validation);
          }
        ); //############################
        // Aliases
        //############################

        kb.valueValidator = function (value, bindings) {
          var validation_options =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : {};
          (validation_options && !(typeof validation_options === "function")) ||
            (validation_options = {});
          return ko.computed(function () {
            var active_index,
              current_value,
              disabled,
              identifier,
              identifier_index,
              priorities,
              results,
              validator;
            results = {
              $error_count: 0,
            };
            current_value = ko.utils.unwrapObservable(value);
            !("disable" in validation_options) ||
              (disabled = callOrGet(validation_options.disable));
            !("enable" in validation_options) ||
              (disabled = !callOrGet(validation_options.enable));
            priorities = validation_options.priorities || [];
            _.isArray(priorities) || (priorities = [priorities]); // ensure priorities is an array
            // then add the rest

            active_index = priorities.length + 1;

            for (identifier in bindings) {
              validator = bindings[identifier];
              results[identifier] =
                !disabled && callOrGet(validator, current_value); // update validity

              if (results[identifier]) {
                results.$error_count++; // check priorities

                (identifier_index = _.indexOf(priorities, identifier) >= 0) ||
                  (identifier_index = priorities.length);

                if (results.$active_error && identifier_index < active_index) {
                  results.$active_error = identifier;
                  active_index = identifier_index;
                } else {
                  results.$active_error ||
                    ((results.$active_error = identifier),
                    (active_index = identifier_index));
                }
              }
            } // add the inverse and ensure a boolean

            results.$enabled = !disabled;
            results.$disable = !!disabled;
            results.$valid = results.$error_count === 0;
            return results;
          });
        };

        kb.inputValidator = function (view_model, el) {
          var validation_options =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : {};
          var bindings,
            identifier,
            input_name,
            options,
            ref,
            result,
            type,
            validator,
            validators;
          (validation_options && !(typeof validation_options === "function")) ||
            (validation_options = {});
          validators = kb.valid;

          if (
            (input_name = el.getAttribute("name")) &&
            !_.isString(input_name)
          ) {
            input_name = null;
          }

          if (!(bindings = el.getAttribute("data-bind"))) {
            // only set up form elements with a value bindings
            return null;
          }

          options = new Function(
            "sc",
            "with(sc[0]) { return { ".concat(bindings, " } }")
          )([view_model]);

          if (!(options && options.value)) {
            return null;
          }

          !options.validation_options ||
            (_.defaults(options.validation_options, validation_options),
            (validation_options = options.validation_options)); // collect the types to identifier

          bindings = {};
          !validators[(type = el.getAttribute("type"))] ||
            (bindings[type] = validators[type]);
          !el.hasAttribute("required") ||
            (bindings.required = validators.required);

          if (options.validations) {
            ref = options.validations;

            for (identifier in ref) {
              validator = ref[identifier];
              bindings[identifier] = validator;
            }
          }

          result = kb.valueValidator(
            options.value,
            bindings,
            validation_options
          ); // if there is a name, add to the view_model with $scoping

          (!input_name && !validation_options.no_attach) ||
            (view_model["$".concat(input_name)] = result);
          return result;
        };

        kb.formValidator = function (view_model, el) {
          var bindings,
            form_name,
            i,
            input_el,
            len,
            name,
            options,
            ref,
            results,
            validation_options,
            validator,
            validators;
          results = {};
          validators = [];

          if ((form_name = el.getAttribute("name")) && !_.isString(form_name)) {
            form_name = null;
          }

          if ((bindings = el.getAttribute("data-bind"))) {
            options = new Function(
              "sc",
              "with(sc[0]) { return { ".concat(bindings, " } }")
            )([view_model]);
            validation_options = options.validation_options;
          }

          validation_options || (validation_options = {});
          validation_options.no_attach = !!form_name;
          ref = el.getElementsByTagName("input"); // build up the results

          for (i = 0, len = ref.length; i < len; i++) {
            input_el = ref[i];

            if (!(name = input_el.getAttribute("name"))) {
              // need named inputs to set up an object
              continue;
            }

            validator = kb.inputValidator(
              view_model,
              input_el,
              validation_options
            );
            !validator || validators.push((results[name] = validator));
          } // collect stats, error count and valid

          results.$error_count = ko.computed(function () {
            var error_count, j, len1;
            error_count = 0;

            for (j = 0, len1 = validators.length; j < len1; j++) {
              validator = validators[j];
              error_count += validator().$error_count;
            }

            return error_count;
          });
          results.$valid = ko.computed(function () {
            return results.$error_count() === 0;
          }); // enabled and disabled

          results.$enabled = ko.computed(function () {
            var enabled, j, len1;
            enabled = true;

            for (j = 0, len1 = validators.length; j < len1; j++) {
              validator = validators[j];
              enabled &= validator().$enabled;
            }

            return enabled;
          });
          results.$disabled = ko.computed(function () {
            return !results.$enabled();
          });

          if (form_name) {
            // if there is a name, add to the view_model with $scoping
            view_model["$".concat(form_name)] = results;
          }

          return results;
        };

        /***/
      },
      /* 109 */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (global) {
          var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__; //     Backbone.js 1.3.3

          //     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
          //     Backbone may be freely distributed under the MIT license.
          //     For all details and documentation:
          //     http://backbonejs.org

          (function (factory) {
            // Establish the root object, `window` (`self`) in the browser, or `global` on the server.
            // We use `self` instead of `window` for `WebWorker` support.
            var root =
              (typeof self == "object" && self.self === self && self) ||
              (typeof global == "object" && global.global === global && global);

            // Set up Backbone appropriately for the environment. Start with AMD.
            if (true) {
              !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
                __webpack_require__(68),
                __webpack_require__(118),
                exports,
              ]),
              (__WEBPACK_AMD_DEFINE_RESULT__ = function (_, $, exports) {
                // Export global even in AMD case in case this script is loaded with
                // others that may still expect a global Backbone.
                root.Backbone = factory(root, exports, _, $);
              }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
              __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
                (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

              // Next for Node.js or CommonJS. jQuery may not be needed as a module.
            } else if (typeof exports !== "undefined") {
              var _ = require("underscore"),
                $;
              try {
                $ = require("jquery");
              } catch (e) {}
              factory(root, exports, _, $);

              // Finally, as a browser global.
            } else {
              root.Backbone = factory(
                root,
                {},
                root._,
                root.jQuery || root.Zepto || root.ender || root.$
              );
            }
          })(function (root, Backbone, _, $) {
            // Initial Setup
            // -------------

            // Save the previous value of the `Backbone` variable, so that it can be
            // restored later on, if `noConflict` is used.
            var previousBackbone = root.Backbone;

            // Create a local reference to a common array method we'll want to use later.
            var slice = Array.prototype.slice;

            // Current version of the library. Keep in sync with `package.json`.
            Backbone.VERSION = "1.3.3";

            // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns
            // the `$` variable.
            Backbone.$ = $;

            // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable
            // to its previous owner. Returns a reference to this Backbone object.
            Backbone.noConflict = function () {
              root.Backbone = previousBackbone;
              return this;
            };

            // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option
            // will fake `"PATCH"`, `"PUT"` and `"DELETE"` requests via the `_method` parameter and
            // set a `X-Http-Method-Override` header.
            Backbone.emulateHTTP = false;

            // Turn on `emulateJSON` to support legacy servers that can't deal with direct
            // `application/json` requests ... this will encode the body as
            // `application/x-www-form-urlencoded` instead and will send the model in a
            // form param named `model`.
            Backbone.emulateJSON = false;

            // Proxy Backbone class methods to Underscore functions, wrapping the model's
            // `attributes` object or collection's `models` array behind the scenes.
            //
            // collection.filter(function(model) { return model.get('age') > 10 });
            // collection.each(this.addView);
            //
            // `Function#apply` can be slow so we use the method's arg count, if we know it.
            var addMethod = function (length, method, attribute) {
              switch (length) {
                case 1:
                  return function () {
                    return _[method](this[attribute]);
                  };
                case 2:
                  return function (value) {
                    return _[method](this[attribute], value);
                  };
                case 3:
                  return function (iteratee, context) {
                    return _[method](
                      this[attribute],
                      cb(iteratee, this),
                      context
                    );
                  };
                case 4:
                  return function (iteratee, defaultVal, context) {
                    return _[method](
                      this[attribute],
                      cb(iteratee, this),
                      defaultVal,
                      context
                    );
                  };
                default:
                  return function () {
                    var args = slice.call(arguments);
                    args.unshift(this[attribute]);
                    return _[method].apply(_, args);
                  };
              }
            };
            var addUnderscoreMethods = function (Class, methods, attribute) {
              _.each(methods, function (length, method) {
                if (_[method])
                  Class.prototype[method] = addMethod(
                    length,
                    method,
                    attribute
                  );
              });
            };

            // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.
            var cb = function (iteratee, instance) {
              if (_.isFunction(iteratee)) return iteratee;
              if (_.isObject(iteratee) && !instance._isModel(iteratee))
                return modelMatcher(iteratee);
              if (_.isString(iteratee))
                return function (model) {
                  return model.get(iteratee);
                };
              return iteratee;
            };
            var modelMatcher = function (attrs) {
              var matcher = _.matches(attrs);
              return function (model) {
                return matcher(model.attributes);
              };
            };

            // Backbone.Events
            // ---------------

            // A module that can be mixed in to *any object* in order to provide it with
            // a custom event channel. You may bind a callback to an event with `on` or
            // remove with `off`; `trigger`-ing an event fires all callbacks in
            // succession.
            //
            //     var object = {};
            //     _.extend(object, Backbone.Events);
            //     object.on('expand', function(){ alert('expanded'); });
            //     object.trigger('expand');
            //
            var Events = (Backbone.Events = {});

            // Regular expression used to split event strings.
            var eventSplitter = /\s+/;

            // Iterates over the standard `event, callback` (as well as the fancy multiple
            // space-separated events `"change blur", callback` and jQuery-style event
            // maps `{event: callback}`).
            var eventsApi = function (iteratee, events, name, callback, opts) {
              var i = 0,
                names;
              if (name && typeof name === "object") {
                // Handle event maps.
                if (
                  callback !== void 0 &&
                  "context" in opts &&
                  opts.context === void 0
                )
                  opts.context = callback;
                for (names = _.keys(name); i < names.length; i++) {
                  events = eventsApi(
                    iteratee,
                    events,
                    names[i],
                    name[names[i]],
                    opts
                  );
                }
              } else if (name && eventSplitter.test(name)) {
                // Handle space-separated event names by delegating them individually.
                for (names = name.split(eventSplitter); i < names.length; i++) {
                  events = iteratee(events, names[i], callback, opts);
                }
              } else {
                // Finally, standard events.
                events = iteratee(events, name, callback, opts);
              }
              return events;
            };

            // Bind an event to a `callback` function. Passing `"all"` will bind
            // the callback to all events fired.
            Events.on = function (name, callback, context) {
              return internalOn(this, name, callback, context);
            };

            // Guard the `listening` argument from the public API.
            var internalOn = function (
              obj,
              name,
              callback,
              context,
              listening
            ) {
              obj._events = eventsApi(
                onApi,
                obj._events || {},
                name,
                callback,
                {
                  context: context,
                  ctx: obj,
                  listening: listening,
                }
              );

              if (listening) {
                var listeners = obj._listeners || (obj._listeners = {});
                listeners[listening.id] = listening;
              }

              return obj;
            };

            // Inversion-of-control versions of `on`. Tell *this* object to listen to
            // an event in another object... keeping track of what it's listening to
            // for easier unbinding later.
            Events.listenTo = function (obj, name, callback) {
              if (!obj) return this;
              var id = obj._listenId || (obj._listenId = _.uniqueId("l"));
              var listeningTo = this._listeningTo || (this._listeningTo = {});
              var listening = listeningTo[id];

              // This object is not listening to any other events on `obj` yet.
              // Setup the necessary references to track the listening callbacks.
              if (!listening) {
                var thisId =
                  this._listenId || (this._listenId = _.uniqueId("l"));
                listening = listeningTo[id] = {
                  obj: obj,
                  objId: id,
                  id: thisId,
                  listeningTo: listeningTo,
                  count: 0,
                };
              }

              // Bind callbacks on obj, and keep track of them on listening.
              internalOn(obj, name, callback, this, listening);
              return this;
            };

            // The reducing API that adds a callback to the `events` object.
            var onApi = function (events, name, callback, options) {
              if (callback) {
                var handlers = events[name] || (events[name] = []);
                var context = options.context,
                  ctx = options.ctx,
                  listening = options.listening;
                if (listening) listening.count++;

                handlers.push({
                  callback: callback,
                  context: context,
                  ctx: context || ctx,
                  listening: listening,
                });
              }
              return events;
            };

            // Remove one or many callbacks. If `context` is null, removes all
            // callbacks with that function. If `callback` is null, removes all
            // callbacks for the event. If `name` is null, removes all bound
            // callbacks for all events.
            Events.off = function (name, callback, context) {
              if (!this._events) return this;
              this._events = eventsApi(offApi, this._events, name, callback, {
                context: context,
                listeners: this._listeners,
              });
              return this;
            };

            // Tell this object to stop listening to either specific events ... or
            // to every object it's currently listening to.
            Events.stopListening = function (obj, name, callback) {
              var listeningTo = this._listeningTo;
              if (!listeningTo) return this;

              var ids = obj ? [obj._listenId] : _.keys(listeningTo);

              for (var i = 0; i < ids.length; i++) {
                var listening = listeningTo[ids[i]];

                // If listening doesn't exist, this object is not currently
                // listening to obj. Break out early.
                if (!listening) break;

                listening.obj.off(name, callback, this);
              }

              return this;
            };

            // The reducing API that removes a callback from the `events` object.
            var offApi = function (events, name, callback, options) {
              if (!events) return;

              var i = 0,
                listening;
              var context = options.context,
                listeners = options.listeners;

              // Delete all events listeners and "drop" events.
              if (!name && !callback && !context) {
                var ids = _.keys(listeners);
                for (; i < ids.length; i++) {
                  listening = listeners[ids[i]];
                  delete listeners[listening.id];
                  delete listening.listeningTo[listening.objId];
                }
                return;
              }

              var names = name ? [name] : _.keys(events);
              for (; i < names.length; i++) {
                name = names[i];
                var handlers = events[name];

                // Bail out if there are no events stored.
                if (!handlers) break;

                // Replace events if there are any remaining.  Otherwise, clean up.
                var remaining = [];
                for (var j = 0; j < handlers.length; j++) {
                  var handler = handlers[j];
                  if (
                    (callback &&
                      callback !== handler.callback &&
                      callback !== handler.callback._callback) ||
                    (context && context !== handler.context)
                  ) {
                    remaining.push(handler);
                  } else {
                    listening = handler.listening;
                    if (listening && --listening.count === 0) {
                      delete listeners[listening.id];
                      delete listening.listeningTo[listening.objId];
                    }
                  }
                }

                // Update tail event if the list has any events.  Otherwise, clean up.
                if (remaining.length) {
                  events[name] = remaining;
                } else {
                  delete events[name];
                }
              }
              return events;
            };

            // Bind an event to only be triggered a single time. After the first time
            // the callback is invoked, its listener will be removed. If multiple events
            // are passed in using the space-separated syntax, the handler will fire
            // once for each event, not once for a combination of all events.
            Events.once = function (name, callback, context) {
              // Map the event into a `{event: once}` object.
              var events = eventsApi(
                onceMap,
                {},
                name,
                callback,
                _.bind(this.off, this)
              );
              if (typeof name === "string" && context == null)
                callback = void 0;
              return this.on(events, callback, context);
            };

            // Inversion-of-control versions of `once`.
            Events.listenToOnce = function (obj, name, callback) {
              // Map the event into a `{event: once}` object.
              var events = eventsApi(
                onceMap,
                {},
                name,
                callback,
                _.bind(this.stopListening, this, obj)
              );
              return this.listenTo(obj, events);
            };

            // Reduces the event callbacks into a map of `{event: onceWrapper}`.
            // `offer` unbinds the `onceWrapper` after it has been called.
            var onceMap = function (map, name, callback, offer) {
              if (callback) {
                var once = (map[name] = _.once(function () {
                  offer(name, once);
                  callback.apply(this, arguments);
                }));
                once._callback = callback;
              }
              return map;
            };

            // Trigger one or many events, firing all bound callbacks. Callbacks are
            // passed the same arguments as `trigger` is, apart from the event name
            // (unless you're listening on `"all"`, which will cause your callback to
            // receive the true name of the event as the first argument).
            Events.trigger = function (name) {
              if (!this._events) return this;

              var length = Math.max(0, arguments.length - 1);
              var args = Array(length);
              for (var i = 0; i < length; i++) args[i] = arguments[i + 1];

              eventsApi(triggerApi, this._events, name, void 0, args);
              return this;
            };

            // Handles triggering the appropriate event callbacks.
            var triggerApi = function (objEvents, name, callback, args) {
              if (objEvents) {
                var events = objEvents[name];
                var allEvents = objEvents.all;
                if (events && allEvents) allEvents = allEvents.slice();
                if (events) triggerEvents(events, args);
                if (allEvents) triggerEvents(allEvents, [name].concat(args));
              }
              return objEvents;
            };

            // A difficult-to-believe, but optimized internal dispatch function for
            // triggering events. Tries to keep the usual cases speedy (most internal
            // Backbone events have 3 arguments).
            var triggerEvents = function (events, args) {
              var ev,
                i = -1,
                l = events.length,
                a1 = args[0],
                a2 = args[1],
                a3 = args[2];
              switch (args.length) {
                case 0:
                  while (++i < l) (ev = events[i]).callback.call(ev.ctx);
                  return;
                case 1:
                  while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1);
                  return;
                case 2:
                  while (++i < l)
                    (ev = events[i]).callback.call(ev.ctx, a1, a2);
                  return;
                case 3:
                  while (++i < l)
                    (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);
                  return;
                default:
                  while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);
                  return;
              }
            };

            // Aliases for backwards compatibility.
            Events.bind = Events.on;
            Events.unbind = Events.off;

            // Allow the `Backbone` object to serve as a global event bus, for folks who
            // want global "pubsub" in a convenient place.
            _.extend(Backbone, Events);

            // Backbone.Model
            // --------------

            // Backbone **Models** are the basic data object in the framework --
            // frequently representing a row in a table in a database on your server.
            // A discrete chunk of data and a bunch of useful, related methods for
            // performing computations and transformations on that data.

            // Create a new model with the specified attributes. A client id (`cid`)
            // is automatically generated and assigned for you.
            var Model = (Backbone.Model = function (attributes, options) {
              var attrs = attributes || {};
              options || (options = {});
              this.cid = _.uniqueId(this.cidPrefix);
              this.attributes = {};
              if (options.collection) this.collection = options.collection;
              if (options.parse) attrs = this.parse(attrs, options) || {};
              var defaults = _.result(this, "defaults");
              attrs = _.defaults(_.extend({}, defaults, attrs), defaults);
              this.set(attrs, options);
              this.changed = {};
              this.initialize.apply(this, arguments);
            });

            // Attach all inheritable methods to the Model prototype.
            _.extend(Model.prototype, Events, {
              // A hash of attributes whose current and previous value differ.
              changed: null,

              // The value returned during the last failed validation.
              validationError: null,

              // The default name for the JSON `id` attribute is `"id"`. MongoDB and
              // CouchDB users may want to set this to `"_id"`.
              idAttribute: "id",

              // The prefix is used to create the client id which is used to identify models locally.
              // You may want to override this if you're experiencing name clashes with model ids.
              cidPrefix: "c",

              // Initialize is an empty function by default. Override it with your own
              // initialization logic.
              initialize: function () {},

              // Return a copy of the model's `attributes` object.
              toJSON: function (options) {
                return _.clone(this.attributes);
              },

              // Proxy `Backbone.sync` by default -- but override this if you need
              // custom syncing semantics for *this* particular model.
              sync: function () {
                return Backbone.sync.apply(this, arguments);
              },

              // Get the value of an attribute.
              get: function (attr) {
                return this.attributes[attr];
              },

              // Get the HTML-escaped value of an attribute.
              escape: function (attr) {
                return _.escape(this.get(attr));
              },

              // Returns `true` if the attribute contains a value that is not null
              // or undefined.
              has: function (attr) {
                return this.get(attr) != null;
              },

              // Special-cased proxy to underscore's `_.matches` method.
              matches: function (attrs) {
                return !!_.iteratee(attrs, this)(this.attributes);
              },

              // Set a hash of model attributes on the object, firing `"change"`. This is
              // the core primitive operation of a model, updating the data and notifying
              // anyone who needs to know about the change in state. The heart of the beast.
              set: function (key, val, options) {
                if (key == null) return this;

                // Handle both `"key", value` and `{key: value}` -style arguments.
                var attrs;
                if (typeof key === "object") {
                  attrs = key;
                  options = val;
                } else {
                  (attrs = {})[key] = val;
                }

                options || (options = {});

                // Run validation.
                if (!this._validate(attrs, options)) return false;

                // Extract attributes and options.
                var unset = options.unset;
                var silent = options.silent;
                var changes = [];
                var changing = this._changing;
                this._changing = true;

                if (!changing) {
                  this._previousAttributes = _.clone(this.attributes);
                  this.changed = {};
                }

                var current = this.attributes;
                var changed = this.changed;
                var prev = this._previousAttributes;

                // For each `set` attribute, update or delete the current value.
                for (var attr in attrs) {
                  val = attrs[attr];
                  if (!_.isEqual(current[attr], val)) changes.push(attr);
                  if (!_.isEqual(prev[attr], val)) {
                    changed[attr] = val;
                  } else {
                    delete changed[attr];
                  }
                  unset ? delete current[attr] : (current[attr] = val);
                }

                // Update the `id`.
                if (this.idAttribute in attrs)
                  this.id = this.get(this.idAttribute);

                // Trigger all relevant attribute changes.
                if (!silent) {
                  if (changes.length) this._pending = options;
                  for (var i = 0; i < changes.length; i++) {
                    this.trigger(
                      "change:" + changes[i],
                      this,
                      current[changes[i]],
                      options
                    );
                  }
                }

                // You might be wondering why there's a `while` loop here. Changes can
                // be recursively nested within `"change"` events.
                if (changing) return this;
                if (!silent) {
                  while (this._pending) {
                    options = this._pending;
                    this._pending = false;
                    this.trigger("change", this, options);
                  }
                }
                this._pending = false;
                this._changing = false;
                return this;
              },

              // Remove an attribute from the model, firing `"change"`. `unset` is a noop
              // if the attribute doesn't exist.
              unset: function (attr, options) {
                return this.set(
                  attr,
                  void 0,
                  _.extend({}, options, { unset: true })
                );
              },

              // Clear all attributes on the model, firing `"change"`.
              clear: function (options) {
                var attrs = {};
                for (var key in this.attributes) attrs[key] = void 0;
                return this.set(attrs, _.extend({}, options, { unset: true }));
              },

              // Determine if the model has changed since the last `"change"` event.
              // If you specify an attribute name, determine if that attribute has changed.
              hasChanged: function (attr) {
                if (attr == null) return !_.isEmpty(this.changed);
                return _.has(this.changed, attr);
              },

              // Return an object containing all the attributes that have changed, or
              // false if there are no changed attributes. Useful for determining what
              // parts of a view need to be updated and/or what attributes need to be
              // persisted to the server. Unset attributes will be set to undefined.
              // You can also pass an attributes object to diff against the model,
              // determining if there *would be* a change.
              changedAttributes: function (diff) {
                if (!diff)
                  return this.hasChanged() ? _.clone(this.changed) : false;
                var old = this._changing
                  ? this._previousAttributes
                  : this.attributes;
                var changed = {};
                for (var attr in diff) {
                  var val = diff[attr];
                  if (_.isEqual(old[attr], val)) continue;
                  changed[attr] = val;
                }
                return _.size(changed) ? changed : false;
              },

              // Get the previous value of an attribute, recorded at the time the last
              // `"change"` event was fired.
              previous: function (attr) {
                if (attr == null || !this._previousAttributes) return null;
                return this._previousAttributes[attr];
              },

              // Get all of the attributes of the model at the time of the previous
              // `"change"` event.
              previousAttributes: function () {
                return _.clone(this._previousAttributes);
              },

              // Fetch the model from the server, merging the response with the model's
              // local attributes. Any changed attributes will trigger a "change" event.
              fetch: function (options) {
                options = _.extend({ parse: true }, options);
                var model = this;
                var success = options.success;
                options.success = function (resp) {
                  var serverAttrs = options.parse
                    ? model.parse(resp, options)
                    : resp;
                  if (!model.set(serverAttrs, options)) return false;
                  if (success)
                    success.call(options.context, model, resp, options);
                  model.trigger("sync", model, resp, options);
                };
                wrapError(this, options);
                return this.sync("read", this, options);
              },

              // Set a hash of model attributes, and sync the model to the server.
              // If the server returns an attributes hash that differs, the model's
              // state will be `set` again.
              save: function (key, val, options) {
                // Handle both `"key", value` and `{key: value}` -style arguments.
                var attrs;
                if (key == null || typeof key === "object") {
                  attrs = key;
                  options = val;
                } else {
                  (attrs = {})[key] = val;
                }

                options = _.extend({ validate: true, parse: true }, options);
                var wait = options.wait;

                // If we're not waiting and attributes exist, save acts as
                // `set(attr).save(null, opts)` with validation. Otherwise, check if
                // the model will be valid when the attributes, if any, are set.
                if (attrs && !wait) {
                  if (!this.set(attrs, options)) return false;
                } else if (!this._validate(attrs, options)) {
                  return false;
                }

                // After a successful server-side save, the client is (optionally)
                // updated with the server-side state.
                var model = this;
                var success = options.success;
                var attributes = this.attributes;
                options.success = function (resp) {
                  // Ensure attributes are restored during synchronous saves.
                  model.attributes = attributes;
                  var serverAttrs = options.parse
                    ? model.parse(resp, options)
                    : resp;
                  if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);
                  if (serverAttrs && !model.set(serverAttrs, options))
                    return false;
                  if (success)
                    success.call(options.context, model, resp, options);
                  model.trigger("sync", model, resp, options);
                };
                wrapError(this, options);

                // Set temporary attributes if `{wait: true}` to properly find new ids.
                if (attrs && wait)
                  this.attributes = _.extend({}, attributes, attrs);

                var method = this.isNew()
                  ? "create"
                  : options.patch
                  ? "patch"
                  : "update";
                if (method === "patch" && !options.attrs) options.attrs = attrs;
                var xhr = this.sync(method, this, options);

                // Restore attributes.
                this.attributes = attributes;

                return xhr;
              },

              // Destroy this model on the server if it was already persisted.
              // Optimistically removes the model from its collection, if it has one.
              // If `wait: true` is passed, waits for the server to respond before removal.
              destroy: function (options) {
                options = options ? _.clone(options) : {};
                var model = this;
                var success = options.success;
                var wait = options.wait;

                var destroy = function () {
                  model.stopListening();
                  model.trigger("destroy", model, model.collection, options);
                };

                options.success = function (resp) {
                  if (wait) destroy();
                  if (success)
                    success.call(options.context, model, resp, options);
                  if (!model.isNew())
                    model.trigger("sync", model, resp, options);
                };

                var xhr = false;
                if (this.isNew()) {
                  _.defer(options.success);
                } else {
                  wrapError(this, options);
                  xhr = this.sync("delete", this, options);
                }
                if (!wait) destroy();
                return xhr;
              },

              // Default URL for the model's representation on the server -- if you're
              // using Backbone's restful methods, override this to change the endpoint
              // that will be called.
              url: function () {
                var base =
                  _.result(this, "urlRoot") ||
                  _.result(this.collection, "url") ||
                  urlError();
                if (this.isNew()) return base;
                var id = this.get(this.idAttribute);
                return base.replace(/[^\/]$/, "$&/") + encodeURIComponent(id);
              },

              // **parse** converts a response into the hash of attributes to be `set` on
              // the model. The default implementation is just to pass the response along.
              parse: function (resp, options) {
                return resp;
              },

              // Create a new model with identical attributes to this one.
              clone: function () {
                return new this.constructor(this.attributes);
              },

              // A model is new if it has never been saved to the server, and lacks an id.
              isNew: function () {
                return !this.has(this.idAttribute);
              },

              // Check if the model is currently in a valid state.
              isValid: function (options) {
                return this._validate(
                  {},
                  _.extend({}, options, { validate: true })
                );
              },

              // Run validation against the next complete set of model attributes,
              // returning `true` if all is well. Otherwise, fire an `"invalid"` event.
              _validate: function (attrs, options) {
                if (!options.validate || !this.validate) return true;
                attrs = _.extend({}, this.attributes, attrs);
                var error = (this.validationError =
                  this.validate(attrs, options) || null);
                if (!error) return true;
                this.trigger(
                  "invalid",
                  this,
                  error,
                  _.extend(options, { validationError: error })
                );
                return false;
              },
            });

            // Underscore methods that we want to implement on the Model, mapped to the
            // number of arguments they take.
            var modelMethods = {
              keys: 1,
              values: 1,
              pairs: 1,
              invert: 1,
              pick: 0,
              omit: 0,
              chain: 1,
              isEmpty: 1,
            };

            // Mix in each Underscore method as a proxy to `Model#attributes`.
            addUnderscoreMethods(Model, modelMethods, "attributes");

            // Backbone.Collection
            // -------------------

            // If models tend to represent a single row of data, a Backbone Collection is
            // more analogous to a table full of data ... or a small slice or page of that
            // table, or a collection of rows that belong together for a particular reason
            // -- all of the messages in this particular folder, all of the documents
            // belonging to this particular author, and so on. Collections maintain
            // indexes of their models, both in order, and for lookup by `id`.

            // Create a new **Collection**, perhaps to contain a specific type of `model`.
            // If a `comparator` is specified, the Collection will maintain
            // its models in sort order, as they're added and removed.
            var Collection = (Backbone.Collection = function (models, options) {
              options || (options = {});
              if (options.model) this.model = options.model;
              if (options.comparator !== void 0)
                this.comparator = options.comparator;
              this._reset();
              this.initialize.apply(this, arguments);
              if (models)
                this.reset(models, _.extend({ silent: true }, options));
            });

            // Default options for `Collection#set`.
            var setOptions = { add: true, remove: true, merge: true };
            var addOptions = { add: true, remove: false };

            // Splices `insert` into `array` at index `at`.
            var splice = function (array, insert, at) {
              at = Math.min(Math.max(at, 0), array.length);
              var tail = Array(array.length - at);
              var length = insert.length;
              var i;
              for (i = 0; i < tail.length; i++) tail[i] = array[i + at];
              for (i = 0; i < length; i++) array[i + at] = insert[i];
              for (i = 0; i < tail.length; i++)
                array[i + length + at] = tail[i];
            };

            // Define the Collection's inheritable methods.
            _.extend(Collection.prototype, Events, {
              // The default model for a collection is just a **Backbone.Model**.
              // This should be overridden in most cases.
              model: Model,

              // Initialize is an empty function by default. Override it with your own
              // initialization logic.
              initialize: function () {},

              // The JSON representation of a Collection is an array of the
              // models' attributes.
              toJSON: function (options) {
                return this.map(function (model) {
                  return model.toJSON(options);
                });
              },

              // Proxy `Backbone.sync` by default.
              sync: function () {
                return Backbone.sync.apply(this, arguments);
              },

              // Add a model, or list of models to the set. `models` may be Backbone
              // Models or raw JavaScript objects to be converted to Models, or any
              // combination of the two.
              add: function (models, options) {
                return this.set(
                  models,
                  _.extend({ merge: false }, options, addOptions)
                );
              },

              // Remove a model, or a list of models from the set.
              remove: function (models, options) {
                options = _.extend({}, options);
                var singular = !_.isArray(models);
                models = singular ? [models] : models.slice();
                var removed = this._removeModels(models, options);
                if (!options.silent && removed.length) {
                  options.changes = { added: [], merged: [], removed: removed };
                  this.trigger("update", this, options);
                }
                return singular ? removed[0] : removed;
              },

              // Update a collection by `set`-ing a new list of models, adding new ones,
              // removing models that are no longer present, and merging models that
              // already exist in the collection, as necessary. Similar to **Model#set**,
              // the core operation for updating the data contained by the collection.
              set: function (models, options) {
                if (models == null) return;

                options = _.extend({}, setOptions, options);
                if (options.parse && !this._isModel(models)) {
                  models = this.parse(models, options) || [];
                }

                var singular = !_.isArray(models);
                models = singular ? [models] : models.slice();

                var at = options.at;
                if (at != null) at = +at;
                if (at > this.length) at = this.length;
                if (at < 0) at += this.length + 1;

                var set = [];
                var toAdd = [];
                var toMerge = [];
                var toRemove = [];
                var modelMap = {};

                var add = options.add;
                var merge = options.merge;
                var remove = options.remove;

                var sort = false;
                var sortable =
                  this.comparator && at == null && options.sort !== false;
                var sortAttr = _.isString(this.comparator)
                  ? this.comparator
                  : null;

                // Turn bare objects into model references, and prevent invalid models
                // from being added.
                var model, i;
                for (i = 0; i < models.length; i++) {
                  model = models[i];

                  // If a duplicate is found, prevent it from being added and
                  // optionally merge it into the existing model.
                  var existing = this.get(model);
                  if (existing) {
                    if (merge && model !== existing) {
                      var attrs = this._isModel(model)
                        ? model.attributes
                        : model;
                      if (options.parse) attrs = existing.parse(attrs, options);
                      existing.set(attrs, options);
                      toMerge.push(existing);
                      if (sortable && !sort)
                        sort = existing.hasChanged(sortAttr);
                    }
                    if (!modelMap[existing.cid]) {
                      modelMap[existing.cid] = true;
                      set.push(existing);
                    }
                    models[i] = existing;

                    // If this is a new, valid model, push it to the `toAdd` list.
                  } else if (add) {
                    model = models[i] = this._prepareModel(model, options);
                    if (model) {
                      toAdd.push(model);
                      this._addReference(model, options);
                      modelMap[model.cid] = true;
                      set.push(model);
                    }
                  }
                }

                // Remove stale models.
                if (remove) {
                  for (i = 0; i < this.length; i++) {
                    model = this.models[i];
                    if (!modelMap[model.cid]) toRemove.push(model);
                  }
                  if (toRemove.length) this._removeModels(toRemove, options);
                }

                // See if sorting is needed, update `length` and splice in new models.
                var orderChanged = false;
                var replace = !sortable && add && remove;
                if (set.length && replace) {
                  orderChanged =
                    this.length !== set.length ||
                    _.some(this.models, function (m, index) {
                      return m !== set[index];
                    });
                  this.models.length = 0;
                  splice(this.models, set, 0);
                  this.length = this.models.length;
                } else if (toAdd.length) {
                  if (sortable) sort = true;
                  splice(this.models, toAdd, at == null ? this.length : at);
                  this.length = this.models.length;
                }

                // Silently sort the collection if appropriate.
                if (sort) this.sort({ silent: true });

                // Unless silenced, it's time to fire all appropriate add/sort/update events.
                if (!options.silent) {
                  for (i = 0; i < toAdd.length; i++) {
                    if (at != null) options.index = at + i;
                    model = toAdd[i];
                    model.trigger("add", model, this, options);
                  }
                  if (sort || orderChanged) this.trigger("sort", this, options);
                  if (toAdd.length || toRemove.length || toMerge.length) {
                    options.changes = {
                      added: toAdd,
                      removed: toRemove,
                      merged: toMerge,
                    };
                    this.trigger("update", this, options);
                  }
                }

                // Return the added (or merged) model (or models).
                return singular ? models[0] : models;
              },

              // When you have more items than you want to add or remove individually,
              // you can reset the entire set with a new list of models, without firing
              // any granular `add` or `remove` events. Fires `reset` when finished.
              // Useful for bulk operations and optimizations.
              reset: function (models, options) {
                options = options ? _.clone(options) : {};
                for (var i = 0; i < this.models.length; i++) {
                  this._removeReference(this.models[i], options);
                }
                options.previousModels = this.models;
                this._reset();
                models = this.add(models, _.extend({ silent: true }, options));
                if (!options.silent) this.trigger("reset", this, options);
                return models;
              },

              // Add a model to the end of the collection.
              push: function (model, options) {
                return this.add(model, _.extend({ at: this.length }, options));
              },

              // Remove a model from the end of the collection.
              pop: function (options) {
                var model = this.at(this.length - 1);
                return this.remove(model, options);
              },

              // Add a model to the beginning of the collection.
              unshift: function (model, options) {
                return this.add(model, _.extend({ at: 0 }, options));
              },

              // Remove a model from the beginning of the collection.
              shift: function (options) {
                var model = this.at(0);
                return this.remove(model, options);
              },

              // Slice out a sub-array of models from the collection.
              slice: function () {
                return slice.apply(this.models, arguments);
              },

              // Get a model from the set by id, cid, model object with id or cid
              // properties, or an attributes object that is transformed through modelId.
              get: function (obj) {
                if (obj == null) return void 0;
                return (
                  this._byId[obj] ||
                  this._byId[this.modelId(obj.attributes || obj)] ||
                  (obj.cid && this._byId[obj.cid])
                );
              },

              // Returns `true` if the model is in the collection.
              has: function (obj) {
                return this.get(obj) != null;
              },

              // Get the model at the given index.
              at: function (index) {
                if (index < 0) index += this.length;
                return this.models[index];
              },

              // Return models with matching attributes. Useful for simple cases of
              // `filter`.
              where: function (attrs, first) {
                return this[first ? "find" : "filter"](attrs);
              },

              // Return the first model with matching attributes. Useful for simple cases
              // of `find`.
              findWhere: function (attrs) {
                return this.where(attrs, true);
              },

              // Force the collection to re-sort itself. You don't need to call this under
              // normal circumstances, as the set will maintain sort order as each item
              // is added.
              sort: function (options) {
                var comparator = this.comparator;
                if (!comparator)
                  throw new Error("Cannot sort a set without a comparator");
                options || (options = {});

                var length = comparator.length;
                if (_.isFunction(comparator))
                  comparator = _.bind(comparator, this);

                // Run sort based on type of `comparator`.
                if (length === 1 || _.isString(comparator)) {
                  this.models = this.sortBy(comparator);
                } else {
                  this.models.sort(comparator);
                }
                if (!options.silent) this.trigger("sort", this, options);
                return this;
              },

              // Pluck an attribute from each model in the collection.
              pluck: function (attr) {
                return this.map(attr + "");
              },

              // Fetch the default set of models for this collection, resetting the
              // collection when they arrive. If `reset: true` is passed, the response
              // data will be passed through the `reset` method instead of `set`.
              fetch: function (options) {
                options = _.extend({ parse: true }, options);
                var success = options.success;
                var collection = this;
                options.success = function (resp) {
                  var method = options.reset ? "reset" : "set";
                  collection[method](resp, options);
                  if (success)
                    success.call(options.context, collection, resp, options);
                  collection.trigger("sync", collection, resp, options);
                };
                wrapError(this, options);
                return this.sync("read", this, options);
              },

              // Create a new instance of a model in this collection. Add the model to the
              // collection immediately, unless `wait: true` is passed, in which case we
              // wait for the server to agree.
              create: function (model, options) {
                options = options ? _.clone(options) : {};
                var wait = options.wait;
                model = this._prepareModel(model, options);
                if (!model) return false;
                if (!wait) this.add(model, options);
                var collection = this;
                var success = options.success;
                options.success = function (m, resp, callbackOpts) {
                  if (wait) collection.add(m, callbackOpts);
                  if (success)
                    success.call(callbackOpts.context, m, resp, callbackOpts);
                };
                model.save(null, options);
                return model;
              },

              // **parse** converts a response into a list of models to be added to the
              // collection. The default implementation is just to pass it through.
              parse: function (resp, options) {
                return resp;
              },

              // Create a new collection with an identical list of models as this one.
              clone: function () {
                return new this.constructor(this.models, {
                  model: this.model,
                  comparator: this.comparator,
                });
              },

              // Define how to uniquely identify models in the collection.
              modelId: function (attrs) {
                return attrs[this.model.prototype.idAttribute || "id"];
              },

              // Private method to reset all internal state. Called when the collection
              // is first initialized or reset.
              _reset: function () {
                this.length = 0;
                this.models = [];
                this._byId = {};
              },

              // Prepare a hash of attributes (or other model) to be added to this
              // collection.
              _prepareModel: function (attrs, options) {
                if (this._isModel(attrs)) {
                  if (!attrs.collection) attrs.collection = this;
                  return attrs;
                }
                options = options ? _.clone(options) : {};
                options.collection = this;
                var model = new this.model(attrs, options);
                if (!model.validationError) return model;
                this.trigger("invalid", this, model.validationError, options);
                return false;
              },

              // Internal method called by both remove and set.
              _removeModels: function (models, options) {
                var removed = [];
                for (var i = 0; i < models.length; i++) {
                  var model = this.get(models[i]);
                  if (!model) continue;

                  var index = this.indexOf(model);
                  this.models.splice(index, 1);
                  this.length--;

                  // Remove references before triggering 'remove' event to prevent an
                  // infinite loop. #3693
                  delete this._byId[model.cid];
                  var id = this.modelId(model.attributes);
                  if (id != null) delete this._byId[id];

                  if (!options.silent) {
                    options.index = index;
                    model.trigger("remove", model, this, options);
                  }

                  removed.push(model);
                  this._removeReference(model, options);
                }
                return removed;
              },

              // Method for checking whether an object should be considered a model for
              // the purposes of adding to the collection.
              _isModel: function (model) {
                return model instanceof Model;
              },

              // Internal method to create a model's ties to a collection.
              _addReference: function (model, options) {
                this._byId[model.cid] = model;
                var id = this.modelId(model.attributes);
                if (id != null) this._byId[id] = model;
                model.on("all", this._onModelEvent, this);
              },

              // Internal method to sever a model's ties to a collection.
              _removeReference: function (model, options) {
                delete this._byId[model.cid];
                var id = this.modelId(model.attributes);
                if (id != null) delete this._byId[id];
                if (this === model.collection) delete model.collection;
                model.off("all", this._onModelEvent, this);
              },

              // Internal method called every time a model in the set fires an event.
              // Sets need to update their indexes when models change ids. All other
              // events simply proxy through. "add" and "remove" events that originate
              // in other collections are ignored.
              _onModelEvent: function (event, model, collection, options) {
                if (model) {
                  if (
                    (event === "add" || event === "remove") &&
                    collection !== this
                  )
                    return;
                  if (event === "destroy") this.remove(model, options);
                  if (event === "change") {
                    var prevId = this.modelId(model.previousAttributes());
                    var id = this.modelId(model.attributes);
                    if (prevId !== id) {
                      if (prevId != null) delete this._byId[prevId];
                      if (id != null) this._byId[id] = model;
                    }
                  }
                }
                this.trigger.apply(this, arguments);
              },
            });

            // Underscore methods that we want to implement on the Collection.
            // 90% of the core usefulness of Backbone Collections is actually implemented
            // right here:
            var collectionMethods = {
              forEach: 3,
              each: 3,
              map: 3,
              collect: 3,
              reduce: 0,
              foldl: 0,
              inject: 0,
              reduceRight: 0,
              foldr: 0,
              find: 3,
              detect: 3,
              filter: 3,
              select: 3,
              reject: 3,
              every: 3,
              all: 3,
              some: 3,
              any: 3,
              include: 3,
              includes: 3,
              contains: 3,
              invoke: 0,
              max: 3,
              min: 3,
              toArray: 1,
              size: 1,
              first: 3,
              head: 3,
              take: 3,
              initial: 3,
              rest: 3,
              tail: 3,
              drop: 3,
              last: 3,
              without: 0,
              difference: 0,
              indexOf: 3,
              shuffle: 1,
              lastIndexOf: 3,
              isEmpty: 1,
              chain: 1,
              sample: 3,
              partition: 3,
              groupBy: 3,
              countBy: 3,
              sortBy: 3,
              indexBy: 3,
              findIndex: 3,
              findLastIndex: 3,
            };

            // Mix in each Underscore method as a proxy to `Collection#models`.
            addUnderscoreMethods(Collection, collectionMethods, "models");

            // Backbone.View
            // -------------

            // Backbone Views are almost more convention than they are actual code. A View
            // is simply a JavaScript object that represents a logical chunk of UI in the
            // DOM. This might be a single item, an entire list, a sidebar or panel, or
            // even the surrounding frame which wraps your whole app. Defining a chunk of
            // UI as a **View** allows you to define your DOM events declaratively, without
            // having to worry about render order ... and makes it easy for the view to
            // react to specific changes in the state of your models.

            // Creating a Backbone.View creates its initial element outside of the DOM,
            // if an existing element is not provided...
            var View = (Backbone.View = function (options) {
              this.cid = _.uniqueId("view");
              _.extend(this, _.pick(options, viewOptions));
              this._ensureElement();
              this.initialize.apply(this, arguments);
            });

            // Cached regex to split keys for `delegate`.
            var delegateEventSplitter = /^(\S+)\s*(.*)$/;

            // List of view options to be set as properties.
            var viewOptions = [
              "model",
              "collection",
              "el",
              "id",
              "attributes",
              "className",
              "tagName",
              "events",
            ];

            // Set up all inheritable **Backbone.View** properties and methods.
            _.extend(View.prototype, Events, {
              // The default `tagName` of a View's element is `"div"`.
              tagName: "div",

              // jQuery delegate for element lookup, scoped to DOM elements within the
              // current view. This should be preferred to global lookups where possible.
              $: function (selector) {
                return this.$el.find(selector);
              },

              // Initialize is an empty function by default. Override it with your own
              // initialization logic.
              initialize: function () {},

              // **render** is the core function that your view should override, in order
              // to populate its element (`this.el`), with the appropriate HTML. The
              // convention is for **render** to always return `this`.
              render: function () {
                return this;
              },

              // Remove this view by taking the element out of the DOM, and removing any
              // applicable Backbone.Events listeners.
              remove: function () {
                this._removeElement();
                this.stopListening();
                return this;
              },

              // Remove this view's element from the document and all event listeners
              // attached to it. Exposed for subclasses using an alternative DOM
              // manipulation API.
              _removeElement: function () {
                this.$el.remove();
              },

              // Change the view's element (`this.el` property) and re-delegate the
              // view's events on the new element.
              setElement: function (element) {
                this.undelegateEvents();
                this._setElement(element);
                this.delegateEvents();
                return this;
              },

              // Creates the `this.el` and `this.$el` references for this view using the
              // given `el`. `el` can be a CSS selector or an HTML string, a jQuery
              // context or an element. Subclasses can override this to utilize an
              // alternative DOM manipulation API and are only required to set the
              // `this.el` property.
              _setElement: function (el) {
                this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);
                this.el = this.$el[0];
              },

              // Set callbacks, where `this.events` is a hash of
              //
              // *{"event selector": "callback"}*
              //
              //     {
              //       'mousedown .title':  'edit',
              //       'click .button':     'save',
              //       'click .open':       function(e) { ... }
              //     }
              //
              // pairs. Callbacks will be bound to the view, with `this` set properly.
              // Uses event delegation for efficiency.
              // Omitting the selector binds the event to `this.el`.
              delegateEvents: function (events) {
                events || (events = _.result(this, "events"));
                if (!events) return this;
                this.undelegateEvents();
                for (var key in events) {
                  var method = events[key];
                  if (!_.isFunction(method)) method = this[method];
                  if (!method) continue;
                  var match = key.match(delegateEventSplitter);
                  this.delegate(match[1], match[2], _.bind(method, this));
                }
                return this;
              },

              // Add a single event listener to the view's element (or a child element
              // using `selector`). This only works for delegate-able events: not `focus`,
              // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.
              delegate: function (eventName, selector, listener) {
                this.$el.on(
                  eventName + ".delegateEvents" + this.cid,
                  selector,
                  listener
                );
                return this;
              },

              // Clears all callbacks previously bound to the view by `delegateEvents`.
              // You usually don't need to use this, but may wish to if you have multiple
              // Backbone views attached to the same DOM element.
              undelegateEvents: function () {
                if (this.$el) this.$el.off(".delegateEvents" + this.cid);
                return this;
              },

              // A finer-grained `undelegateEvents` for removing a single delegated event.
              // `selector` and `listener` are both optional.
              undelegate: function (eventName, selector, listener) {
                this.$el.off(
                  eventName + ".delegateEvents" + this.cid,
                  selector,
                  listener
                );
                return this;
              },

              // Produces a DOM element to be assigned to your view. Exposed for
              // subclasses using an alternative DOM manipulation API.
              _createElement: function (tagName) {
                return document.createElement(tagName);
              },

              // Ensure that the View has a DOM element to render into.
              // If `this.el` is a string, pass it through `$()`, take the first
              // matching element, and re-assign it to `el`. Otherwise, create
              // an element from the `id`, `className` and `tagName` properties.
              _ensureElement: function () {
                if (!this.el) {
                  var attrs = _.extend({}, _.result(this, "attributes"));
                  if (this.id) attrs.id = _.result(this, "id");
                  if (this.className)
                    attrs["class"] = _.result(this, "className");
                  this.setElement(
                    this._createElement(_.result(this, "tagName"))
                  );
                  this._setAttributes(attrs);
                } else {
                  this.setElement(_.result(this, "el"));
                }
              },

              // Set attributes from a hash on this view's element.  Exposed for
              // subclasses using an alternative DOM manipulation API.
              _setAttributes: function (attributes) {
                this.$el.attr(attributes);
              },
            });

            // Backbone.sync
            // -------------

            // Override this function to change the manner in which Backbone persists
            // models to the server. You will be passed the type of request, and the
            // model in question. By default, makes a RESTful Ajax request
            // to the model's `url()`. Some possible customizations could be:
            //
            // * Use `setTimeout` to batch rapid-fire updates into a single request.
            // * Send up the models as XML instead of JSON.
            // * Persist models via WebSockets instead of Ajax.
            //
            // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests
            // as `POST`, with a `_method` parameter containing the true HTTP method,
            // as well as all requests with the body as `application/x-www-form-urlencoded`
            // instead of `application/json` with the model in a param named `model`.
            // Useful when interfacing with server-side languages like **PHP** that make
            // it difficult to read the body of `PUT` requests.
            Backbone.sync = function (method, model, options) {
              var type = methodMap[method];

              // Default options, unless specified.
              _.defaults(options || (options = {}), {
                emulateHTTP: Backbone.emulateHTTP,
                emulateJSON: Backbone.emulateJSON,
              });

              // Default JSON-request options.
              var params = { type: type, dataType: "json" };

              // Ensure that we have a URL.
              if (!options.url) {
                params.url = _.result(model, "url") || urlError();
              }

              // Ensure that we have the appropriate request data.
              if (
                options.data == null &&
                model &&
                (method === "create" ||
                  method === "update" ||
                  method === "patch")
              ) {
                params.contentType = "application/json";
                params.data = JSON.stringify(
                  options.attrs || model.toJSON(options)
                );
              }

              // For older servers, emulate JSON by encoding the request into an HTML-form.
              if (options.emulateJSON) {
                params.contentType = "application/x-www-form-urlencoded";
                params.data = params.data ? { model: params.data } : {};
              }

              // For older servers, emulate HTTP by mimicking the HTTP method with `_method`
              // And an `X-HTTP-Method-Override` header.
              if (
                options.emulateHTTP &&
                (type === "PUT" || type === "DELETE" || type === "PATCH")
              ) {
                params.type = "POST";
                if (options.emulateJSON) params.data._method = type;
                var beforeSend = options.beforeSend;
                options.beforeSend = function (xhr) {
                  xhr.setRequestHeader("X-HTTP-Method-Override", type);
                  if (beforeSend) return beforeSend.apply(this, arguments);
                };
              }

              // Don't process data on a non-GET request.
              if (params.type !== "GET" && !options.emulateJSON) {
                params.processData = false;
              }

              // Pass along `textStatus` and `errorThrown` from jQuery.
              var error = options.error;
              options.error = function (xhr, textStatus, errorThrown) {
                options.textStatus = textStatus;
                options.errorThrown = errorThrown;
                if (error)
                  error.call(options.context, xhr, textStatus, errorThrown);
              };

              // Make the request, allowing the user to override any Ajax options.
              var xhr = (options.xhr = Backbone.ajax(
                _.extend(params, options)
              ));
              model.trigger("request", model, xhr, options);
              return xhr;
            };

            // Map from CRUD to HTTP for our default `Backbone.sync` implementation.
            var methodMap = {
              create: "POST",
              update: "PUT",
              patch: "PATCH",
              delete: "DELETE",
              read: "GET",
            };

            // Set the default implementation of `Backbone.ajax` to proxy through to `$`.
            // Override this if you'd like to use a different library.
            Backbone.ajax = function () {
              return Backbone.$.ajax.apply(Backbone.$, arguments);
            };

            // Backbone.Router
            // ---------------

            // Routers map faux-URLs to actions, and fire events when routes are
            // matched. Creating a new one sets its `routes` hash, if not set statically.
            var Router = (Backbone.Router = function (options) {
              options || (options = {});
              if (options.routes) this.routes = options.routes;
              this._bindRoutes();
              this.initialize.apply(this, arguments);
            });

            // Cached regular expressions for matching named param parts and splatted
            // parts of route strings.
            var optionalParam = /\((.*?)\)/g;
            var namedParam = /(\(\?)?:\w+/g;
            var splatParam = /\*\w+/g;
            var escapeRegExp = /[\-{}\[\]+?.,\\\^$|#\s]/g;

            // Set up all inheritable **Backbone.Router** properties and methods.
            _.extend(Router.prototype, Events, {
              // Initialize is an empty function by default. Override it with your own
              // initialization logic.
              initialize: function () {},

              // Manually bind a single named route to a callback. For example:
              //
              //     this.route('search/:query/p:num', 'search', function(query, num) {
              //       ...
              //     });
              //
              route: function (route, name, callback) {
                if (!_.isRegExp(route)) route = this._routeToRegExp(route);
                if (_.isFunction(name)) {
                  callback = name;
                  name = "";
                }
                if (!callback) callback = this[name];
                var router = this;
                Backbone.history.route(route, function (fragment) {
                  var args = router._extractParameters(route, fragment);
                  if (router.execute(callback, args, name) !== false) {
                    router.trigger.apply(
                      router,
                      ["route:" + name].concat(args)
                    );
                    router.trigger("route", name, args);
                    Backbone.history.trigger("route", router, name, args);
                  }
                });
                return this;
              },

              // Execute a route handler with the provided parameters.  This is an
              // excellent place to do pre-route setup or post-route cleanup.
              execute: function (callback, args, name) {
                if (callback) callback.apply(this, args);
              },

              // Simple proxy to `Backbone.history` to save a fragment into the history.
              navigate: function (fragment, options) {
                Backbone.history.navigate(fragment, options);
                return this;
              },

              // Bind all defined routes to `Backbone.history`. We have to reverse the
              // order of the routes here to support behavior where the most general
              // routes can be defined at the bottom of the route map.
              _bindRoutes: function () {
                if (!this.routes) return;
                this.routes = _.result(this, "routes");
                var route,
                  routes = _.keys(this.routes);
                while ((route = routes.pop()) != null) {
                  this.route(route, this.routes[route]);
                }
              },

              // Convert a route string into a regular expression, suitable for matching
              // against the current location hash.
              _routeToRegExp: function (route) {
                route = route
                  .replace(escapeRegExp, "\\$&")
                  .replace(optionalParam, "(?:$1)?")
                  .replace(namedParam, function (match, optional) {
                    return optional ? match : "([^/?]+)";
                  })
                  .replace(splatParam, "([^?]*?)");
                return new RegExp("^" + route + "(?:\\?([\\s\\S]*))?$");
              },

              // Given a route, and a URL fragment that it matches, return the array of
              // extracted decoded parameters. Empty or unmatched parameters will be
              // treated as `null` to normalize cross-browser behavior.
              _extractParameters: function (route, fragment) {
                var params = route.exec(fragment).slice(1);
                return _.map(params, function (param, i) {
                  // Don't decode the search params.
                  if (i === params.length - 1) return param || null;
                  return param ? decodeURIComponent(param) : null;
                });
              },
            });

            // Backbone.History
            // ----------------

            // Handles cross-browser history management, based on either
            // [pushState](http://diveintohtml5.info/history.html) and real URLs, or
            // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)
            // and URL fragments. If the browser supports neither (old IE, natch),
            // falls back to polling.
            var History = (Backbone.History = function () {
              this.handlers = [];
              this.checkUrl = _.bind(this.checkUrl, this);

              // Ensure that `History` can be used outside of the browser.
              if (typeof window !== "undefined") {
                this.location = window.location;
                this.history = window.history;
              }
            });

            // Cached regex for stripping a leading hash/slash and trailing space.
            var routeStripper = /^[#\/]|\s+$/g;

            // Cached regex for stripping leading and trailing slashes.
            var rootStripper = /^\/+|\/+$/g;

            // Cached regex for stripping urls of hash.
            var pathStripper = /#.*$/;

            // Has the history handling already been started?
            History.started = false;

            // Set up all inheritable **Backbone.History** properties and methods.
            _.extend(History.prototype, Events, {
              // The default interval to poll for hash changes, if necessary, is
              // twenty times a second.
              interval: 50,

              // Are we at the app root?
              atRoot: function () {
                var path = this.location.pathname.replace(/[^\/]$/, "$&/");
                return path === this.root && !this.getSearch();
              },

              // Does the pathname match the root?
              matchRoot: function () {
                var path = this.decodeFragment(this.location.pathname);
                var rootPath = path.slice(0, this.root.length - 1) + "/";
                return rootPath === this.root;
              },

              // Unicode characters in `location.pathname` are percent encoded so they're
              // decoded for comparison. `%25` should not be decoded since it may be part
              // of an encoded parameter.
              decodeFragment: function (fragment) {
                return decodeURI(fragment.replace(/%25/g, "%2525"));
              },

              // In IE6, the hash fragment and search params are incorrect if the
              // fragment contains `?`.
              getSearch: function () {
                var match = this.location.href.replace(/#.*/, "").match(/\?.+/);
                return match ? match[0] : "";
              },

              // Gets the true hash value. Cannot use location.hash directly due to bug
              // in Firefox where location.hash will always be decoded.
              getHash: function (window) {
                var match = (window || this).location.href.match(/#(.*)$/);
                return match ? match[1] : "";
              },

              // Get the pathname and search params, without the root.
              getPath: function () {
                var path = this.decodeFragment(
                  this.location.pathname + this.getSearch()
                ).slice(this.root.length - 1);
                return path.charAt(0) === "/" ? path.slice(1) : path;
              },

              // Get the cross-browser normalized URL fragment from the path or hash.
              getFragment: function (fragment) {
                if (fragment == null) {
                  if (this._usePushState || !this._wantsHashChange) {
                    fragment = this.getPath();
                  } else {
                    fragment = this.getHash();
                  }
                }
                return fragment.replace(routeStripper, "");
              },

              // Start the hash change handling, returning `true` if the current URL matches
              // an existing route, and `false` otherwise.
              start: function (options) {
                if (History.started)
                  throw new Error("Backbone.history has already been started");
                History.started = true;

                // Figure out the initial configuration. Do we need an iframe?
                // Is pushState desired ... is it available?
                this.options = _.extend({ root: "/" }, this.options, options);
                this.root = this.options.root;
                this._wantsHashChange = this.options.hashChange !== false;
                this._hasHashChange =
                  "onhashchange" in window &&
                  (document.documentMode === void 0 ||
                    document.documentMode > 7);
                this._useHashChange =
                  this._wantsHashChange && this._hasHashChange;
                this._wantsPushState = !!this.options.pushState;
                this._hasPushState = !!(this.history && this.history.pushState);
                this._usePushState = this._wantsPushState && this._hasPushState;
                this.fragment = this.getFragment();

                // Normalize root to always include a leading and trailing slash.
                this.root = ("/" + this.root + "/").replace(rootStripper, "/");

                // Transition from hashChange to pushState or vice versa if both are
                // requested.
                if (this._wantsHashChange && this._wantsPushState) {
                  // If we've started off with a route from a `pushState`-enabled
                  // browser, but we're currently in a browser that doesn't support it...
                  if (!this._hasPushState && !this.atRoot()) {
                    var rootPath = this.root.slice(0, -1) || "/";
                    this.location.replace(rootPath + "#" + this.getPath());
                    // Return immediately as browser will do redirect to new url
                    return true;

                    // Or if we've started out with a hash-based route, but we're currently
                    // in a browser where it could be `pushState`-based instead...
                  } else if (this._hasPushState && this.atRoot()) {
                    this.navigate(this.getHash(), { replace: true });
                  }
                }

                // Proxy an iframe to handle location events if the browser doesn't
                // support the `hashchange` event, HTML5 history, or the user wants
                // `hashChange` but not `pushState`.
                if (
                  !this._hasHashChange &&
                  this._wantsHashChange &&
                  !this._usePushState
                ) {
                  this.iframe = document.createElement("iframe");
                  this.iframe.src = "javascript:0";
                  this.iframe.style.display = "none";
                  this.iframe.tabIndex = -1;
                  var body = document.body;
                  // Using `appendChild` will throw on IE < 9 if the document is not ready.
                  var iWindow = body.insertBefore(
                    this.iframe,
                    body.firstChild
                  ).contentWindow;
                  iWindow.document.open();
                  iWindow.document.close();
                  iWindow.location.hash = "#" + this.fragment;
                }

                // Add a cross-platform `addEventListener` shim for older browsers.
                var addEventListener =
                  window.addEventListener ||
                  function (eventName, listener) {
                    return attachEvent("on" + eventName, listener);
                  };

                // Depending on whether we're using pushState or hashes, and whether
                // 'onhashchange' is supported, determine how we check the URL state.
                if (this._usePushState) {
                  addEventListener("popstate", this.checkUrl, false);
                } else if (this._useHashChange && !this.iframe) {
                  addEventListener("hashchange", this.checkUrl, false);
                } else if (this._wantsHashChange) {
                  this._checkUrlInterval = setInterval(
                    this.checkUrl,
                    this.interval
                  );
                }

                if (!this.options.silent) return this.loadUrl();
              },

              // Disable Backbone.history, perhaps temporarily. Not useful in a real app,
              // but possibly useful for unit testing Routers.
              stop: function () {
                // Add a cross-platform `removeEventListener` shim for older browsers.
                var removeEventListener =
                  window.removeEventListener ||
                  function (eventName, listener) {
                    return detachEvent("on" + eventName, listener);
                  };

                // Remove window listeners.
                if (this._usePushState) {
                  removeEventListener("popstate", this.checkUrl, false);
                } else if (this._useHashChange && !this.iframe) {
                  removeEventListener("hashchange", this.checkUrl, false);
                }

                // Clean up the iframe if necessary.
                if (this.iframe) {
                  document.body.removeChild(this.iframe);
                  this.iframe = null;
                }

                // Some environments will throw when clearing an undefined interval.
                if (this._checkUrlInterval)
                  clearInterval(this._checkUrlInterval);
                History.started = false;
              },

              // Add a route to be tested when the fragment changes. Routes added later
              // may override previous routes.
              route: function (route, callback) {
                this.handlers.unshift({ route: route, callback: callback });
              },

              // Checks the current URL to see if it has changed, and if it has,
              // calls `loadUrl`, normalizing across the hidden iframe.
              checkUrl: function (e) {
                var current = this.getFragment();

                // If the user pressed the back button, the iframe's hash will have
                // changed and we should use that for comparison.
                if (current === this.fragment && this.iframe) {
                  current = this.getHash(this.iframe.contentWindow);
                }

                if (current === this.fragment) return false;
                if (this.iframe) this.navigate(current);
                this.loadUrl();
              },

              // Attempt to load the current URL fragment. If a route succeeds with a
              // match, returns `true`. If no defined routes matches the fragment,
              // returns `false`.
              loadUrl: function (fragment) {
                // If the root doesn't match, no routes can match either.
                if (!this.matchRoot()) return false;
                fragment = this.fragment = this.getFragment(fragment);
                return _.some(this.handlers, function (handler) {
                  if (handler.route.test(fragment)) {
                    handler.callback(fragment);
                    return true;
                  }
                });
              },

              // Save a fragment into the hash history, or replace the URL state if the
              // 'replace' option is passed. You are responsible for properly URL-encoding
              // the fragment in advance.
              //
              // The options object can contain `trigger: true` if you wish to have the
              // route callback be fired (not usually desirable), or `replace: true`, if
              // you wish to modify the current URL without adding an entry to the history.
              navigate: function (fragment, options) {
                if (!History.started) return false;
                if (!options || options === true)
                  options = { trigger: !!options };

                // Normalize the fragment.
                fragment = this.getFragment(fragment || "");

                // Don't include a trailing slash on the root.
                var rootPath = this.root;
                if (fragment === "" || fragment.charAt(0) === "?") {
                  rootPath = rootPath.slice(0, -1) || "/";
                }
                var url = rootPath + fragment;

                // Strip the hash and decode for matching.
                fragment = this.decodeFragment(
                  fragment.replace(pathStripper, "")
                );

                if (this.fragment === fragment) return;
                this.fragment = fragment;

                // If pushState is available, we use it to set the fragment as a real URL.
                if (this._usePushState) {
                  this.history[options.replace ? "replaceState" : "pushState"](
                    {},
                    document.title,
                    url
                  );

                  // If hash changes haven't been explicitly disabled, update the hash
                  // fragment to store history.
                } else if (this._wantsHashChange) {
                  this._updateHash(this.location, fragment, options.replace);
                  if (
                    this.iframe &&
                    fragment !== this.getHash(this.iframe.contentWindow)
                  ) {
                    var iWindow = this.iframe.contentWindow;

                    // Opening and closing the iframe tricks IE7 and earlier to push a
                    // history entry on hash-tag change.  When replace is true, we don't
                    // want this.
                    if (!options.replace) {
                      iWindow.document.open();
                      iWindow.document.close();
                    }

                    this._updateHash(
                      iWindow.location,
                      fragment,
                      options.replace
                    );
                  }

                  // If you've told us that you explicitly don't want fallback hashchange-
                  // based history, then `navigate` becomes a page refresh.
                } else {
                  return this.location.assign(url);
                }
                if (options.trigger) return this.loadUrl(fragment);
              },

              // Update the hash location, either replacing the current entry, or adding
              // a new one to the browser history.
              _updateHash: function (location, fragment, replace) {
                if (replace) {
                  var href = location.href.replace(/(javascript:|#).*$/, "");
                  location.replace(href + "#" + fragment);
                } else {
                  // Some browsers require that `hash` contains a leading #.
                  location.hash = "#" + fragment;
                }
              },
            });

            // Create the default Backbone.history.
            Backbone.history = new History();

            // Helpers
            // -------

            // Helper function to correctly set up the prototype chain for subclasses.
            // Similar to `goog.inherits`, but uses a hash of prototype properties and
            // class properties to be extended.
            var extend = function (protoProps, staticProps) {
              var parent = this;
              var child;

              // The constructor function for the new subclass is either defined by you
              // (the "constructor" property in your `extend` definition), or defaulted
              // by us to simply call the parent constructor.
              if (protoProps && _.has(protoProps, "constructor")) {
                child = protoProps.constructor;
              } else {
                child = function () {
                  return parent.apply(this, arguments);
                };
              }

              // Add static properties to the constructor function, if supplied.
              _.extend(child, parent, staticProps);

              // Set the prototype chain to inherit from `parent`, without calling
              // `parent`'s constructor function and add the prototype properties.
              child.prototype = _.create(parent.prototype, protoProps);
              child.prototype.constructor = child;

              // Set a convenience property in case the parent's prototype is needed
              // later.
              child.__super__ = parent.prototype;

              return child;
            };

            // Set up inheritance for the model, collection, router, view and history.
            Model.extend =
              Collection.extend =
              Router.extend =
              View.extend =
              History.extend =
                extend;

            // Throw an error when a URL is needed, and none is supplied.
            var urlError = function () {
              throw new Error('A "url" property or function must be specified');
            };

            // Wrap an optional error callback with a fallback error event.
            var wrapError = function (model, options) {
              var error = options.error;
              options.error = function (resp) {
                if (error) error.call(options.context, model, resp, options);
                model.trigger("error", model, resp, options);
              };
            };

            return Backbone;
          });

          /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(23)));

        /***/
      },
      /* 110 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var _, _keyArrayToObject, _mergeArray, _mergeObject, _mergeOptions2;

        var _require = __webpack_require__(0);

        _ = _require._;

        // @nodoc
        _mergeArray = function _mergeArray(result, key, value) {
          result[key] || (result[key] = []);

          if (!_.isArray(value)) {
            value = [value];
          }

          result[key] = result[key].length
            ? _.union(result[key], value)
            : value;
          return result;
        }; // @nodoc

        _mergeObject = function _mergeObject(result, key, value) {
          result[key] || (result[key] = {});
          return _.extend(result[key], value);
        }; // @nodoc

        _keyArrayToObject = function _keyArrayToObject(value) {
          var i, item, len, result;
          result = {};

          for (i = 0, len = value.length; i < len; i++) {
            item = value[i];
            result[item] = {
              key: item,
            };
          }

          return result;
        };

        _mergeOptions2 = function _mergeOptions(result, options) {
          var key, value;

          if (!options) {
            return result;
          }

          for (key in options) {
            value = options[key];

            switch (key) {
              case "internals":
              case "requires":
              case "excludes":
              case "statics":
                _mergeArray(result, key, value);

                break;

              case "keys":
                // an object
                if (
                  (_.isObject(value) && !_.isArray(value)) ||
                  (_.isObject(result[key]) && !_.isArray(result[key]))
                ) {
                  if (!_.isObject(value)) {
                    value = [value];
                  }

                  if (_.isArray(value)) {
                    value = _keyArrayToObject(value);
                  }

                  if (_.isArray(result[key])) {
                    result[key] = _keyArrayToObject(result[key]);
                  }

                  _mergeObject(result, key, value);
                } else {
                  // an array
                  _mergeArray(result, key, value);
                }

                break;

              case "factories":
                if (_.isFunction(value)) {
                  result[key] = value;
                } else {
                  _mergeObject(result, key, value);
                }

                break;

              case "static_defaults":
                _mergeObject(result, key, value);

                break;

              case "options":
                break;

              default:
                result[key] = value;
            }
          }

          return _mergeOptions2(result, options.options);
        }; // @nodoc

        module.exports = function (options) {
          return _mergeOptions2({}, options);
        };

        /***/
      },
      /* 111 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var copyProps; // From Backbone.js (https:github.com/documentcloud/backbone)

        copyProps = function copyProps(dest, source) {
          var key, value;

          for (key in source) {
            value = source[key];
            dest[key] = value;
          }

          return dest;
        }; // Shared empty constructor function to aid in prototype-chain creation.

        var ctor = function ctor() {}; // Helper function to correctly set up the prototype chain, for subclasses.
        // Similar to 'goog.inherits', but uses a hash of prototype properties and
        // class properties to be extended.

        var inherits = function inherits(parent, protoProps, staticProps) {
          var child; // The constructor function for the new subclass is either defined by you
          // (the "constructor" property in your extend definition), or defaulted
          // by us to simply call the parent's constructor.

          if (protoProps && protoProps.hasOwnProperty("constructor")) {
            child = protoProps.constructor;
          } else {
            child = function child() {
              parent.apply(this, arguments);
            };
          } // Inherit class (static) properties from parent.

          copyProps(child, parent); // Set the prototype chain to inherit from parent, without calling
          // parent's constructor function.

          ctor.prototype = parent.prototype;
          child.prototype = new ctor(); // Add prototype properties (instance properties) to the subclass,
          // if supplied.

          if (protoProps) copyProps(child.prototype, protoProps); // Add static properties to the constructor function, if supplied.

          if (staticProps) copyProps(child, staticProps); // Correctly set child's 'prototype.constructor'.

          child.prototype.constructor = child; // Set a convenience property in case the parent's prototype is needed later.

          child.__super__ = parent.prototype;
          return child;
        }; // The self-propagating extend function that BacLCone classes use.

        var extend = function extend(protoProps, classProps) {
          var child = inherits(this, protoProps, classProps);
          child.extend = this.extend;
          return child;
        };

        module.exports = extend;

        /***/
      },
      /* 112 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var _, _unwrapModels;

        var _require = __webpack_require__(0);

        _ = _require._;

        // @nodoc
        module.exports = _unwrapModels = function unwrapModels(obj) {
          var key, result, value;

          if (!obj) {
            return obj;
          }

          if (obj.__kb) {
            return obj.__kb.hasOwnProperty("object") ? obj.__kb.object : obj;
          }

          if (_.isArray(obj)) {
            return _.map(obj, function (test) {
              return _unwrapModels(test);
            });
          }

          if (_.isObject(obj) && obj.constructor === {}.constructor) {
            // a simple object
            result = {};

            for (key in obj) {
              value = obj[key];
              result[key] = _unwrapModels(value);
            }

            return result;
          }

          return obj;
        };

        /***/
      },
      /* 113 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var _, _wrappedDestroy;

        var _require = __webpack_require__(0);

        _ = _require._;

        // @nodoc
        module.exports = _wrappedDestroy = function wrappedDestroy(obj) {
          var __kb, store_references;

          if (!obj.__kb) {
            return;
          }

          if (obj.__kb.event_watcher) {
            obj.__kb.event_watcher.releaseCallbacks(obj);
          }

          __kb = obj.__kb;
          obj.__kb = null; // clear now to break cycles

          if (__kb.observable) {
            __kb.observable.destroy = __kb.observable.release = null;

            _wrappedDestroy(__kb.observable);

            __kb.observable = null;
          }

          __kb.factory = null;

          if (__kb.event_watcher_is_owned) {
            // release the event_watcher
            __kb.event_watcher.destroy();
          }

          __kb.event_watcher = null;

          if (__kb.store_is_owned) {
            // release the store
            __kb.store.destroy();
          }

          __kb.store = null;

          if (__kb.stores_references) {
            while ((store_references = __kb.stores_references.pop())) {
              if (!store_references.store.__kb_released) {
                store_references.store.release(obj);
              }
            }
          }
        };

        /***/
      },
      /* 114 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var AssociatedModel, Backbone, BackboneAssociations, _, kb;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        Backbone = _kb.Backbone;
        AssociatedModel = null; // lazy check
        // @nodoc

        module.exports = BackboneAssociations = /*#__PURE__*/ (function () {
          function BackboneAssociations() {
            _classCallCheck(this, BackboneAssociations);
          }

          _createClass(BackboneAssociations, null, [
            {
              key: "isAvailable",
              value: function isAvailable() {
                return !!(AssociatedModel =
                  Backbone != null ? Backbone.AssociatedModel : void 0); // or require?('backbone-associations')?.AssociatedModel # webpack optionals
              },
            },
            {
              key: "keys",
              value: function keys(model) {
                if (!(model instanceof AssociatedModel)) {
                  return null;
                }

                return _.map(model.relations, function (test) {
                  return test.key;
                });
              },
            },
            {
              key: "relationType",
              value: function relationType(model, key) {
                var relation;

                if (!(model instanceof AssociatedModel)) {
                  return null;
                }

                if (
                  !(relation = _.find(model.relations, function (test) {
                    return test.key === key;
                  }))
                ) {
                  return null;
                }

                if (relation.type === "Many") {
                  return kb.TYPE_COLLECTION;
                } else {
                  return kb.TYPE_MODEL;
                }
              },
            },
            {
              key: "useFunction",
              value: function useFunction() {
                return false;
              },
            },
          ]);

          return BackboneAssociations;
        })();

        /***/
      },
      /* 115 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          Object.defineProperty(Constructor, "prototype", { writable: false });
          return Constructor;
        }

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var Backbone, BackboneRelational, RelationalModel, _, kb;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        Backbone = _kb.Backbone;
        RelationalModel = null; // lazy check
        // @nodoc

        module.exports = BackboneRelational = /*#__PURE__*/ (function () {
          function BackboneRelational() {
            _classCallCheck(this, BackboneRelational);
          }

          _createClass(BackboneRelational, null, [
            {
              key: "isAvailable",
              value: function isAvailable() {
                return !!(RelationalModel =
                  Backbone != null ? Backbone.RelationalModel : void 0); // or require?('backbone-relational')?.RelationalModel # webpack optionals
              },
            },
            {
              key: "relationType",
              value: function relationType(model, key) {
                var relation;

                if (!(model instanceof RelationalModel)) {
                  return null;
                }

                if (
                  !(relation = _.find(model.getRelations(), function (test) {
                    return test.key === key;
                  }))
                ) {
                  return null;
                }

                if (
                  relation.collectionType ||
                  _.isArray(relation.keyContents)
                ) {
                  return kb.TYPE_COLLECTION;
                } else {
                  return kb.TYPE_MODEL;
                }
              },
            },
            {
              key: "bind",
              value: function bind(model, key, update, path) {
                var event, events, i, len, rel_fn, type;

                if (!(type = this.relationType(model, key))) {
                  return null;
                }

                rel_fn = function rel_fn(model) {
                  !kb.statistics ||
                    kb.statistics.addModelEvent({
                      name: "update (relational)",
                      model: model,
                      key: key,
                      path: path,
                    });
                  return update();
                }; // VERSIONING: pre Backbone-Relational 0.8.0

                events = kb.Backbone.Relation.prototype.sanitizeOptions
                  ? ["update", "add", "remove"]
                  : ["change", "add", "remove"];

                if (type === kb.TYPE_COLLECTION) {
                  for (i = 0, len = events.length; i < len; i++) {
                    event = events[i];
                    model.bind("".concat(event, ":").concat(key), rel_fn);
                  }
                } else {
                  model.bind("".concat(events[0], ":").concat(key), rel_fn);
                }

                return function () {
                  var j, len1;

                  if (type === kb.TYPE_COLLECTION) {
                    for (j = 0, len1 = events.length; j < len1; j++) {
                      event = events[j];
                      model.unbind("".concat(event, ":").concat(key), rel_fn);
                    }
                  } else {
                    model.unbind("".concat(events[0], ":").concat(key), rel_fn);
                  }
                };
              },
            },
            {
              key: "useFunction",
              value: function useFunction() {
                return false;
              },
            },
          ]);

          return BackboneRelational;
        })();

        /***/
      },
      /* 116 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var _, kb, ko;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;

        kb.Observable.prototype.setToDefault = function () {
          var ref;

          if ((ref = this.__kb_value) != null) {
            if (typeof ref.setToDefault === "function") {
              ref.setToDefault();
            }
          }
        };

        kb.ViewModel.prototype.setToDefault = function () {
          var ref, vm_key;

          for (vm_key in this.__kb.vm_keys) {
            if ((ref = this[vm_key]) != null) {
              if (typeof ref.setToDefault === "function") {
                ref.setToDefault();
              }
            }
          }
        }; // @example
        //   var model = new Backbone.Model({name: 'Bob'});
        //   var view_model = {
        //     wrapped_name: kb.defaultWrapper(kb.observable(model, 'name'), '(no name)')
        //   }; // view_model.wrapped name: Bob
        //   kb.utils.setToDefault(view_model); // view_model.wrapped name: (no name)

        kb.utils.setToDefault = function (obj) {
          var key, value;

          if (!obj) {
            return;
          } // observable

          if (ko.isObservable(obj)) {
            if (typeof obj.setToDefault === "function") {
              obj.setToDefault();
            } // view model
          } else if (_.isObject(obj)) {
            for (key in obj) {
              value = obj[key];

              if (
                value &&
                (ko.isObservable(value) || typeof value !== "function") &&
                (key[0] !== "_" || key.search("__kb"))
              ) {
                this.setToDefault(value);
              }
            }
          }

          return obj;
        };

        /***/
      },
      /* 117 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        /*
  knockback.js 1.2.3
  Copyright (c)  2011-2016 Kevin Malakoff.
  License: MIT (http://www.opensource.org/licenses/mit-license.php)
  Source: https://github.com/kmalakoff/knockback
  Dependencies: Knockout.js, Backbone.js, and Underscore.js (or LoDash.js).
  Optional dependencies: Backbone.ModelRef.js and BackboneORM.
*/
        var EMAIL_REGEXP, NUMBER_REGEXP, URL_REGEXP, _, kb, ko;

        var _kb = (kb = __webpack_require__(0));

        _ = _kb._;
        ko = _kb.ko;
        // Regular expressions from Angular.js: https://github.com/angular/angular.js
        URL_REGEXP =
          /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/;
        EMAIL_REGEXP = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/;
        NUMBER_REGEXP = /^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/; // A validator should return true if there are errors (similar to the binding check in HTML, eg. $name().required).

        kb.valid = {
          required: function required(value) {
            return !value;
          },
          url: function url(value) {
            return !URL_REGEXP.test(value);
          },
          email: function email(value) {
            return !EMAIL_REGEXP.test(value);
          },
          number: function number(value) {
            return !NUMBER_REGEXP.test(value);
          },
        }; // Convention is that if they end in Fn then returns a function pointer based on parameters passed.

        kb.hasChangedFn = function (model) {
          var attributes, m;
          m = null;
          attributes = null;
          return function () {
            var current_model;

            if (m !== (current_model = ko.utils.unwrapObservable(model))) {
              // change in model
              m = current_model;
              attributes = m ? m.toJSON() : null;
              return false;
            }

            if (!(m && attributes)) {
              return false;
            }

            return !_.isEqual(m.toJSON(), attributes);
          };
        };

        kb.minLengthFn = function (length) {
          return function (value) {
            return !value || value.length < length;
          };
        };

        kb.uniqueValueFn = function (model, key, collection) {
          return function (value) {
            var c, k, m;
            m = ko.utils.unwrapObservable(model);
            k = ko.utils.unwrapObservable(key);
            c = ko.utils.unwrapObservable(collection);

            if (!(m && k && c)) {
              return false;
            }

            return !!_.find(c.models, function (test) {
              return test !== m && test.get(k) === value;
            });
          };
        };

        kb.untilTrueFn = function (stand_in, fn, model) {
          var was_true;
          was_true = false;

          if (model && ko.isObservable(model)) {
            // reset if the model changes
            model.subscribe(function () {
              return (was_true = false);
            });
          }

          return function (value) {
            var f, result;

            if (!(f = ko.utils.unwrapObservable(fn))) {
              return ko.utils.unwrapObservable(stand_in);
            }

            was_true |= !!(result = f(ko.utils.unwrapObservable(value)));
            return was_true ? result : ko.utils.unwrapObservable(stand_in);
          };
        };

        kb.untilFalseFn = function (stand_in, fn, model) {
          var was_false;
          was_false = false;

          if (model && ko.isObservable(model)) {
            // reset if the model changes
            model.subscribe(function () {
              return (was_false = false);
            });
          }

          return function (value) {
            var f, result;

            if (!(f = ko.utils.unwrapObservable(fn))) {
              return ko.utils.unwrapObservable(stand_in);
            }

            was_false |= !(result = f(ko.utils.unwrapObservable(value)));
            return was_false ? result : ko.utils.unwrapObservable(stand_in);
          };
        };

        /***/
      },
      /* 118 */
      /***/ function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
        /*!
         * jQuery JavaScript Library v3.6.0
         * https://jquery.com/
         *
         * Includes Sizzle.js
         * https://sizzlejs.com/
         *
         * Copyright OpenJS Foundation and other contributors
         * Released under the MIT license
         * https://jquery.org/license
         *
         * Date: 2021-03-02T17:08Z
         */
        (function (global, factory) {
          "use strict";

          if (
            typeof module === "object" &&
            typeof module.exports === "object"
          ) {
            // For CommonJS and CommonJS-like environments where a proper `window`
            // is present, execute the factory and get jQuery.
            // For environments that do not have a `window` with a `document`
            // (such as Node.js), expose a factory as module.exports.
            // This accentuates the need for the creation of a real `window`.
            // e.g. var jQuery = require("jquery")(window);
            // See ticket #14549 for more info.
            module.exports = global.document
              ? factory(global, true)
              : function (w) {
                  if (!w.document) {
                    throw new Error("jQuery requires a window with a document");
                  }
                  return factory(w);
                };
          } else {
            factory(global);
          }

          // Pass this if window is not defined yet
        })(
          typeof window !== "undefined" ? window : this,
          function (window, noGlobal) {
            // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
            // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
            // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
            // enough that all such attempts are guarded in a try block.
            "use strict";

            var arr = [];

            var getProto = Object.getPrototypeOf;

            var slice = arr.slice;

            var flat = arr.flat
              ? function (array) {
                  return arr.flat.call(array);
                }
              : function (array) {
                  return arr.concat.apply([], array);
                };

            var push = arr.push;

            var indexOf = arr.indexOf;

            var class2type = {};

            var toString = class2type.toString;

            var hasOwn = class2type.hasOwnProperty;

            var fnToString = hasOwn.toString;

            var ObjectFunctionString = fnToString.call(Object);

            var support = {};

            var isFunction = function isFunction(obj) {
              // Support: Chrome <=57, Firefox <=52
              // In some browsers, typeof returns "function" for HTML <object> elements
              // (i.e., `typeof document.createElement( "object" ) === "function"`).
              // We don't want to classify *any* DOM node as a function.
              // Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
              // Plus for old WebKit, typeof returns "function" for HTML collections
              // (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
              return (
                typeof obj === "function" &&
                typeof obj.nodeType !== "number" &&
                typeof obj.item !== "function"
              );
            };

            var isWindow = function isWindow(obj) {
              return obj != null && obj === obj.window;
            };

            var document = window.document;

            var preservedScriptAttributes = {
              type: true,
              src: true,
              nonce: true,
              noModule: true,
            };

            function DOMEval(code, node, doc) {
              doc = doc || document;

              var i,
                val,
                script = doc.createElement("script");

              script.text = code;
              if (node) {
                for (i in preservedScriptAttributes) {
                  // Support: Firefox 64+, Edge 18+
                  // Some browsers don't support the "nonce" property on scripts.
                  // On the other hand, just using `getAttribute` is not enough as
                  // the `nonce` attribute is reset to an empty string whenever it
                  // becomes browsing-context connected.
                  // See https://github.com/whatwg/html/issues/2369
                  // See https://html.spec.whatwg.org/#nonce-attributes
                  // The `node.getAttribute` check was added for the sake of
                  // `jQuery.globalEval` so that it can fake a nonce-containing node
                  // via an object.
                  val = node[i] || (node.getAttribute && node.getAttribute(i));
                  if (val) {
                    script.setAttribute(i, val);
                  }
                }
              }
              doc.head.appendChild(script).parentNode.removeChild(script);
            }

            function toType(obj) {
              if (obj == null) {
                return obj + "";
              }

              // Support: Android <=2.3 only (functionish RegExp)
              return typeof obj === "object" || typeof obj === "function"
                ? class2type[toString.call(obj)] || "object"
                : typeof obj;
            }
            /* global Symbol */
            // Defining this global in .eslintrc.json would create a danger of using the global
            // unguarded in another place, it seems safer to define global only for this module

            var version = "3.6.0",
              // Define a local copy of jQuery
              jQuery = function (selector, context) {
                // The jQuery object is actually just the init constructor 'enhanced'
                // Need init if jQuery is called (just allow error to be thrown if not included)
                return new jQuery.fn.init(selector, context);
              };

            jQuery.fn = jQuery.prototype = {
              // The current version of jQuery being used
              jquery: version,

              constructor: jQuery,

              // The default length of a jQuery object is 0
              length: 0,

              toArray: function () {
                return slice.call(this);
              },

              // Get the Nth element in the matched element set OR
              // Get the whole matched element set as a clean array
              get: function (num) {
                // Return all the elements in a clean array
                if (num == null) {
                  return slice.call(this);
                }

                // Return just the one element from the set
                return num < 0 ? this[num + this.length] : this[num];
              },

              // Take an array of elements and push it onto the stack
              // (returning the new matched element set)
              pushStack: function (elems) {
                // Build a new jQuery matched element set
                var ret = jQuery.merge(this.constructor(), elems);

                // Add the old object onto the stack (as a reference)
                ret.prevObject = this;

                // Return the newly-formed element set
                return ret;
              },

              // Execute a callback for every element in the matched set.
              each: function (callback) {
                return jQuery.each(this, callback);
              },

              map: function (callback) {
                return this.pushStack(
                  jQuery.map(this, function (elem, i) {
                    return callback.call(elem, i, elem);
                  })
                );
              },

              slice: function () {
                return this.pushStack(slice.apply(this, arguments));
              },

              first: function () {
                return this.eq(0);
              },

              last: function () {
                return this.eq(-1);
              },

              even: function () {
                return this.pushStack(
                  jQuery.grep(this, function (_elem, i) {
                    return (i + 1) % 2;
                  })
                );
              },

              odd: function () {
                return this.pushStack(
                  jQuery.grep(this, function (_elem, i) {
                    return i % 2;
                  })
                );
              },

              eq: function (i) {
                var len = this.length,
                  j = +i + (i < 0 ? len : 0);
                return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
              },

              end: function () {
                return this.prevObject || this.constructor();
              },

              // For internal use only.
              // Behaves like an Array's method, not like a jQuery method.
              push: push,
              sort: arr.sort,
              splice: arr.splice,
            };

            jQuery.extend = jQuery.fn.extend = function () {
              var options,
                name,
                src,
                copy,
                copyIsArray,
                clone,
                target = arguments[0] || {},
                i = 1,
                length = arguments.length,
                deep = false;

              // Handle a deep copy situation
              if (typeof target === "boolean") {
                deep = target;

                // Skip the boolean and the target
                target = arguments[i] || {};
                i++;
              }

              // Handle case when target is a string or something (possible in deep copy)
              if (typeof target !== "object" && !isFunction(target)) {
                target = {};
              }

              // Extend jQuery itself if only one argument is passed
              if (i === length) {
                target = this;
                i--;
              }

              for (; i < length; i++) {
                // Only deal with non-null/undefined values
                if ((options = arguments[i]) != null) {
                  // Extend the base object
                  for (name in options) {
                    copy = options[name];

                    // Prevent Object.prototype pollution
                    // Prevent never-ending loop
                    if (name === "__proto__" || target === copy) {
                      continue;
                    }

                    // Recurse if we're merging plain objects or arrays
                    if (
                      deep &&
                      copy &&
                      (jQuery.isPlainObject(copy) ||
                        (copyIsArray = Array.isArray(copy)))
                    ) {
                      src = target[name];

                      // Ensure proper type for the source value
                      if (copyIsArray && !Array.isArray(src)) {
                        clone = [];
                      } else if (!copyIsArray && !jQuery.isPlainObject(src)) {
                        clone = {};
                      } else {
                        clone = src;
                      }
                      copyIsArray = false;

                      // Never move original objects, clone them
                      target[name] = jQuery.extend(deep, clone, copy);

                      // Don't bring in undefined values
                    } else if (copy !== undefined) {
                      target[name] = copy;
                    }
                  }
                }
              }

              // Return the modified object
              return target;
            };

            jQuery.extend({
              // Unique for each copy of jQuery on the page
              expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),

              // Assume jQuery is ready without the ready module
              isReady: true,

              error: function (msg) {
                throw new Error(msg);
              },

              noop: function () {},

              isPlainObject: function (obj) {
                var proto, Ctor;

                // Detect obvious negatives
                // Use toString instead of jQuery.type to catch host objects
                if (!obj || toString.call(obj) !== "[object Object]") {
                  return false;
                }

                proto = getProto(obj);

                // Objects with no prototype (e.g., `Object.create( null )`) are plain
                if (!proto) {
                  return true;
                }

                // Objects with prototype are plain iff they were constructed by a global Object function
                Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
                return (
                  typeof Ctor === "function" &&
                  fnToString.call(Ctor) === ObjectFunctionString
                );
              },

              isEmptyObject: function (obj) {
                var name;

                for (name in obj) {
                  return false;
                }
                return true;
              },

              // Evaluates a script in a provided context; falls back to the global one
              // if not specified.
              globalEval: function (code, options, doc) {
                DOMEval(code, { nonce: options && options.nonce }, doc);
              },

              each: function (obj, callback) {
                var length,
                  i = 0;

                if (isArrayLike(obj)) {
                  length = obj.length;
                  for (; i < length; i++) {
                    if (callback.call(obj[i], i, obj[i]) === false) {
                      break;
                    }
                  }
                } else {
                  for (i in obj) {
                    if (callback.call(obj[i], i, obj[i]) === false) {
                      break;
                    }
                  }
                }

                return obj;
              },

              // results is for internal usage only
              makeArray: function (arr, results) {
                var ret = results || [];

                if (arr != null) {
                  if (isArrayLike(Object(arr))) {
                    jQuery.merge(ret, typeof arr === "string" ? [arr] : arr);
                  } else {
                    push.call(ret, arr);
                  }
                }

                return ret;
              },

              inArray: function (elem, arr, i) {
                return arr == null ? -1 : indexOf.call(arr, elem, i);
              },

              // Support: Android <=4.0 only, PhantomJS 1 only
              // push.apply(_, arraylike) throws on ancient WebKit
              merge: function (first, second) {
                var len = +second.length,
                  j = 0,
                  i = first.length;

                for (; j < len; j++) {
                  first[i++] = second[j];
                }

                first.length = i;

                return first;
              },

              grep: function (elems, callback, invert) {
                var callbackInverse,
                  matches = [],
                  i = 0,
                  length = elems.length,
                  callbackExpect = !invert;

                // Go through the array, only saving the items
                // that pass the validator function
                for (; i < length; i++) {
                  callbackInverse = !callback(elems[i], i);
                  if (callbackInverse !== callbackExpect) {
                    matches.push(elems[i]);
                  }
                }

                return matches;
              },

              // arg is for internal usage only
              map: function (elems, callback, arg) {
                var length,
                  value,
                  i = 0,
                  ret = [];

                // Go through the array, translating each of the items to their new values
                if (isArrayLike(elems)) {
                  length = elems.length;
                  for (; i < length; i++) {
                    value = callback(elems[i], i, arg);

                    if (value != null) {
                      ret.push(value);
                    }
                  }

                  // Go through every key on the object,
                } else {
                  for (i in elems) {
                    value = callback(elems[i], i, arg);

                    if (value != null) {
                      ret.push(value);
                    }
                  }
                }

                // Flatten any nested arrays
                return flat(ret);
              },

              // A global GUID counter for objects
              guid: 1,

              // jQuery.support is not used in Core but other projects attach their
              // properties to it so it needs to exist.
              support: support,
            });

            if (typeof Symbol === "function") {
              jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];
            }

            // Populate the class2type map
            jQuery.each(
              "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
                " "
              ),
              function (_i, name) {
                class2type["[object " + name + "]"] = name.toLowerCase();
              }
            );

            function isArrayLike(obj) {
              // Support: real iOS 8.2 only (not reproducible in simulator)
              // `in` check used to prevent JIT error (gh-2145)
              // hasOwn isn't used here due to false negatives
              // regarding Nodelist length in IE
              var length = !!obj && "length" in obj && obj.length,
                type = toType(obj);

              if (isFunction(obj) || isWindow(obj)) {
                return false;
              }

              return (
                type === "array" ||
                length === 0 ||
                (typeof length === "number" && length > 0 && length - 1 in obj)
              );
            }
            var Sizzle =
              /*!
               * Sizzle CSS Selector Engine v2.3.6
               * https://sizzlejs.com/
               *
               * Copyright JS Foundation and other contributors
               * Released under the MIT license
               * https://js.foundation/
               *
               * Date: 2021-02-16
               */
              (function (window) {
                var i,
                  support,
                  Expr,
                  getText,
                  isXML,
                  tokenize,
                  compile,
                  select,
                  outermostContext,
                  sortInput,
                  hasDuplicate,
                  // Local document vars
                  setDocument,
                  document,
                  docElem,
                  documentIsHTML,
                  rbuggyQSA,
                  rbuggyMatches,
                  matches,
                  contains,
                  // Instance-specific data
                  expando = "sizzle" + 1 * new Date(),
                  preferredDoc = window.document,
                  dirruns = 0,
                  done = 0,
                  classCache = createCache(),
                  tokenCache = createCache(),
                  compilerCache = createCache(),
                  nonnativeSelectorCache = createCache(),
                  sortOrder = function (a, b) {
                    if (a === b) {
                      hasDuplicate = true;
                    }
                    return 0;
                  },
                  // Instance methods
                  hasOwn = {}.hasOwnProperty,
                  arr = [],
                  pop = arr.pop,
                  pushNative = arr.push,
                  push = arr.push,
                  slice = arr.slice,
                  // Use a stripped-down indexOf as it's faster than native
                  // https://jsperf.com/thor-indexof-vs-for/5
                  indexOf = function (list, elem) {
                    var i = 0,
                      len = list.length;
                    for (; i < len; i++) {
                      if (list[i] === elem) {
                        return i;
                      }
                    }
                    return -1;
                  },
                  booleans =
                    "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
                    "ismap|loop|multiple|open|readonly|required|scoped",
                  // Regular expressions

                  // http://www.w3.org/TR/css3-selectors/#whitespace
                  whitespace = "[\\x20\\t\\r\\n\\f]",
                  // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
                  identifier =
                    "(?:\\\\[\\da-fA-F]{1,6}" +
                    whitespace +
                    "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
                  // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
                  attributes =
                    "\\[" +
                    whitespace +
                    "*(" +
                    identifier +
                    ")(?:" +
                    whitespace +
                    // Operator (capture 2)
                    "*([*^$|!~]?=)" +
                    whitespace +
                    // "Attribute values must be CSS identifiers [capture 5]
                    // or strings [capture 3 or capture 4]"
                    "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" +
                    identifier +
                    "))|)" +
                    whitespace +
                    "*\\]",
                  pseudos =
                    ":(" +
                    identifier +
                    ")(?:\\((" +
                    // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
                    // 1. quoted (capture 3; capture 4 or capture 5)
                    "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
                    // 2. simple (capture 6)
                    "((?:\\\\.|[^\\\\()[\\]]|" +
                    attributes +
                    ")*)|" +
                    // 3. anything else (capture 2)
                    ".*" +
                    ")\\)|)",
                  // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
                  rwhitespace = new RegExp(whitespace + "+", "g"),
                  rtrim = new RegExp(
                    "^" +
                      whitespace +
                      "+|((?:^|[^\\\\])(?:\\\\.)*)" +
                      whitespace +
                      "+$",
                    "g"
                  ),
                  rcomma = new RegExp(
                    "^" + whitespace + "*," + whitespace + "*"
                  ),
                  rcombinators = new RegExp(
                    "^" +
                      whitespace +
                      "*([>+~]|" +
                      whitespace +
                      ")" +
                      whitespace +
                      "*"
                  ),
                  rdescend = new RegExp(whitespace + "|>"),
                  rpseudo = new RegExp(pseudos),
                  ridentifier = new RegExp("^" + identifier + "$"),
                  matchExpr = {
                    ID: new RegExp("^#(" + identifier + ")"),
                    CLASS: new RegExp("^\\.(" + identifier + ")"),
                    TAG: new RegExp("^(" + identifier + "|[*])"),
                    ATTR: new RegExp("^" + attributes),
                    PSEUDO: new RegExp("^" + pseudos),
                    CHILD: new RegExp(
                      "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
                        whitespace +
                        "*(even|odd|(([+-]|)(\\d*)n|)" +
                        whitespace +
                        "*(?:([+-]|)" +
                        whitespace +
                        "*(\\d+)|))" +
                        whitespace +
                        "*\\)|)",
                      "i"
                    ),
                    bool: new RegExp("^(?:" + booleans + ")$", "i"),

                    // For use in libraries implementing .is()
                    // We use this for POS matching in `select`
                    needsContext: new RegExp(
                      "^" +
                        whitespace +
                        "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
                        whitespace +
                        "*((?:-\\d)?\\d*)" +
                        whitespace +
                        "*\\)|)(?=[^-]|$)",
                      "i"
                    ),
                  },
                  rhtml = /HTML$/i,
                  rinputs = /^(?:input|select|textarea|button)$/i,
                  rheader = /^h\d$/i,
                  rnative = /^[^{]+\{\s*\[native \w/,
                  // Easily-parseable/retrievable ID or TAG or CLASS selectors
                  rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                  rsibling = /[+~]/,
                  // CSS escapes
                  // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
                  runescape = new RegExp(
                    "\\\\[\\da-fA-F]{1,6}" +
                      whitespace +
                      "?|\\\\([^\\r\\n\\f])",
                    "g"
                  ),
                  funescape = function (escape, nonHex) {
                    var high = "0x" + escape.slice(1) - 0x10000;

                    return nonHex
                      ? // Strip the backslash prefix from a non-hex escape sequence
                        nonHex
                      : // Replace a hexadecimal escape sequence with the encoded Unicode code point
                      // Support: IE <=11+
                      // For values outside the Basic Multilingual Plane (BMP), manually construct a
                      // surrogate pair
                      high < 0
                      ? String.fromCharCode(high + 0x10000)
                      : String.fromCharCode(
                          (high >> 10) | 0xd800,
                          (high & 0x3ff) | 0xdc00
                        );
                  },
                  // CSS string/identifier serialization
                  // https://drafts.csswg.org/cssom/#common-serializing-idioms
                  rcssescape =
                    /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
                  fcssescape = function (ch, asCodePoint) {
                    if (asCodePoint) {
                      // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
                      if (ch === "\0") {
                        return "\uFFFD";
                      }

                      // Control characters and (dependent upon position) numbers get escaped as code points
                      return (
                        ch.slice(0, -1) +
                        "\\" +
                        ch.charCodeAt(ch.length - 1).toString(16) +
                        " "
                      );
                    }

                    // Other potentially-special ASCII characters get backslash-escaped
                    return "\\" + ch;
                  },
                  // Used for iframes
                  // See setDocument()
                  // Removing the function wrapper causes a "Permission Denied"
                  // error in IE
                  unloadHandler = function () {
                    setDocument();
                  },
                  inDisabledFieldset = addCombinator(
                    function (elem) {
                      return (
                        elem.disabled === true &&
                        elem.nodeName.toLowerCase() === "fieldset"
                      );
                    },
                    { dir: "parentNode", next: "legend" }
                  );

                // Optimize for push.apply( _, NodeList )
                try {
                  push.apply(
                    (arr = slice.call(preferredDoc.childNodes)),
                    preferredDoc.childNodes
                  );

                  // Support: Android<4.0
                  // Detect silently failing push.apply
                  // eslint-disable-next-line no-unused-expressions
                  arr[preferredDoc.childNodes.length].nodeType;
                } catch (e) {
                  push = {
                    apply: arr.length
                      ? // Leverage slice if possible
                        function (target, els) {
                          pushNative.apply(target, slice.call(els));
                        }
                      : // Support: IE<9
                        // Otherwise append directly
                        function (target, els) {
                          var j = target.length,
                            i = 0;

                          // Can't trust NodeList.length
                          while ((target[j++] = els[i++])) {}
                          target.length = j - 1;
                        },
                  };
                }

                function Sizzle(selector, context, results, seed) {
                  var m,
                    i,
                    elem,
                    nid,
                    match,
                    groups,
                    newSelector,
                    newContext = context && context.ownerDocument,
                    // nodeType defaults to 9, since context defaults to document
                    nodeType = context ? context.nodeType : 9;

                  results = results || [];

                  // Return early from calls with invalid selector or context
                  if (
                    typeof selector !== "string" ||
                    !selector ||
                    (nodeType !== 1 && nodeType !== 9 && nodeType !== 11)
                  ) {
                    return results;
                  }

                  // Try to shortcut find operations (as opposed to filters) in HTML documents
                  if (!seed) {
                    setDocument(context);
                    context = context || document;

                    if (documentIsHTML) {
                      // If the selector is sufficiently simple, try using a "get*By*" DOM method
                      // (excepting DocumentFragment context, where the methods don't exist)
                      if (
                        nodeType !== 11 &&
                        (match = rquickExpr.exec(selector))
                      ) {
                        // ID selector
                        if ((m = match[1])) {
                          // Document context
                          if (nodeType === 9) {
                            if ((elem = context.getElementById(m))) {
                              // Support: IE, Opera, Webkit
                              // TODO: identify versions
                              // getElementById can match elements by name instead of ID
                              if (elem.id === m) {
                                results.push(elem);
                                return results;
                              }
                            } else {
                              return results;
                            }

                            // Element context
                          } else {
                            // Support: IE, Opera, Webkit
                            // TODO: identify versions
                            // getElementById can match elements by name instead of ID
                            if (
                              newContext &&
                              (elem = newContext.getElementById(m)) &&
                              contains(context, elem) &&
                              elem.id === m
                            ) {
                              results.push(elem);
                              return results;
                            }
                          }

                          // Type selector
                        } else if (match[2]) {
                          push.apply(
                            results,
                            context.getElementsByTagName(selector)
                          );
                          return results;

                          // Class selector
                        } else if (
                          (m = match[3]) &&
                          support.getElementsByClassName &&
                          context.getElementsByClassName
                        ) {
                          push.apply(
                            results,
                            context.getElementsByClassName(m)
                          );
                          return results;
                        }
                      }

                      // Take advantage of querySelectorAll
                      if (
                        support.qsa &&
                        !nonnativeSelectorCache[selector + " "] &&
                        (!rbuggyQSA || !rbuggyQSA.test(selector)) &&
                        // Support: IE 8 only
                        // Exclude object elements
                        (nodeType !== 1 ||
                          context.nodeName.toLowerCase() !== "object")
                      ) {
                        newSelector = selector;
                        newContext = context;

                        // qSA considers elements outside a scoping root when evaluating child or
                        // descendant combinators, which is not what we want.
                        // In such cases, we work around the behavior by prefixing every selector in the
                        // list with an ID selector referencing the scope context.
                        // The technique has to be used as well when a leading combinator is used
                        // as such selectors are not recognized by querySelectorAll.
                        // Thanks to Andrew Dupont for this technique.
                        if (
                          nodeType === 1 &&
                          (rdescend.test(selector) ||
                            rcombinators.test(selector))
                        ) {
                          // Expand context for sibling selectors
                          newContext =
                            (rsibling.test(selector) &&
                              testContext(context.parentNode)) ||
                            context;

                          // We can use :scope instead of the ID hack if the browser
                          // supports it & if we're not changing the context.
                          if (newContext !== context || !support.scope) {
                            // Capture the context ID, setting it first if necessary
                            if ((nid = context.getAttribute("id"))) {
                              nid = nid.replace(rcssescape, fcssescape);
                            } else {
                              context.setAttribute("id", (nid = expando));
                            }
                          }

                          // Prefix every selector in the list
                          groups = tokenize(selector);
                          i = groups.length;
                          while (i--) {
                            groups[i] =
                              (nid ? "#" + nid : ":scope") +
                              " " +
                              toSelector(groups[i]);
                          }
                          newSelector = groups.join(",");
                        }

                        try {
                          push.apply(
                            results,
                            newContext.querySelectorAll(newSelector)
                          );
                          return results;
                        } catch (qsaError) {
                          nonnativeSelectorCache(selector, true);
                        } finally {
                          if (nid === expando) {
                            context.removeAttribute("id");
                          }
                        }
                      }
                    }
                  }

                  // All others
                  return select(
                    selector.replace(rtrim, "$1"),
                    context,
                    results,
                    seed
                  );
                }

                /**
                 * Create key-value caches of limited size
                 * @returns {function(string, object)} Returns the Object data after storing it on itself with
                 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
                 *	deleting the oldest entry
                 */
                function createCache() {
                  var keys = [];

                  function cache(key, value) {
                    // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
                    if (keys.push(key + " ") > Expr.cacheLength) {
                      // Only keep the most recent entries
                      delete cache[keys.shift()];
                    }
                    return (cache[key + " "] = value);
                  }
                  return cache;
                }

                /**
                 * Mark a function for special use by Sizzle
                 * @param {Function} fn The function to mark
                 */
                function markFunction(fn) {
                  fn[expando] = true;
                  return fn;
                }

                /**
                 * Support testing using an element
                 * @param {Function} fn Passed the created element and returns a boolean result
                 */
                function assert(fn) {
                  var el = document.createElement("fieldset");

                  try {
                    return !!fn(el);
                  } catch (e) {
                    return false;
                  } finally {
                    // Remove from its parent by default
                    if (el.parentNode) {
                      el.parentNode.removeChild(el);
                    }

                    // release memory in IE
                    el = null;
                  }
                }

                /**
                 * Adds the same handler for all of the specified attrs
                 * @param {String} attrs Pipe-separated list of attributes
                 * @param {Function} handler The method that will be applied
                 */
                function addHandle(attrs, handler) {
                  var arr = attrs.split("|"),
                    i = arr.length;

                  while (i--) {
                    Expr.attrHandle[arr[i]] = handler;
                  }
                }

                /**
                 * Checks document order of two siblings
                 * @param {Element} a
                 * @param {Element} b
                 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
                 */
                function siblingCheck(a, b) {
                  var cur = b && a,
                    diff =
                      cur &&
                      a.nodeType === 1 &&
                      b.nodeType === 1 &&
                      a.sourceIndex - b.sourceIndex;

                  // Use IE sourceIndex if available on both nodes
                  if (diff) {
                    return diff;
                  }

                  // Check if b follows a
                  if (cur) {
                    while ((cur = cur.nextSibling)) {
                      if (cur === b) {
                        return -1;
                      }
                    }
                  }

                  return a ? 1 : -1;
                }

                /**
                 * Returns a function to use in pseudos for input types
                 * @param {String} type
                 */
                function createInputPseudo(type) {
                  return function (elem) {
                    var name = elem.nodeName.toLowerCase();
                    return name === "input" && elem.type === type;
                  };
                }

                /**
                 * Returns a function to use in pseudos for buttons
                 * @param {String} type
                 */
                function createButtonPseudo(type) {
                  return function (elem) {
                    var name = elem.nodeName.toLowerCase();
                    return (
                      (name === "input" || name === "button") &&
                      elem.type === type
                    );
                  };
                }

                /**
                 * Returns a function to use in pseudos for :enabled/:disabled
                 * @param {Boolean} disabled true for :disabled; false for :enabled
                 */
                function createDisabledPseudo(disabled) {
                  // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
                  return function (elem) {
                    // Only certain elements can match :enabled or :disabled
                    // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
                    // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
                    if ("form" in elem) {
                      // Check for inherited disabledness on relevant non-disabled elements:
                      // * listed form-associated elements in a disabled fieldset
                      //   https://html.spec.whatwg.org/multipage/forms.html#category-listed
                      //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
                      // * option elements in a disabled optgroup
                      //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
                      // All such elements have a "form" property.
                      if (elem.parentNode && elem.disabled === false) {
                        // Option elements defer to a parent optgroup if present
                        if ("label" in elem) {
                          if ("label" in elem.parentNode) {
                            return elem.parentNode.disabled === disabled;
                          } else {
                            return elem.disabled === disabled;
                          }
                        }

                        // Support: IE 6 - 11
                        // Use the isDisabled shortcut property to check for disabled fieldset ancestors
                        return (
                          elem.isDisabled === disabled ||
                          // Where there is no isDisabled, check manually
                          /* jshint -W018 */
                          (elem.isDisabled !== !disabled &&
                            inDisabledFieldset(elem) === disabled)
                        );
                      }

                      return elem.disabled === disabled;

                      // Try to winnow out elements that can't be disabled before trusting the disabled property.
                      // Some victims get caught in our net (label, legend, menu, track), but it shouldn't
                      // even exist on them, let alone have a boolean value.
                    } else if ("label" in elem) {
                      return elem.disabled === disabled;
                    }

                    // Remaining elements are neither :enabled nor :disabled
                    return false;
                  };
                }

                /**
                 * Returns a function to use in pseudos for positionals
                 * @param {Function} fn
                 */
                function createPositionalPseudo(fn) {
                  return markFunction(function (argument) {
                    argument = +argument;
                    return markFunction(function (seed, matches) {
                      var j,
                        matchIndexes = fn([], seed.length, argument),
                        i = matchIndexes.length;

                      // Match elements found at the specified indexes
                      while (i--) {
                        if (seed[(j = matchIndexes[i])]) {
                          seed[j] = !(matches[j] = seed[j]);
                        }
                      }
                    });
                  });
                }

                /**
                 * Checks a node for validity as a Sizzle context
                 * @param {Element|Object=} context
                 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
                 */
                function testContext(context) {
                  return (
                    context &&
                    typeof context.getElementsByTagName !== "undefined" &&
                    context
                  );
                }

                // Expose support vars for convenience
                support = Sizzle.support = {};

                /**
                 * Detects XML nodes
                 * @param {Element|Object} elem An element or a document
                 * @returns {Boolean} True iff elem is a non-HTML XML node
                 */
                isXML = Sizzle.isXML = function (elem) {
                  var namespace = elem && elem.namespaceURI,
                    docElem =
                      elem && (elem.ownerDocument || elem).documentElement;

                  // Support: IE <=8
                  // Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
                  // https://bugs.jquery.com/ticket/4833
                  return !rhtml.test(
                    namespace || (docElem && docElem.nodeName) || "HTML"
                  );
                };

                /**
                 * Sets document-related variables once based on the current document
                 * @param {Element|Object} [doc] An element or document object to use to set the document
                 * @returns {Object} Returns the current document
                 */
                setDocument = Sizzle.setDocument = function (node) {
                  var hasCompare,
                    subWindow,
                    doc = node ? node.ownerDocument || node : preferredDoc;

                  // Return early if doc is invalid or already selected
                  // Support: IE 11+, Edge 17 - 18+
                  // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                  // two documents; shallow comparisons work.
                  // eslint-disable-next-line eqeqeq
                  if (
                    doc == document ||
                    doc.nodeType !== 9 ||
                    !doc.documentElement
                  ) {
                    return document;
                  }

                  // Update global variables
                  document = doc;
                  docElem = document.documentElement;
                  documentIsHTML = !isXML(document);

                  // Support: IE 9 - 11+, Edge 12 - 18+
                  // Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
                  // Support: IE 11+, Edge 17 - 18+
                  // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                  // two documents; shallow comparisons work.
                  // eslint-disable-next-line eqeqeq
                  if (
                    preferredDoc != document &&
                    (subWindow = document.defaultView) &&
                    subWindow.top !== subWindow
                  ) {
                    // Support: IE 11, Edge
                    if (subWindow.addEventListener) {
                      subWindow.addEventListener(
                        "unload",
                        unloadHandler,
                        false
                      );

                      // Support: IE 9 - 10 only
                    } else if (subWindow.attachEvent) {
                      subWindow.attachEvent("onunload", unloadHandler);
                    }
                  }

                  // Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
                  // Safari 4 - 5 only, Opera <=11.6 - 12.x only
                  // IE/Edge & older browsers don't support the :scope pseudo-class.
                  // Support: Safari 6.0 only
                  // Safari 6.0 supports :scope but it's an alias of :root there.
                  support.scope = assert(function (el) {
                    docElem
                      .appendChild(el)
                      .appendChild(document.createElement("div"));
                    return (
                      typeof el.querySelectorAll !== "undefined" &&
                      !el.querySelectorAll(":scope fieldset div").length
                    );
                  });

                  /* Attributes
	---------------------------------------------------------------------- */

                  // Support: IE<8
                  // Verify that getAttribute really returns attributes and not properties
                  // (excepting IE8 booleans)
                  support.attributes = assert(function (el) {
                    el.className = "i";
                    return !el.getAttribute("className");
                  });

                  /* getElement(s)By*
	---------------------------------------------------------------------- */

                  // Check if getElementsByTagName("*") returns only elements
                  support.getElementsByTagName = assert(function (el) {
                    el.appendChild(document.createComment(""));
                    return !el.getElementsByTagName("*").length;
                  });

                  // Support: IE<9
                  support.getElementsByClassName = rnative.test(
                    document.getElementsByClassName
                  );

                  // Support: IE<10
                  // Check if getElementById returns elements by name
                  // The broken getElementById methods don't pick up programmatically-set names,
                  // so use a roundabout getElementsByName test
                  support.getById = assert(function (el) {
                    docElem.appendChild(el).id = expando;
                    return (
                      !document.getElementsByName ||
                      !document.getElementsByName(expando).length
                    );
                  });

                  // ID filter and find
                  if (support.getById) {
                    Expr.filter["ID"] = function (id) {
                      var attrId = id.replace(runescape, funescape);
                      return function (elem) {
                        return elem.getAttribute("id") === attrId;
                      };
                    };
                    Expr.find["ID"] = function (id, context) {
                      if (
                        typeof context.getElementById !== "undefined" &&
                        documentIsHTML
                      ) {
                        var elem = context.getElementById(id);
                        return elem ? [elem] : [];
                      }
                    };
                  } else {
                    Expr.filter["ID"] = function (id) {
                      var attrId = id.replace(runescape, funescape);
                      return function (elem) {
                        var node =
                          typeof elem.getAttributeNode !== "undefined" &&
                          elem.getAttributeNode("id");
                        return node && node.value === attrId;
                      };
                    };

                    // Support: IE 6 - 7 only
                    // getElementById is not reliable as a find shortcut
                    Expr.find["ID"] = function (id, context) {
                      if (
                        typeof context.getElementById !== "undefined" &&
                        documentIsHTML
                      ) {
                        var node,
                          i,
                          elems,
                          elem = context.getElementById(id);

                        if (elem) {
                          // Verify the id attribute
                          node = elem.getAttributeNode("id");
                          if (node && node.value === id) {
                            return [elem];
                          }

                          // Fall back on getElementsByName
                          elems = context.getElementsByName(id);
                          i = 0;
                          while ((elem = elems[i++])) {
                            node = elem.getAttributeNode("id");
                            if (node && node.value === id) {
                              return [elem];
                            }
                          }
                        }

                        return [];
                      }
                    };
                  }

                  // Tag
                  Expr.find["TAG"] = support.getElementsByTagName
                    ? function (tag, context) {
                        if (
                          typeof context.getElementsByTagName !== "undefined"
                        ) {
                          return context.getElementsByTagName(tag);

                          // DocumentFragment nodes don't have gEBTN
                        } else if (support.qsa) {
                          return context.querySelectorAll(tag);
                        }
                      }
                    : function (tag, context) {
                        var elem,
                          tmp = [],
                          i = 0,
                          // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
                          results = context.getElementsByTagName(tag);

                        // Filter out possible comments
                        if (tag === "*") {
                          while ((elem = results[i++])) {
                            if (elem.nodeType === 1) {
                              tmp.push(elem);
                            }
                          }

                          return tmp;
                        }
                        return results;
                      };

                  // Class
                  Expr.find["CLASS"] =
                    support.getElementsByClassName &&
                    function (className, context) {
                      if (
                        typeof context.getElementsByClassName !== "undefined" &&
                        documentIsHTML
                      ) {
                        return context.getElementsByClassName(className);
                      }
                    };

                  /* QSA/matchesSelector
	---------------------------------------------------------------------- */

                  // QSA and matchesSelector support

                  // matchesSelector(:active) reports false when true (IE9/Opera 11.5)
                  rbuggyMatches = [];

                  // qSa(:focus) reports false when true (Chrome 21)
                  // We allow this because of a bug in IE8/9 that throws an error
                  // whenever `document.activeElement` is accessed on an iframe
                  // So, we allow :focus to pass through QSA all the time to avoid the IE error
                  // See https://bugs.jquery.com/ticket/13378
                  rbuggyQSA = [];

                  if ((support.qsa = rnative.test(document.querySelectorAll))) {
                    // Build QSA regex
                    // Regex strategy adopted from Diego Perini
                    assert(function (el) {
                      var input;

                      // Select is set to empty string on purpose
                      // This is to test IE's treatment of not explicitly
                      // setting a boolean content attribute,
                      // since its presence should be enough
                      // https://bugs.jquery.com/ticket/12359
                      docElem.appendChild(el).innerHTML =
                        "<a id='" +
                        expando +
                        "'></a>" +
                        "<select id='" +
                        expando +
                        "-\r\\' msallowcapture=''>" +
                        "<option selected=''></option></select>";

                      // Support: IE8, Opera 11-12.16
                      // Nothing should be selected when empty strings follow ^= or $= or *=
                      // The test attribute must be unknown in Opera but "safe" for WinRT
                      // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
                      if (el.querySelectorAll("[msallowcapture^='']").length) {
                        rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")");
                      }

                      // Support: IE8
                      // Boolean attributes and "value" are not treated correctly
                      if (!el.querySelectorAll("[selected]").length) {
                        rbuggyQSA.push(
                          "\\[" + whitespace + "*(?:value|" + booleans + ")"
                        );
                      }

                      // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
                      if (
                        !el.querySelectorAll("[id~=" + expando + "-]").length
                      ) {
                        rbuggyQSA.push("~=");
                      }

                      // Support: IE 11+, Edge 15 - 18+
                      // IE 11/Edge don't find elements on a `[name='']` query in some cases.
                      // Adding a temporary attribute to the document before the selection works
                      // around the issue.
                      // Interestingly, IE 10 & older don't seem to have the issue.
                      input = document.createElement("input");
                      input.setAttribute("name", "");
                      el.appendChild(input);
                      if (!el.querySelectorAll("[name='']").length) {
                        rbuggyQSA.push(
                          "\\[" +
                            whitespace +
                            "*name" +
                            whitespace +
                            "*=" +
                            whitespace +
                            "*(?:''|\"\")"
                        );
                      }

                      // Webkit/Opera - :checked should return selected option elements
                      // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                      // IE8 throws error here and will not see later tests
                      if (!el.querySelectorAll(":checked").length) {
                        rbuggyQSA.push(":checked");
                      }

                      // Support: Safari 8+, iOS 8+
                      // https://bugs.webkit.org/show_bug.cgi?id=136851
                      // In-page `selector#id sibling-combinator selector` fails
                      if (!el.querySelectorAll("a#" + expando + "+*").length) {
                        rbuggyQSA.push(".#.+[+~]");
                      }

                      // Support: Firefox <=3.6 - 5 only
                      // Old Firefox doesn't throw on a badly-escaped identifier.
                      el.querySelectorAll("\\\f");
                      rbuggyQSA.push("[\\r\\n\\f]");
                    });

                    assert(function (el) {
                      el.innerHTML =
                        "<a href='' disabled='disabled'></a>" +
                        "<select disabled='disabled'><option/></select>";

                      // Support: Windows 8 Native Apps
                      // The type and name attributes are restricted during .innerHTML assignment
                      var input = document.createElement("input");
                      input.setAttribute("type", "hidden");
                      el.appendChild(input).setAttribute("name", "D");

                      // Support: IE8
                      // Enforce case-sensitivity of name attribute
                      if (el.querySelectorAll("[name=d]").length) {
                        rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=");
                      }

                      // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
                      // IE8 throws error here and will not see later tests
                      if (el.querySelectorAll(":enabled").length !== 2) {
                        rbuggyQSA.push(":enabled", ":disabled");
                      }

                      // Support: IE9-11+
                      // IE's :disabled selector does not pick up the children of disabled fieldsets
                      docElem.appendChild(el).disabled = true;
                      if (el.querySelectorAll(":disabled").length !== 2) {
                        rbuggyQSA.push(":enabled", ":disabled");
                      }

                      // Support: Opera 10 - 11 only
                      // Opera 10-11 does not throw on post-comma invalid pseudos
                      el.querySelectorAll("*,:x");
                      rbuggyQSA.push(",.*:");
                    });
                  }

                  if (
                    (support.matchesSelector = rnative.test(
                      (matches =
                        docElem.matches ||
                        docElem.webkitMatchesSelector ||
                        docElem.mozMatchesSelector ||
                        docElem.oMatchesSelector ||
                        docElem.msMatchesSelector)
                    ))
                  ) {
                    assert(function (el) {
                      // Check to see if it's possible to do matchesSelector
                      // on a disconnected node (IE 9)
                      support.disconnectedMatch = matches.call(el, "*");

                      // This should fail with an exception
                      // Gecko does not error, returns false instead
                      matches.call(el, "[s!='']:x");
                      rbuggyMatches.push("!=", pseudos);
                    });
                  }

                  rbuggyQSA =
                    rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
                  rbuggyMatches =
                    rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));

                  /* Contains
	---------------------------------------------------------------------- */
                  hasCompare = rnative.test(docElem.compareDocumentPosition);

                  // Element contains another
                  // Purposefully self-exclusive
                  // As in, an element does not contain itself
                  contains =
                    hasCompare || rnative.test(docElem.contains)
                      ? function (a, b) {
                          var adown = a.nodeType === 9 ? a.documentElement : a,
                            bup = b && b.parentNode;
                          return (
                            a === bup ||
                            !!(
                              bup &&
                              bup.nodeType === 1 &&
                              (adown.contains
                                ? adown.contains(bup)
                                : a.compareDocumentPosition &&
                                  a.compareDocumentPosition(bup) & 16)
                            )
                          );
                        }
                      : function (a, b) {
                          if (b) {
                            while ((b = b.parentNode)) {
                              if (b === a) {
                                return true;
                              }
                            }
                          }
                          return false;
                        };

                  /* Sorting
	---------------------------------------------------------------------- */

                  // Document order sorting
                  sortOrder = hasCompare
                    ? function (a, b) {
                        // Flag for duplicate removal
                        if (a === b) {
                          hasDuplicate = true;
                          return 0;
                        }

                        // Sort on method existence if only one input has compareDocumentPosition
                        var compare =
                          !a.compareDocumentPosition -
                          !b.compareDocumentPosition;
                        if (compare) {
                          return compare;
                        }

                        // Calculate position if both inputs belong to the same document
                        // Support: IE 11+, Edge 17 - 18+
                        // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                        // two documents; shallow comparisons work.
                        // eslint-disable-next-line eqeqeq
                        compare =
                          (a.ownerDocument || a) == (b.ownerDocument || b)
                            ? a.compareDocumentPosition(b)
                            : // Otherwise we know they are disconnected
                              1;

                        // Disconnected nodes
                        if (
                          compare & 1 ||
                          (!support.sortDetached &&
                            b.compareDocumentPosition(a) === compare)
                        ) {
                          // Choose the first element that is related to our preferred document
                          // Support: IE 11+, Edge 17 - 18+
                          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                          // two documents; shallow comparisons work.
                          // eslint-disable-next-line eqeqeq
                          if (
                            a == document ||
                            (a.ownerDocument == preferredDoc &&
                              contains(preferredDoc, a))
                          ) {
                            return -1;
                          }

                          // Support: IE 11+, Edge 17 - 18+
                          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                          // two documents; shallow comparisons work.
                          // eslint-disable-next-line eqeqeq
                          if (
                            b == document ||
                            (b.ownerDocument == preferredDoc &&
                              contains(preferredDoc, b))
                          ) {
                            return 1;
                          }

                          // Maintain original order
                          return sortInput
                            ? indexOf(sortInput, a) - indexOf(sortInput, b)
                            : 0;
                        }

                        return compare & 4 ? -1 : 1;
                      }
                    : function (a, b) {
                        // Exit early if the nodes are identical
                        if (a === b) {
                          hasDuplicate = true;
                          return 0;
                        }

                        var cur,
                          i = 0,
                          aup = a.parentNode,
                          bup = b.parentNode,
                          ap = [a],
                          bp = [b];

                        // Parentless nodes are either documents or disconnected
                        if (!aup || !bup) {
                          // Support: IE 11+, Edge 17 - 18+
                          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                          // two documents; shallow comparisons work.
                          /* eslint-disable eqeqeq */
                          return a == document
                            ? -1
                            : b == document
                            ? 1
                            : /* eslint-enable eqeqeq */
                            aup
                            ? -1
                            : bup
                            ? 1
                            : sortInput
                            ? indexOf(sortInput, a) - indexOf(sortInput, b)
                            : 0;

                          // If the nodes are siblings, we can do a quick check
                        } else if (aup === bup) {
                          return siblingCheck(a, b);
                        }

                        // Otherwise we need full lists of their ancestors for comparison
                        cur = a;
                        while ((cur = cur.parentNode)) {
                          ap.unshift(cur);
                        }
                        cur = b;
                        while ((cur = cur.parentNode)) {
                          bp.unshift(cur);
                        }

                        // Walk down the tree looking for a discrepancy
                        while (ap[i] === bp[i]) {
                          i++;
                        }

                        return i
                          ? // Do a sibling check if the nodes have a common ancestor
                            siblingCheck(ap[i], bp[i])
                          : // Otherwise nodes in our document sort first
                          // Support: IE 11+, Edge 17 - 18+
                          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                          // two documents; shallow comparisons work.
                          /* eslint-disable eqeqeq */
                          ap[i] == preferredDoc
                          ? -1
                          : bp[i] == preferredDoc
                          ? 1
                          : /* eslint-enable eqeqeq */
                            0;
                      };

                  return document;
                };

                Sizzle.matches = function (expr, elements) {
                  return Sizzle(expr, null, null, elements);
                };

                Sizzle.matchesSelector = function (elem, expr) {
                  setDocument(elem);

                  if (
                    support.matchesSelector &&
                    documentIsHTML &&
                    !nonnativeSelectorCache[expr + " "] &&
                    (!rbuggyMatches || !rbuggyMatches.test(expr)) &&
                    (!rbuggyQSA || !rbuggyQSA.test(expr))
                  ) {
                    try {
                      var ret = matches.call(elem, expr);

                      // IE 9's matchesSelector returns false on disconnected nodes
                      if (
                        ret ||
                        support.disconnectedMatch ||
                        // As well, disconnected nodes are said to be in a document
                        // fragment in IE 9
                        (elem.document && elem.document.nodeType !== 11)
                      ) {
                        return ret;
                      }
                    } catch (e) {
                      nonnativeSelectorCache(expr, true);
                    }
                  }

                  return Sizzle(expr, document, null, [elem]).length > 0;
                };

                Sizzle.contains = function (context, elem) {
                  // Set document vars if needed
                  // Support: IE 11+, Edge 17 - 18+
                  // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                  // two documents; shallow comparisons work.
                  // eslint-disable-next-line eqeqeq
                  if ((context.ownerDocument || context) != document) {
                    setDocument(context);
                  }
                  return contains(context, elem);
                };

                Sizzle.attr = function (elem, name) {
                  // Set document vars if needed
                  // Support: IE 11+, Edge 17 - 18+
                  // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                  // two documents; shallow comparisons work.
                  // eslint-disable-next-line eqeqeq
                  if ((elem.ownerDocument || elem) != document) {
                    setDocument(elem);
                  }

                  var fn = Expr.attrHandle[name.toLowerCase()],
                    // Don't get fooled by Object.prototype properties (jQuery #13807)
                    val =
                      fn && hasOwn.call(Expr.attrHandle, name.toLowerCase())
                        ? fn(elem, name, !documentIsHTML)
                        : undefined;

                  return val !== undefined
                    ? val
                    : support.attributes || !documentIsHTML
                    ? elem.getAttribute(name)
                    : (val = elem.getAttributeNode(name)) && val.specified
                    ? val.value
                    : null;
                };

                Sizzle.escape = function (sel) {
                  return (sel + "").replace(rcssescape, fcssescape);
                };

                Sizzle.error = function (msg) {
                  throw new Error(
                    "Syntax error, unrecognized expression: " + msg
                  );
                };

                /**
                 * Document sorting and removing duplicates
                 * @param {ArrayLike} results
                 */
                Sizzle.uniqueSort = function (results) {
                  var elem,
                    duplicates = [],
                    j = 0,
                    i = 0;

                  // Unless we *know* we can detect duplicates, assume their presence
                  hasDuplicate = !support.detectDuplicates;
                  sortInput = !support.sortStable && results.slice(0);
                  results.sort(sortOrder);

                  if (hasDuplicate) {
                    while ((elem = results[i++])) {
                      if (elem === results[i]) {
                        j = duplicates.push(i);
                      }
                    }
                    while (j--) {
                      results.splice(duplicates[j], 1);
                    }
                  }

                  // Clear input after sorting to release objects
                  // See https://github.com/jquery/sizzle/pull/225
                  sortInput = null;

                  return results;
                };

                /**
                 * Utility function for retrieving the text value of an array of DOM nodes
                 * @param {Array|Element} elem
                 */
                getText = Sizzle.getText = function (elem) {
                  var node,
                    ret = "",
                    i = 0,
                    nodeType = elem.nodeType;

                  if (!nodeType) {
                    // If no nodeType, this is expected to be an array
                    while ((node = elem[i++])) {
                      // Do not traverse comment nodes
                      ret += getText(node);
                    }
                  } else if (
                    nodeType === 1 ||
                    nodeType === 9 ||
                    nodeType === 11
                  ) {
                    // Use textContent for elements
                    // innerText usage removed for consistency of new lines (jQuery #11153)
                    if (typeof elem.textContent === "string") {
                      return elem.textContent;
                    } else {
                      // Traverse its children
                      for (
                        elem = elem.firstChild;
                        elem;
                        elem = elem.nextSibling
                      ) {
                        ret += getText(elem);
                      }
                    }
                  } else if (nodeType === 3 || nodeType === 4) {
                    return elem.nodeValue;
                  }

                  // Do not include comment or processing instruction nodes

                  return ret;
                };

                Expr = Sizzle.selectors = {
                  // Can be adjusted by the user
                  cacheLength: 50,

                  createPseudo: markFunction,

                  match: matchExpr,

                  attrHandle: {},

                  find: {},

                  relative: {
                    ">": { dir: "parentNode", first: true },
                    " ": { dir: "parentNode" },
                    "+": { dir: "previousSibling", first: true },
                    "~": { dir: "previousSibling" },
                  },

                  preFilter: {
                    ATTR: function (match) {
                      match[1] = match[1].replace(runescape, funescape);

                      // Move the given value to match[3] whether quoted or unquoted
                      match[3] = (
                        match[3] ||
                        match[4] ||
                        match[5] ||
                        ""
                      ).replace(runescape, funescape);

                      if (match[2] === "~=") {
                        match[3] = " " + match[3] + " ";
                      }

                      return match.slice(0, 4);
                    },

                    CHILD: function (match) {
                      /* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
                      match[1] = match[1].toLowerCase();

                      if (match[1].slice(0, 3) === "nth") {
                        // nth-* requires argument
                        if (!match[3]) {
                          Sizzle.error(match[0]);
                        }

                        // numeric x and y parameters for Expr.filter.CHILD
                        // remember that false/true cast respectively to 0/1
                        match[4] = +(match[4]
                          ? match[5] + (match[6] || 1)
                          : 2 * (match[3] === "even" || match[3] === "odd"));
                        match[5] = +(match[7] + match[8] || match[3] === "odd");

                        // other types prohibit arguments
                      } else if (match[3]) {
                        Sizzle.error(match[0]);
                      }

                      return match;
                    },

                    PSEUDO: function (match) {
                      var excess,
                        unquoted = !match[6] && match[2];

                      if (matchExpr["CHILD"].test(match[0])) {
                        return null;
                      }

                      // Accept quoted arguments as-is
                      if (match[3]) {
                        match[2] = match[4] || match[5] || "";

                        // Strip excess characters from unquoted arguments
                      } else if (
                        unquoted &&
                        rpseudo.test(unquoted) &&
                        // Get excess from tokenize (recursively)
                        (excess = tokenize(unquoted, true)) &&
                        // advance to the next closing parenthesis
                        (excess =
                          unquoted.indexOf(")", unquoted.length - excess) -
                          unquoted.length)
                      ) {
                        // excess is a negative index
                        match[0] = match[0].slice(0, excess);
                        match[2] = unquoted.slice(0, excess);
                      }

                      // Return only captures needed by the pseudo filter method (type and argument)
                      return match.slice(0, 3);
                    },
                  },

                  filter: {
                    TAG: function (nodeNameSelector) {
                      var nodeName = nodeNameSelector
                        .replace(runescape, funescape)
                        .toLowerCase();
                      return nodeNameSelector === "*"
                        ? function () {
                            return true;
                          }
                        : function (elem) {
                            return (
                              elem.nodeName &&
                              elem.nodeName.toLowerCase() === nodeName
                            );
                          };
                    },

                    CLASS: function (className) {
                      var pattern = classCache[className + " "];

                      return (
                        pattern ||
                        ((pattern = new RegExp(
                          "(^|" +
                            whitespace +
                            ")" +
                            className +
                            "(" +
                            whitespace +
                            "|$)"
                        )) &&
                          classCache(className, function (elem) {
                            return pattern.test(
                              (typeof elem.className === "string" &&
                                elem.className) ||
                                (typeof elem.getAttribute !== "undefined" &&
                                  elem.getAttribute("class")) ||
                                ""
                            );
                          }))
                      );
                    },

                    ATTR: function (name, operator, check) {
                      return function (elem) {
                        var result = Sizzle.attr(elem, name);

                        if (result == null) {
                          return operator === "!=";
                        }
                        if (!operator) {
                          return true;
                        }

                        result += "";

                        /* eslint-disable max-len */

                        return operator === "="
                          ? result === check
                          : operator === "!="
                          ? result !== check
                          : operator === "^="
                          ? check && result.indexOf(check) === 0
                          : operator === "*="
                          ? check && result.indexOf(check) > -1
                          : operator === "$="
                          ? check && result.slice(-check.length) === check
                          : operator === "~="
                          ? (
                              " " +
                              result.replace(rwhitespace, " ") +
                              " "
                            ).indexOf(check) > -1
                          : operator === "|="
                          ? result === check ||
                            result.slice(0, check.length + 1) === check + "-"
                          : false;
                        /* eslint-enable max-len */
                      };
                    },

                    CHILD: function (type, what, _argument, first, last) {
                      var simple = type.slice(0, 3) !== "nth",
                        forward = type.slice(-4) !== "last",
                        ofType = what === "of-type";

                      return first === 1 && last === 0
                        ? // Shortcut for :nth-*(n)
                          function (elem) {
                            return !!elem.parentNode;
                          }
                        : function (elem, _context, xml) {
                            var cache,
                              uniqueCache,
                              outerCache,
                              node,
                              nodeIndex,
                              start,
                              dir =
                                simple !== forward
                                  ? "nextSibling"
                                  : "previousSibling",
                              parent = elem.parentNode,
                              name = ofType && elem.nodeName.toLowerCase(),
                              useCache = !xml && !ofType,
                              diff = false;

                            if (parent) {
                              // :(first|last|only)-(child|of-type)
                              if (simple) {
                                while (dir) {
                                  node = elem;
                                  while ((node = node[dir])) {
                                    if (
                                      ofType
                                        ? node.nodeName.toLowerCase() === name
                                        : node.nodeType === 1
                                    ) {
                                      return false;
                                    }
                                  }

                                  // Reverse direction for :only-* (if we haven't yet done so)
                                  start = dir =
                                    type === "only" && !start && "nextSibling";
                                }
                                return true;
                              }

                              start = [
                                forward ? parent.firstChild : parent.lastChild,
                              ];

                              // non-xml :nth-child(...) stores cache data on `parent`
                              if (forward && useCache) {
                                // Seek `elem` from a previously-cached index

                                // ...in a gzip-friendly way
                                node = parent;
                                outerCache =
                                  node[expando] || (node[expando] = {});

                                // Support: IE <9 only
                                // Defend against cloned attroperties (jQuery gh-1709)
                                uniqueCache =
                                  outerCache[node.uniqueID] ||
                                  (outerCache[node.uniqueID] = {});

                                cache = uniqueCache[type] || [];
                                nodeIndex = cache[0] === dirruns && cache[1];
                                diff = nodeIndex && cache[2];
                                node =
                                  nodeIndex && parent.childNodes[nodeIndex];

                                while (
                                  (node =
                                    (++nodeIndex && node && node[dir]) ||
                                    // Fallback to seeking `elem` from the start
                                    (diff = nodeIndex = 0) ||
                                    start.pop())
                                ) {
                                  // When found, cache indexes on `parent` and break
                                  if (
                                    node.nodeType === 1 &&
                                    ++diff &&
                                    node === elem
                                  ) {
                                    uniqueCache[type] = [
                                      dirruns,
                                      nodeIndex,
                                      diff,
                                    ];
                                    break;
                                  }
                                }
                              } else {
                                // Use previously-cached element index if available
                                if (useCache) {
                                  // ...in a gzip-friendly way
                                  node = elem;
                                  outerCache =
                                    node[expando] || (node[expando] = {});

                                  // Support: IE <9 only
                                  // Defend against cloned attroperties (jQuery gh-1709)
                                  uniqueCache =
                                    outerCache[node.uniqueID] ||
                                    (outerCache[node.uniqueID] = {});

                                  cache = uniqueCache[type] || [];
                                  nodeIndex = cache[0] === dirruns && cache[1];
                                  diff = nodeIndex;
                                }

                                // xml :nth-child(...)
                                // or :nth-last-child(...) or :nth(-last)?-of-type(...)
                                if (diff === false) {
                                  // Use the same loop as above to seek `elem` from the start
                                  while (
                                    (node =
                                      (++nodeIndex && node && node[dir]) ||
                                      (diff = nodeIndex = 0) ||
                                      start.pop())
                                  ) {
                                    if (
                                      (ofType
                                        ? node.nodeName.toLowerCase() === name
                                        : node.nodeType === 1) &&
                                      ++diff
                                    ) {
                                      // Cache the index of each encountered element
                                      if (useCache) {
                                        outerCache =
                                          node[expando] || (node[expando] = {});

                                        // Support: IE <9 only
                                        // Defend against cloned attroperties (jQuery gh-1709)
                                        uniqueCache =
                                          outerCache[node.uniqueID] ||
                                          (outerCache[node.uniqueID] = {});

                                        uniqueCache[type] = [dirruns, diff];
                                      }

                                      if (node === elem) {
                                        break;
                                      }
                                    }
                                  }
                                }
                              }

                              // Incorporate the offset, then check against cycle size
                              diff -= last;
                              return (
                                diff === first ||
                                (diff % first === 0 && diff / first >= 0)
                              );
                            }
                          };
                    },

                    PSEUDO: function (pseudo, argument) {
                      // pseudo-class names are case-insensitive
                      // http://www.w3.org/TR/selectors/#pseudo-classes
                      // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
                      // Remember that setFilters inherits from pseudos
                      var args,
                        fn =
                          Expr.pseudos[pseudo] ||
                          Expr.setFilters[pseudo.toLowerCase()] ||
                          Sizzle.error("unsupported pseudo: " + pseudo);

                      // The user may use createPseudo to indicate that
                      // arguments are needed to create the filter function
                      // just as Sizzle does
                      if (fn[expando]) {
                        return fn(argument);
                      }

                      // But maintain support for old signatures
                      if (fn.length > 1) {
                        args = [pseudo, pseudo, "", argument];
                        return Expr.setFilters.hasOwnProperty(
                          pseudo.toLowerCase()
                        )
                          ? markFunction(function (seed, matches) {
                              var idx,
                                matched = fn(seed, argument),
                                i = matched.length;
                              while (i--) {
                                idx = indexOf(seed, matched[i]);
                                seed[idx] = !(matches[idx] = matched[i]);
                              }
                            })
                          : function (elem) {
                              return fn(elem, 0, args);
                            };
                      }

                      return fn;
                    },
                  },

                  pseudos: {
                    // Potentially complex pseudos
                    not: markFunction(function (selector) {
                      // Trim the selector passed to compile
                      // to avoid treating leading and trailing
                      // spaces as combinators
                      var input = [],
                        results = [],
                        matcher = compile(selector.replace(rtrim, "$1"));

                      return matcher[expando]
                        ? markFunction(function (seed, matches, _context, xml) {
                            var elem,
                              unmatched = matcher(seed, null, xml, []),
                              i = seed.length;

                            // Match elements unmatched by `matcher`
                            while (i--) {
                              if ((elem = unmatched[i])) {
                                seed[i] = !(matches[i] = elem);
                              }
                            }
                          })
                        : function (elem, _context, xml) {
                            input[0] = elem;
                            matcher(input, null, xml, results);

                            // Don't keep the element (issue #299)
                            input[0] = null;
                            return !results.pop();
                          };
                    }),

                    has: markFunction(function (selector) {
                      return function (elem) {
                        return Sizzle(selector, elem).length > 0;
                      };
                    }),

                    contains: markFunction(function (text) {
                      text = text.replace(runescape, funescape);
                      return function (elem) {
                        return (
                          (elem.textContent || getText(elem)).indexOf(text) > -1
                        );
                      };
                    }),

                    // "Whether an element is represented by a :lang() selector
                    // is based solely on the element's language value
                    // being equal to the identifier C,
                    // or beginning with the identifier C immediately followed by "-".
                    // The matching of C against the element's language value is performed case-insensitively.
                    // The identifier C does not have to be a valid language name."
                    // http://www.w3.org/TR/selectors/#lang-pseudo
                    lang: markFunction(function (lang) {
                      // lang value must be a valid identifier
                      if (!ridentifier.test(lang || "")) {
                        Sizzle.error("unsupported lang: " + lang);
                      }
                      lang = lang.replace(runescape, funescape).toLowerCase();
                      return function (elem) {
                        var elemLang;
                        do {
                          if (
                            (elemLang = documentIsHTML
                              ? elem.lang
                              : elem.getAttribute("xml:lang") ||
                                elem.getAttribute("lang"))
                          ) {
                            elemLang = elemLang.toLowerCase();
                            return (
                              elemLang === lang ||
                              elemLang.indexOf(lang + "-") === 0
                            );
                          }
                        } while ((elem = elem.parentNode) && elem.nodeType === 1);
                        return false;
                      };
                    }),

                    // Miscellaneous
                    target: function (elem) {
                      var hash = window.location && window.location.hash;
                      return hash && hash.slice(1) === elem.id;
                    },

                    root: function (elem) {
                      return elem === docElem;
                    },

                    focus: function (elem) {
                      return (
                        elem === document.activeElement &&
                        (!document.hasFocus || document.hasFocus()) &&
                        !!(elem.type || elem.href || ~elem.tabIndex)
                      );
                    },

                    // Boolean properties
                    enabled: createDisabledPseudo(false),
                    disabled: createDisabledPseudo(true),

                    checked: function (elem) {
                      // In CSS3, :checked should return both checked and selected elements
                      // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                      var nodeName = elem.nodeName.toLowerCase();
                      return (
                        (nodeName === "input" && !!elem.checked) ||
                        (nodeName === "option" && !!elem.selected)
                      );
                    },

                    selected: function (elem) {
                      // Accessing this property makes selected-by-default
                      // options in Safari work properly
                      if (elem.parentNode) {
                        // eslint-disable-next-line no-unused-expressions
                        elem.parentNode.selectedIndex;
                      }

                      return elem.selected === true;
                    },

                    // Contents
                    empty: function (elem) {
                      // http://www.w3.org/TR/selectors/#empty-pseudo
                      // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
                      //   but not by others (comment: 8; processing instruction: 7; etc.)
                      // nodeType < 6 works because attributes (2) do not appear as children
                      for (
                        elem = elem.firstChild;
                        elem;
                        elem = elem.nextSibling
                      ) {
                        if (elem.nodeType < 6) {
                          return false;
                        }
                      }
                      return true;
                    },

                    parent: function (elem) {
                      return !Expr.pseudos["empty"](elem);
                    },

                    // Element/input types
                    header: function (elem) {
                      return rheader.test(elem.nodeName);
                    },

                    input: function (elem) {
                      return rinputs.test(elem.nodeName);
                    },

                    button: function (elem) {
                      var name = elem.nodeName.toLowerCase();
                      return (
                        (name === "input" && elem.type === "button") ||
                        name === "button"
                      );
                    },

                    text: function (elem) {
                      var attr;
                      return (
                        elem.nodeName.toLowerCase() === "input" &&
                        elem.type === "text" &&
                        // Support: IE<8
                        // New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
                        ((attr = elem.getAttribute("type")) == null ||
                          attr.toLowerCase() === "text")
                      );
                    },

                    // Position-in-collection
                    first: createPositionalPseudo(function () {
                      return [0];
                    }),

                    last: createPositionalPseudo(function (
                      _matchIndexes,
                      length
                    ) {
                      return [length - 1];
                    }),

                    eq: createPositionalPseudo(function (
                      _matchIndexes,
                      length,
                      argument
                    ) {
                      return [argument < 0 ? argument + length : argument];
                    }),

                    even: createPositionalPseudo(function (
                      matchIndexes,
                      length
                    ) {
                      var i = 0;
                      for (; i < length; i += 2) {
                        matchIndexes.push(i);
                      }
                      return matchIndexes;
                    }),

                    odd: createPositionalPseudo(function (
                      matchIndexes,
                      length
                    ) {
                      var i = 1;
                      for (; i < length; i += 2) {
                        matchIndexes.push(i);
                      }
                      return matchIndexes;
                    }),

                    lt: createPositionalPseudo(function (
                      matchIndexes,
                      length,
                      argument
                    ) {
                      var i =
                        argument < 0
                          ? argument + length
                          : argument > length
                          ? length
                          : argument;
                      for (; --i >= 0; ) {
                        matchIndexes.push(i);
                      }
                      return matchIndexes;
                    }),

                    gt: createPositionalPseudo(function (
                      matchIndexes,
                      length,
                      argument
                    ) {
                      var i = argument < 0 ? argument + length : argument;
                      for (; ++i < length; ) {
                        matchIndexes.push(i);
                      }
                      return matchIndexes;
                    }),
                  },
                };

                Expr.pseudos["nth"] = Expr.pseudos["eq"];

                // Add button/input type pseudos
                for (i in {
                  radio: true,
                  checkbox: true,
                  file: true,
                  password: true,
                  image: true,
                }) {
                  Expr.pseudos[i] = createInputPseudo(i);
                }
                for (i in { submit: true, reset: true }) {
                  Expr.pseudos[i] = createButtonPseudo(i);
                }

                // Easy API for creating new setFilters
                function setFilters() {}
                setFilters.prototype = Expr.filters = Expr.pseudos;
                Expr.setFilters = new setFilters();

                tokenize = Sizzle.tokenize = function (selector, parseOnly) {
                  var matched,
                    match,
                    tokens,
                    type,
                    soFar,
                    groups,
                    preFilters,
                    cached = tokenCache[selector + " "];

                  if (cached) {
                    return parseOnly ? 0 : cached.slice(0);
                  }

                  soFar = selector;
                  groups = [];
                  preFilters = Expr.preFilter;

                  while (soFar) {
                    // Comma and first run
                    if (!matched || (match = rcomma.exec(soFar))) {
                      if (match) {
                        // Don't consume trailing commas as valid
                        soFar = soFar.slice(match[0].length) || soFar;
                      }
                      groups.push((tokens = []));
                    }

                    matched = false;

                    // Combinators
                    if ((match = rcombinators.exec(soFar))) {
                      matched = match.shift();
                      tokens.push({
                        value: matched,

                        // Cast descendant combinators to space
                        type: match[0].replace(rtrim, " "),
                      });
                      soFar = soFar.slice(matched.length);
                    }

                    // Filters
                    for (type in Expr.filter) {
                      if (
                        (match = matchExpr[type].exec(soFar)) &&
                        (!preFilters[type] || (match = preFilters[type](match)))
                      ) {
                        matched = match.shift();
                        tokens.push({
                          value: matched,
                          type: type,
                          matches: match,
                        });
                        soFar = soFar.slice(matched.length);
                      }
                    }

                    if (!matched) {
                      break;
                    }
                  }

                  // Return the length of the invalid excess
                  // if we're just parsing
                  // Otherwise, throw an error or return tokens
                  return parseOnly
                    ? soFar.length
                    : soFar
                    ? Sizzle.error(selector)
                    : // Cache the tokens
                      tokenCache(selector, groups).slice(0);
                };

                function toSelector(tokens) {
                  var i = 0,
                    len = tokens.length,
                    selector = "";
                  for (; i < len; i++) {
                    selector += tokens[i].value;
                  }
                  return selector;
                }

                function addCombinator(matcher, combinator, base) {
                  var dir = combinator.dir,
                    skip = combinator.next,
                    key = skip || dir,
                    checkNonElements = base && key === "parentNode",
                    doneName = done++;

                  return combinator.first
                    ? // Check against closest ancestor/preceding element
                      function (elem, context, xml) {
                        while ((elem = elem[dir])) {
                          if (elem.nodeType === 1 || checkNonElements) {
                            return matcher(elem, context, xml);
                          }
                        }
                        return false;
                      }
                    : // Check against all ancestor/preceding elements
                      function (elem, context, xml) {
                        var oldCache,
                          uniqueCache,
                          outerCache,
                          newCache = [dirruns, doneName];

                        // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
                        if (xml) {
                          while ((elem = elem[dir])) {
                            if (elem.nodeType === 1 || checkNonElements) {
                              if (matcher(elem, context, xml)) {
                                return true;
                              }
                            }
                          }
                        } else {
                          while ((elem = elem[dir])) {
                            if (elem.nodeType === 1 || checkNonElements) {
                              outerCache =
                                elem[expando] || (elem[expando] = {});

                              // Support: IE <9 only
                              // Defend against cloned attroperties (jQuery gh-1709)
                              uniqueCache =
                                outerCache[elem.uniqueID] ||
                                (outerCache[elem.uniqueID] = {});

                              if (
                                skip &&
                                skip === elem.nodeName.toLowerCase()
                              ) {
                                elem = elem[dir] || elem;
                              } else if (
                                (oldCache = uniqueCache[key]) &&
                                oldCache[0] === dirruns &&
                                oldCache[1] === doneName
                              ) {
                                // Assign to newCache so results back-propagate to previous elements
                                return (newCache[2] = oldCache[2]);
                              } else {
                                // Reuse newcache so results back-propagate to previous elements
                                uniqueCache[key] = newCache;

                                // A match means we're done; a fail means we have to keep checking
                                if (
                                  (newCache[2] = matcher(elem, context, xml))
                                ) {
                                  return true;
                                }
                              }
                            }
                          }
                        }
                        return false;
                      };
                }

                function elementMatcher(matchers) {
                  return matchers.length > 1
                    ? function (elem, context, xml) {
                        var i = matchers.length;
                        while (i--) {
                          if (!matchers[i](elem, context, xml)) {
                            return false;
                          }
                        }
                        return true;
                      }
                    : matchers[0];
                }

                function multipleContexts(selector, contexts, results) {
                  var i = 0,
                    len = contexts.length;
                  for (; i < len; i++) {
                    Sizzle(selector, contexts[i], results);
                  }
                  return results;
                }

                function condense(unmatched, map, filter, context, xml) {
                  var elem,
                    newUnmatched = [],
                    i = 0,
                    len = unmatched.length,
                    mapped = map != null;

                  for (; i < len; i++) {
                    if ((elem = unmatched[i])) {
                      if (!filter || filter(elem, context, xml)) {
                        newUnmatched.push(elem);
                        if (mapped) {
                          map.push(i);
                        }
                      }
                    }
                  }

                  return newUnmatched;
                }

                function setMatcher(
                  preFilter,
                  selector,
                  matcher,
                  postFilter,
                  postFinder,
                  postSelector
                ) {
                  if (postFilter && !postFilter[expando]) {
                    postFilter = setMatcher(postFilter);
                  }
                  if (postFinder && !postFinder[expando]) {
                    postFinder = setMatcher(postFinder, postSelector);
                  }
                  return markFunction(function (seed, results, context, xml) {
                    var temp,
                      i,
                      elem,
                      preMap = [],
                      postMap = [],
                      preexisting = results.length,
                      // Get initial elements from seed or context
                      elems =
                        seed ||
                        multipleContexts(
                          selector || "*",
                          context.nodeType ? [context] : context,
                          []
                        ),
                      // Prefilter to get matcher input, preserving a map for seed-results synchronization
                      matcherIn =
                        preFilter && (seed || !selector)
                          ? condense(elems, preMap, preFilter, context, xml)
                          : elems,
                      matcherOut = matcher
                        ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
                          postFinder ||
                          (seed ? preFilter : preexisting || postFilter)
                          ? // ...intermediate processing is necessary
                            []
                          : // ...otherwise use results directly
                            results
                        : matcherIn;

                    // Find primary matches
                    if (matcher) {
                      matcher(matcherIn, matcherOut, context, xml);
                    }

                    // Apply postFilter
                    if (postFilter) {
                      temp = condense(matcherOut, postMap);
                      postFilter(temp, [], context, xml);

                      // Un-match failing elements by moving them back to matcherIn
                      i = temp.length;
                      while (i--) {
                        if ((elem = temp[i])) {
                          matcherOut[postMap[i]] = !(matcherIn[postMap[i]] =
                            elem);
                        }
                      }
                    }

                    if (seed) {
                      if (postFinder || preFilter) {
                        if (postFinder) {
                          // Get the final matcherOut by condensing this intermediate into postFinder contexts
                          temp = [];
                          i = matcherOut.length;
                          while (i--) {
                            if ((elem = matcherOut[i])) {
                              // Restore matcherIn since elem is not yet a final match
                              temp.push((matcherIn[i] = elem));
                            }
                          }
                          postFinder(null, (matcherOut = []), temp, xml);
                        }

                        // Move matched elements from seed to results to keep them synchronized
                        i = matcherOut.length;
                        while (i--) {
                          if (
                            (elem = matcherOut[i]) &&
                            (temp = postFinder
                              ? indexOf(seed, elem)
                              : preMap[i]) > -1
                          ) {
                            seed[temp] = !(results[temp] = elem);
                          }
                        }
                      }

                      // Add elements to results, through postFinder if defined
                    } else {
                      matcherOut = condense(
                        matcherOut === results
                          ? matcherOut.splice(preexisting, matcherOut.length)
                          : matcherOut
                      );
                      if (postFinder) {
                        postFinder(null, results, matcherOut, xml);
                      } else {
                        push.apply(results, matcherOut);
                      }
                    }
                  });
                }

                function matcherFromTokens(tokens) {
                  var checkContext,
                    matcher,
                    j,
                    len = tokens.length,
                    leadingRelative = Expr.relative[tokens[0].type],
                    implicitRelative = leadingRelative || Expr.relative[" "],
                    i = leadingRelative ? 1 : 0,
                    // The foundational matcher ensures that elements are reachable from top-level context(s)
                    matchContext = addCombinator(
                      function (elem) {
                        return elem === checkContext;
                      },
                      implicitRelative,
                      true
                    ),
                    matchAnyContext = addCombinator(
                      function (elem) {
                        return indexOf(checkContext, elem) > -1;
                      },
                      implicitRelative,
                      true
                    ),
                    matchers = [
                      function (elem, context, xml) {
                        var ret =
                          (!leadingRelative &&
                            (xml || context !== outermostContext)) ||
                          ((checkContext = context).nodeType
                            ? matchContext(elem, context, xml)
                            : matchAnyContext(elem, context, xml));

                        // Avoid hanging onto element (issue #299)
                        checkContext = null;
                        return ret;
                      },
                    ];

                  for (; i < len; i++) {
                    if ((matcher = Expr.relative[tokens[i].type])) {
                      matchers = [
                        addCombinator(elementMatcher(matchers), matcher),
                      ];
                    } else {
                      matcher = Expr.filter[tokens[i].type].apply(
                        null,
                        tokens[i].matches
                      );

                      // Return special upon seeing a positional matcher
                      if (matcher[expando]) {
                        // Find the next relative operator (if any) for proper handling
                        j = ++i;
                        for (; j < len; j++) {
                          if (Expr.relative[tokens[j].type]) {
                            break;
                          }
                        }
                        return setMatcher(
                          i > 1 && elementMatcher(matchers),
                          i > 1 &&
                            toSelector(
                              // If the preceding token was a descendant combinator, insert an implicit any-element `*`
                              tokens
                                .slice(0, i - 1)
                                .concat({
                                  value: tokens[i - 2].type === " " ? "*" : "",
                                })
                            ).replace(rtrim, "$1"),
                          matcher,
                          i < j && matcherFromTokens(tokens.slice(i, j)),
                          j < len &&
                            matcherFromTokens((tokens = tokens.slice(j))),
                          j < len && toSelector(tokens)
                        );
                      }
                      matchers.push(matcher);
                    }
                  }

                  return elementMatcher(matchers);
                }

                function matcherFromGroupMatchers(
                  elementMatchers,
                  setMatchers
                ) {
                  var bySet = setMatchers.length > 0,
                    byElement = elementMatchers.length > 0,
                    superMatcher = function (
                      seed,
                      context,
                      xml,
                      results,
                      outermost
                    ) {
                      var elem,
                        j,
                        matcher,
                        matchedCount = 0,
                        i = "0",
                        unmatched = seed && [],
                        setMatched = [],
                        contextBackup = outermostContext,
                        // We must always have either seed elements or outermost context
                        elems =
                          seed ||
                          (byElement && Expr.find["TAG"]("*", outermost)),
                        // Use integer dirruns iff this is the outermost matcher
                        dirrunsUnique = (dirruns +=
                          contextBackup == null ? 1 : Math.random() || 0.1),
                        len = elems.length;

                      if (outermost) {
                        // Support: IE 11+, Edge 17 - 18+
                        // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                        // two documents; shallow comparisons work.
                        // eslint-disable-next-line eqeqeq
                        outermostContext =
                          context == document || context || outermost;
                      }

                      // Add elements passing elementMatchers directly to results
                      // Support: IE<9, Safari
                      // Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
                      for (; i !== len && (elem = elems[i]) != null; i++) {
                        if (byElement && elem) {
                          j = 0;

                          // Support: IE 11+, Edge 17 - 18+
                          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                          // two documents; shallow comparisons work.
                          // eslint-disable-next-line eqeqeq
                          if (!context && elem.ownerDocument != document) {
                            setDocument(elem);
                            xml = !documentIsHTML;
                          }
                          while ((matcher = elementMatchers[j++])) {
                            if (matcher(elem, context || document, xml)) {
                              results.push(elem);
                              break;
                            }
                          }
                          if (outermost) {
                            dirruns = dirrunsUnique;
                          }
                        }

                        // Track unmatched elements for set filters
                        if (bySet) {
                          // They will have gone through all possible matchers
                          if ((elem = !matcher && elem)) {
                            matchedCount--;
                          }

                          // Lengthen the array for every element, matched or not
                          if (seed) {
                            unmatched.push(elem);
                          }
                        }
                      }

                      // `i` is now the count of elements visited above, and adding it to `matchedCount`
                      // makes the latter nonnegative.
                      matchedCount += i;

                      // Apply set filters to unmatched elements
                      // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
                      // equals `i`), unless we didn't visit _any_ elements in the above loop because we have
                      // no element matchers and no seed.
                      // Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
                      // case, which will result in a "00" `matchedCount` that differs from `i` but is also
                      // numerically zero.
                      if (bySet && i !== matchedCount) {
                        j = 0;
                        while ((matcher = setMatchers[j++])) {
                          matcher(unmatched, setMatched, context, xml);
                        }

                        if (seed) {
                          // Reintegrate element matches to eliminate the need for sorting
                          if (matchedCount > 0) {
                            while (i--) {
                              if (!(unmatched[i] || setMatched[i])) {
                                setMatched[i] = pop.call(results);
                              }
                            }
                          }

                          // Discard index placeholder values to get only actual matches
                          setMatched = condense(setMatched);
                        }

                        // Add matches to results
                        push.apply(results, setMatched);

                        // Seedless set matches succeeding multiple successful matchers stipulate sorting
                        if (
                          outermost &&
                          !seed &&
                          setMatched.length > 0 &&
                          matchedCount + setMatchers.length > 1
                        ) {
                          Sizzle.uniqueSort(results);
                        }
                      }

                      // Override manipulation of globals by nested matchers
                      if (outermost) {
                        dirruns = dirrunsUnique;
                        outermostContext = contextBackup;
                      }

                      return unmatched;
                    };

                  return bySet ? markFunction(superMatcher) : superMatcher;
                }

                compile = Sizzle.compile = function (
                  selector,
                  match /* Internal Use Only */
                ) {
                  var i,
                    setMatchers = [],
                    elementMatchers = [],
                    cached = compilerCache[selector + " "];

                  if (!cached) {
                    // Generate a function of recursive functions that can be used to check each element
                    if (!match) {
                      match = tokenize(selector);
                    }
                    i = match.length;
                    while (i--) {
                      cached = matcherFromTokens(match[i]);
                      if (cached[expando]) {
                        setMatchers.push(cached);
                      } else {
                        elementMatchers.push(cached);
                      }
                    }

                    // Cache the compiled function
                    cached = compilerCache(
                      selector,
                      matcherFromGroupMatchers(elementMatchers, setMatchers)
                    );

                    // Save selector and tokenization
                    cached.selector = selector;
                  }
                  return cached;
                };

                /**
                 * A low-level selection function that works with Sizzle's compiled
                 *  selector functions
                 * @param {String|Function} selector A selector or a pre-compiled
                 *  selector function built with Sizzle.compile
                 * @param {Element} context
                 * @param {Array} [results]
                 * @param {Array} [seed] A set of elements to match against
                 */
                select = Sizzle.select = function (
                  selector,
                  context,
                  results,
                  seed
                ) {
                  var i,
                    tokens,
                    token,
                    type,
                    find,
                    compiled = typeof selector === "function" && selector,
                    match =
                      !seed &&
                      tokenize((selector = compiled.selector || selector));

                  results = results || [];

                  // Try to minimize operations if there is only one selector in the list and no seed
                  // (the latter of which guarantees us context)
                  if (match.length === 1) {
                    // Reduce context if the leading compound selector is an ID
                    tokens = match[0] = match[0].slice(0);
                    if (
                      tokens.length > 2 &&
                      (token = tokens[0]).type === "ID" &&
                      context.nodeType === 9 &&
                      documentIsHTML &&
                      Expr.relative[tokens[1].type]
                    ) {
                      context = (Expr.find["ID"](
                        token.matches[0].replace(runescape, funescape),
                        context
                      ) || [])[0];
                      if (!context) {
                        return results;

                        // Precompiled matchers will still verify ancestry, so step up a level
                      } else if (compiled) {
                        context = context.parentNode;
                      }

                      selector = selector.slice(tokens.shift().value.length);
                    }

                    // Fetch a seed set for right-to-left matching
                    i = matchExpr["needsContext"].test(selector)
                      ? 0
                      : tokens.length;
                    while (i--) {
                      token = tokens[i];

                      // Abort if we hit a combinator
                      if (Expr.relative[(type = token.type)]) {
                        break;
                      }
                      if ((find = Expr.find[type])) {
                        // Search, expanding context for leading sibling combinators
                        if (
                          (seed = find(
                            token.matches[0].replace(runescape, funescape),
                            (rsibling.test(tokens[0].type) &&
                              testContext(context.parentNode)) ||
                              context
                          ))
                        ) {
                          // If seed is empty or no tokens remain, we can return early
                          tokens.splice(i, 1);
                          selector = seed.length && toSelector(tokens);
                          if (!selector) {
                            push.apply(results, seed);
                            return results;
                          }

                          break;
                        }
                      }
                    }
                  }

                  // Compile and execute a filtering function if one is not provided
                  // Provide `match` to avoid retokenization if we modified the selector above
                  (compiled || compile(selector, match))(
                    seed,
                    context,
                    !documentIsHTML,
                    results,
                    !context ||
                      (rsibling.test(selector) &&
                        testContext(context.parentNode)) ||
                      context
                  );
                  return results;
                };

                // One-time assignments

                // Sort stability
                support.sortStable =
                  expando.split("").sort(sortOrder).join("") === expando;

                // Support: Chrome 14-35+
                // Always assume duplicates if they aren't passed to the comparison function
                support.detectDuplicates = !!hasDuplicate;

                // Initialize against the default document
                setDocument();

                // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
                // Detached nodes confoundingly follow *each other*
                support.sortDetached = assert(function (el) {
                  // Should return 1, but returns 4 (following)
                  return (
                    el.compareDocumentPosition(
                      document.createElement("fieldset")
                    ) & 1
                  );
                });

                // Support: IE<8
                // Prevent attribute/property "interpolation"
                // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
                if (
                  !assert(function (el) {
                    el.innerHTML = "<a href='#'></a>";
                    return el.firstChild.getAttribute("href") === "#";
                  })
                ) {
                  addHandle(
                    "type|href|height|width",
                    function (elem, name, isXML) {
                      if (!isXML) {
                        return elem.getAttribute(
                          name,
                          name.toLowerCase() === "type" ? 1 : 2
                        );
                      }
                    }
                  );
                }

                // Support: IE<9
                // Use defaultValue in place of getAttribute("value")
                if (
                  !support.attributes ||
                  !assert(function (el) {
                    el.innerHTML = "<input/>";
                    el.firstChild.setAttribute("value", "");
                    return el.firstChild.getAttribute("value") === "";
                  })
                ) {
                  addHandle("value", function (elem, _name, isXML) {
                    if (!isXML && elem.nodeName.toLowerCase() === "input") {
                      return elem.defaultValue;
                    }
                  });
                }

                // Support: IE<9
                // Use getAttributeNode to fetch booleans when getAttribute lies
                if (
                  !assert(function (el) {
                    return el.getAttribute("disabled") == null;
                  })
                ) {
                  addHandle(booleans, function (elem, name, isXML) {
                    var val;
                    if (!isXML) {
                      return elem[name] === true
                        ? name.toLowerCase()
                        : (val = elem.getAttributeNode(name)) && val.specified
                        ? val.value
                        : null;
                    }
                  });
                }

                return Sizzle;
              })(window);

            jQuery.find = Sizzle;
            jQuery.expr = Sizzle.selectors;

            // Deprecated
            jQuery.expr[":"] = jQuery.expr.pseudos;
            jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
            jQuery.text = Sizzle.getText;
            jQuery.isXMLDoc = Sizzle.isXML;
            jQuery.contains = Sizzle.contains;
            jQuery.escapeSelector = Sizzle.escape;

            var dir = function (elem, dir, until) {
              var matched = [],
                truncate = until !== undefined;

              while ((elem = elem[dir]) && elem.nodeType !== 9) {
                if (elem.nodeType === 1) {
                  if (truncate && jQuery(elem).is(until)) {
                    break;
                  }
                  matched.push(elem);
                }
              }
              return matched;
            };

            var siblings = function (n, elem) {
              var matched = [];

              for (; n; n = n.nextSibling) {
                if (n.nodeType === 1 && n !== elem) {
                  matched.push(n);
                }
              }

              return matched;
            };

            var rneedsContext = jQuery.expr.match.needsContext;

            function nodeName(elem, name) {
              return (
                elem.nodeName &&
                elem.nodeName.toLowerCase() === name.toLowerCase()
              );
            }
            var rsingleTag =
              /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;

            // Implement the identical functionality for filter and not
            function winnow(elements, qualifier, not) {
              if (isFunction(qualifier)) {
                return jQuery.grep(elements, function (elem, i) {
                  return !!qualifier.call(elem, i, elem) !== not;
                });
              }

              // Single element
              if (qualifier.nodeType) {
                return jQuery.grep(elements, function (elem) {
                  return (elem === qualifier) !== not;
                });
              }

              // Arraylike of elements (jQuery, arguments, Array)
              if (typeof qualifier !== "string") {
                return jQuery.grep(elements, function (elem) {
                  return indexOf.call(qualifier, elem) > -1 !== not;
                });
              }

              // Filtered directly for both simple and complex selectors
              return jQuery.filter(qualifier, elements, not);
            }

            jQuery.filter = function (expr, elems, not) {
              var elem = elems[0];

              if (not) {
                expr = ":not(" + expr + ")";
              }

              if (elems.length === 1 && elem.nodeType === 1) {
                return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];
              }

              return jQuery.find.matches(
                expr,
                jQuery.grep(elems, function (elem) {
                  return elem.nodeType === 1;
                })
              );
            };

            jQuery.fn.extend({
              find: function (selector) {
                var i,
                  ret,
                  len = this.length,
                  self = this;

                if (typeof selector !== "string") {
                  return this.pushStack(
                    jQuery(selector).filter(function () {
                      for (i = 0; i < len; i++) {
                        if (jQuery.contains(self[i], this)) {
                          return true;
                        }
                      }
                    })
                  );
                }

                ret = this.pushStack([]);

                for (i = 0; i < len; i++) {
                  jQuery.find(selector, self[i], ret);
                }

                return len > 1 ? jQuery.uniqueSort(ret) : ret;
              },
              filter: function (selector) {
                return this.pushStack(winnow(this, selector || [], false));
              },
              not: function (selector) {
                return this.pushStack(winnow(this, selector || [], true));
              },
              is: function (selector) {
                return !!winnow(
                  this,

                  // If this is a positional/relative selector, check membership in the returned set
                  // so $("p:first").is("p:last") won't return true for a doc with two "p".
                  typeof selector === "string" && rneedsContext.test(selector)
                    ? jQuery(selector)
                    : selector || [],
                  false
                ).length;
              },
            });

            // Initialize a jQuery object

            // A central reference to the root jQuery(document)
            var rootjQuery,
              // A simple way to check for HTML strings
              // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
              // Strict HTML recognition (#11290: must start with <)
              // Shortcut simple #id case for speed
              rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
              init = (jQuery.fn.init = function (selector, context, root) {
                var match, elem;

                // HANDLE: $(""), $(null), $(undefined), $(false)
                if (!selector) {
                  return this;
                }

                // Method init() accepts an alternate rootjQuery
                // so migrate can support jQuery.sub (gh-2101)
                root = root || rootjQuery;

                // Handle HTML strings
                if (typeof selector === "string") {
                  if (
                    selector[0] === "<" &&
                    selector[selector.length - 1] === ">" &&
                    selector.length >= 3
                  ) {
                    // Assume that strings that start and end with <> are HTML and skip the regex check
                    match = [null, selector, null];
                  } else {
                    match = rquickExpr.exec(selector);
                  }

                  // Match html or make sure no context is specified for #id
                  if (match && (match[1] || !context)) {
                    // HANDLE: $(html) -> $(array)
                    if (match[1]) {
                      context =
                        context instanceof jQuery ? context[0] : context;

                      // Option to run scripts is true for back-compat
                      // Intentionally let the error be thrown if parseHTML is not present
                      jQuery.merge(
                        this,
                        jQuery.parseHTML(
                          match[1],
                          context && context.nodeType
                            ? context.ownerDocument || context
                            : document,
                          true
                        )
                      );

                      // HANDLE: $(html, props)
                      if (
                        rsingleTag.test(match[1]) &&
                        jQuery.isPlainObject(context)
                      ) {
                        for (match in context) {
                          // Properties of context are called as methods if possible
                          if (isFunction(this[match])) {
                            this[match](context[match]);

                            // ...and otherwise set as attributes
                          } else {
                            this.attr(match, context[match]);
                          }
                        }
                      }

                      return this;

                      // HANDLE: $(#id)
                    } else {
                      elem = document.getElementById(match[2]);

                      if (elem) {
                        // Inject the element directly into the jQuery object
                        this[0] = elem;
                        this.length = 1;
                      }
                      return this;
                    }

                    // HANDLE: $(expr, $(...))
                  } else if (!context || context.jquery) {
                    return (context || root).find(selector);

                    // HANDLE: $(expr, context)
                    // (which is just equivalent to: $(context).find(expr)
                  } else {
                    return this.constructor(context).find(selector);
                  }

                  // HANDLE: $(DOMElement)
                } else if (selector.nodeType) {
                  this[0] = selector;
                  this.length = 1;
                  return this;

                  // HANDLE: $(function)
                  // Shortcut for document ready
                } else if (isFunction(selector)) {
                  return root.ready !== undefined
                    ? root.ready(selector)
                    : // Execute immediately if ready is not present
                      selector(jQuery);
                }

                return jQuery.makeArray(selector, this);
              });

            // Give the init function the jQuery prototype for later instantiation
            init.prototype = jQuery.fn;

            // Initialize central reference
            rootjQuery = jQuery(document);

            var rparentsprev = /^(?:parents|prev(?:Until|All))/,
              // Methods guaranteed to produce a unique set when starting from a unique set
              guaranteedUnique = {
                children: true,
                contents: true,
                next: true,
                prev: true,
              };

            jQuery.fn.extend({
              has: function (target) {
                var targets = jQuery(target, this),
                  l = targets.length;

                return this.filter(function () {
                  var i = 0;
                  for (; i < l; i++) {
                    if (jQuery.contains(this, targets[i])) {
                      return true;
                    }
                  }
                });
              },

              closest: function (selectors, context) {
                var cur,
                  i = 0,
                  l = this.length,
                  matched = [],
                  targets = typeof selectors !== "string" && jQuery(selectors);

                // Positional selectors never match, since there's no _selection_ context
                if (!rneedsContext.test(selectors)) {
                  for (; i < l; i++) {
                    for (
                      cur = this[i];
                      cur && cur !== context;
                      cur = cur.parentNode
                    ) {
                      // Always skip document fragments
                      if (
                        cur.nodeType < 11 &&
                        (targets
                          ? targets.index(cur) > -1
                          : // Don't pass non-elements to Sizzle
                            cur.nodeType === 1 &&
                            jQuery.find.matchesSelector(cur, selectors))
                      ) {
                        matched.push(cur);
                        break;
                      }
                    }
                  }
                }

                return this.pushStack(
                  matched.length > 1 ? jQuery.uniqueSort(matched) : matched
                );
              },

              // Determine the position of an element within the set
              index: function (elem) {
                // No argument, return index in parent
                if (!elem) {
                  return this[0] && this[0].parentNode
                    ? this.first().prevAll().length
                    : -1;
                }

                // Index in selector
                if (typeof elem === "string") {
                  return indexOf.call(jQuery(elem), this[0]);
                }

                // Locate the position of the desired element
                return indexOf.call(
                  this,

                  // If it receives a jQuery object, the first element is used
                  elem.jquery ? elem[0] : elem
                );
              },

              add: function (selector, context) {
                return this.pushStack(
                  jQuery.uniqueSort(
                    jQuery.merge(this.get(), jQuery(selector, context))
                  )
                );
              },

              addBack: function (selector) {
                return this.add(
                  selector == null
                    ? this.prevObject
                    : this.prevObject.filter(selector)
                );
              },
            });

            function sibling(cur, dir) {
              while ((cur = cur[dir]) && cur.nodeType !== 1) {}
              return cur;
            }

            jQuery.each(
              {
                parent: function (elem) {
                  var parent = elem.parentNode;
                  return parent && parent.nodeType !== 11 ? parent : null;
                },
                parents: function (elem) {
                  return dir(elem, "parentNode");
                },
                parentsUntil: function (elem, _i, until) {
                  return dir(elem, "parentNode", until);
                },
                next: function (elem) {
                  return sibling(elem, "nextSibling");
                },
                prev: function (elem) {
                  return sibling(elem, "previousSibling");
                },
                nextAll: function (elem) {
                  return dir(elem, "nextSibling");
                },
                prevAll: function (elem) {
                  return dir(elem, "previousSibling");
                },
                nextUntil: function (elem, _i, until) {
                  return dir(elem, "nextSibling", until);
                },
                prevUntil: function (elem, _i, until) {
                  return dir(elem, "previousSibling", until);
                },
                siblings: function (elem) {
                  return siblings((elem.parentNode || {}).firstChild, elem);
                },
                children: function (elem) {
                  return siblings(elem.firstChild);
                },
                contents: function (elem) {
                  if (
                    elem.contentDocument != null &&
                    // Support: IE 11+
                    // <object> elements with no `data` attribute has an object
                    // `contentDocument` with a `null` prototype.
                    getProto(elem.contentDocument)
                  ) {
                    return elem.contentDocument;
                  }

                  // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
                  // Treat the template element as a regular one in browsers that
                  // don't support it.
                  if (nodeName(elem, "template")) {
                    elem = elem.content || elem;
                  }

                  return jQuery.merge([], elem.childNodes);
                },
              },
              function (name, fn) {
                jQuery.fn[name] = function (until, selector) {
                  var matched = jQuery.map(this, fn, until);

                  if (name.slice(-5) !== "Until") {
                    selector = until;
                  }

                  if (selector && typeof selector === "string") {
                    matched = jQuery.filter(selector, matched);
                  }

                  if (this.length > 1) {
                    // Remove duplicates
                    if (!guaranteedUnique[name]) {
                      jQuery.uniqueSort(matched);
                    }

                    // Reverse order for parents* and prev-derivatives
                    if (rparentsprev.test(name)) {
                      matched.reverse();
                    }
                  }

                  return this.pushStack(matched);
                };
              }
            );
            var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;

            // Convert String-formatted options into Object-formatted ones
            function createOptions(options) {
              var object = {};
              jQuery.each(
                options.match(rnothtmlwhite) || [],
                function (_, flag) {
                  object[flag] = true;
                }
              );
              return object;
            }

            /*
             * Create a callback list using the following parameters:
             *
             *	options: an optional list of space-separated options that will change how
             *			the callback list behaves or a more traditional option object
             *
             * By default a callback list will act like an event callback list and can be
             * "fired" multiple times.
             *
             * Possible options:
             *
             *	once:			will ensure the callback list can only be fired once (like a Deferred)
             *
             *	memory:			will keep track of previous values and will call any callback added
             *					after the list has been fired right away with the latest "memorized"
             *					values (like a Deferred)
             *
             *	unique:			will ensure a callback can only be added once (no duplicate in the list)
             *
             *	stopOnFalse:	interrupt callings when a callback returns false
             *
             */
            jQuery.Callbacks = function (options) {
              // Convert options from String-formatted to Object-formatted if needed
              // (we check in cache first)
              options =
                typeof options === "string"
                  ? createOptions(options)
                  : jQuery.extend({}, options);

              var // Flag to know if list is currently firing
                firing,
                // Last fire value for non-forgettable lists
                memory,
                // Flag to know if list was already fired
                fired,
                // Flag to prevent firing
                locked,
                // Actual callback list
                list = [],
                // Queue of execution data for repeatable lists
                queue = [],
                // Index of currently firing callback (modified by add/remove as needed)
                firingIndex = -1,
                // Fire callbacks
                fire = function () {
                  // Enforce single-firing
                  locked = locked || options.once;

                  // Execute callbacks for all pending executions,
                  // respecting firingIndex overrides and runtime changes
                  fired = firing = true;
                  for (; queue.length; firingIndex = -1) {
                    memory = queue.shift();
                    while (++firingIndex < list.length) {
                      // Run callback and check for early termination
                      if (
                        list[firingIndex].apply(memory[0], memory[1]) ===
                          false &&
                        options.stopOnFalse
                      ) {
                        // Jump to end and forget the data so .add doesn't re-fire
                        firingIndex = list.length;
                        memory = false;
                      }
                    }
                  }

                  // Forget the data if we're done with it
                  if (!options.memory) {
                    memory = false;
                  }

                  firing = false;

                  // Clean up if we're done firing for good
                  if (locked) {
                    // Keep an empty list if we have data for future add calls
                    if (memory) {
                      list = [];

                      // Otherwise, this object is spent
                    } else {
                      list = "";
                    }
                  }
                },
                // Actual Callbacks object
                self = {
                  // Add a callback or a collection of callbacks to the list
                  add: function () {
                    if (list) {
                      // If we have memory from a past run, we should fire after adding
                      if (memory && !firing) {
                        firingIndex = list.length - 1;
                        queue.push(memory);
                      }

                      (function add(args) {
                        jQuery.each(args, function (_, arg) {
                          if (isFunction(arg)) {
                            if (!options.unique || !self.has(arg)) {
                              list.push(arg);
                            }
                          } else if (
                            arg &&
                            arg.length &&
                            toType(arg) !== "string"
                          ) {
                            // Inspect recursively
                            add(arg);
                          }
                        });
                      })(arguments);

                      if (memory && !firing) {
                        fire();
                      }
                    }
                    return this;
                  },

                  // Remove a callback from the list
                  remove: function () {
                    jQuery.each(arguments, function (_, arg) {
                      var index;
                      while ((index = jQuery.inArray(arg, list, index)) > -1) {
                        list.splice(index, 1);

                        // Handle firing indexes
                        if (index <= firingIndex) {
                          firingIndex--;
                        }
                      }
                    });
                    return this;
                  },

                  // Check if a given callback is in the list.
                  // If no argument is given, return whether or not list has callbacks attached.
                  has: function (fn) {
                    return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
                  },

                  // Remove all callbacks from the list
                  empty: function () {
                    if (list) {
                      list = [];
                    }
                    return this;
                  },

                  // Disable .fire and .add
                  // Abort any current/pending executions
                  // Clear all callbacks and values
                  disable: function () {
                    locked = queue = [];
                    list = memory = "";
                    return this;
                  },
                  disabled: function () {
                    return !list;
                  },

                  // Disable .fire
                  // Also disable .add unless we have memory (since it would have no effect)
                  // Abort any pending executions
                  lock: function () {
                    locked = queue = [];
                    if (!memory && !firing) {
                      list = memory = "";
                    }
                    return this;
                  },
                  locked: function () {
                    return !!locked;
                  },

                  // Call all callbacks with the given context and arguments
                  fireWith: function (context, args) {
                    if (!locked) {
                      args = args || [];
                      args = [context, args.slice ? args.slice() : args];
                      queue.push(args);
                      if (!firing) {
                        fire();
                      }
                    }
                    return this;
                  },

                  // Call all the callbacks with the given arguments
                  fire: function () {
                    self.fireWith(this, arguments);
                    return this;
                  },

                  // To know if the callbacks have already been called at least once
                  fired: function () {
                    return !!fired;
                  },
                };

              return self;
            };

            function Identity(v) {
              return v;
            }
            function Thrower(ex) {
              throw ex;
            }

            function adoptValue(value, resolve, reject, noValue) {
              var method;

              try {
                // Check for promise aspect first to privilege synchronous behavior
                if (value && isFunction((method = value.promise))) {
                  method.call(value).done(resolve).fail(reject);

                  // Other thenables
                } else if (value && isFunction((method = value.then))) {
                  method.call(value, resolve, reject);

                  // Other non-thenables
                } else {
                  // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
                  // * false: [ value ].slice( 0 ) => resolve( value )
                  // * true: [ value ].slice( 1 ) => resolve()
                  resolve.apply(undefined, [value].slice(noValue));
                }

                // For Promises/A+, convert exceptions into rejections
                // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
                // Deferred#then to conditionally suppress rejection.
              } catch (value) {
                // Support: Android 4.0 only
                // Strict mode functions invoked without .call/.apply get global-object context
                reject.apply(undefined, [value]);
              }
            }

            jQuery.extend({
              Deferred: function (func) {
                var tuples = [
                    // action, add listener, callbacks,
                    // ... .then handlers, argument index, [final state]
                    [
                      "notify",
                      "progress",
                      jQuery.Callbacks("memory"),
                      jQuery.Callbacks("memory"),
                      2,
                    ],
                    [
                      "resolve",
                      "done",
                      jQuery.Callbacks("once memory"),
                      jQuery.Callbacks("once memory"),
                      0,
                      "resolved",
                    ],
                    [
                      "reject",
                      "fail",
                      jQuery.Callbacks("once memory"),
                      jQuery.Callbacks("once memory"),
                      1,
                      "rejected",
                    ],
                  ],
                  state = "pending",
                  promise = {
                    state: function () {
                      return state;
                    },
                    always: function () {
                      deferred.done(arguments).fail(arguments);
                      return this;
                    },
                    catch: function (fn) {
                      return promise.then(null, fn);
                    },

                    // Keep pipe for back-compat
                    pipe: function (/* fnDone, fnFail, fnProgress */) {
                      var fns = arguments;

                      return jQuery
                        .Deferred(function (newDefer) {
                          jQuery.each(tuples, function (_i, tuple) {
                            // Map tuples (progress, done, fail) to arguments (done, fail, progress)
                            var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];

                            // deferred.progress(function() { bind to newDefer or newDefer.notify })
                            // deferred.done(function() { bind to newDefer or newDefer.resolve })
                            // deferred.fail(function() { bind to newDefer or newDefer.reject })
                            deferred[tuple[1]](function () {
                              var returned = fn && fn.apply(this, arguments);
                              if (returned && isFunction(returned.promise)) {
                                returned
                                  .promise()
                                  .progress(newDefer.notify)
                                  .done(newDefer.resolve)
                                  .fail(newDefer.reject);
                              } else {
                                newDefer[tuple[0] + "With"](
                                  this,
                                  fn ? [returned] : arguments
                                );
                              }
                            });
                          });
                          fns = null;
                        })
                        .promise();
                    },
                    then: function (onFulfilled, onRejected, onProgress) {
                      var maxDepth = 0;
                      function resolve(depth, deferred, handler, special) {
                        return function () {
                          var that = this,
                            args = arguments,
                            mightThrow = function () {
                              var returned, then;

                              // Support: Promises/A+ section 2.3.3.3.3
                              // https://promisesaplus.com/#point-59
                              // Ignore double-resolution attempts
                              if (depth < maxDepth) {
                                return;
                              }

                              returned = handler.apply(that, args);

                              // Support: Promises/A+ section 2.3.1
                              // https://promisesaplus.com/#point-48
                              if (returned === deferred.promise()) {
                                throw new TypeError("Thenable self-resolution");
                              }

                              // Support: Promises/A+ sections 2.3.3.1, 3.5
                              // https://promisesaplus.com/#point-54
                              // https://promisesaplus.com/#point-75
                              // Retrieve `then` only once
                              then =
                                returned &&
                                // Support: Promises/A+ section 2.3.4
                                // https://promisesaplus.com/#point-64
                                // Only check objects and functions for thenability
                                (typeof returned === "object" ||
                                  typeof returned === "function") &&
                                returned.then;

                              // Handle a returned thenable
                              if (isFunction(then)) {
                                // Special processors (notify) just wait for resolution
                                if (special) {
                                  then.call(
                                    returned,
                                    resolve(
                                      maxDepth,
                                      deferred,
                                      Identity,
                                      special
                                    ),
                                    resolve(
                                      maxDepth,
                                      deferred,
                                      Thrower,
                                      special
                                    )
                                  );

                                  // Normal processors (resolve) also hook into progress
                                } else {
                                  // ...and disregard older resolution values
                                  maxDepth++;

                                  then.call(
                                    returned,
                                    resolve(
                                      maxDepth,
                                      deferred,
                                      Identity,
                                      special
                                    ),
                                    resolve(
                                      maxDepth,
                                      deferred,
                                      Thrower,
                                      special
                                    ),
                                    resolve(
                                      maxDepth,
                                      deferred,
                                      Identity,
                                      deferred.notifyWith
                                    )
                                  );
                                }

                                // Handle all other returned values
                              } else {
                                // Only substitute handlers pass on context
                                // and multiple values (non-spec behavior)
                                if (handler !== Identity) {
                                  that = undefined;
                                  args = [returned];
                                }

                                // Process the value(s)
                                // Default process is resolve
                                (special || deferred.resolveWith)(that, args);
                              }
                            },
                            // Only normal processors (resolve) catch and reject exceptions
                            process = special
                              ? mightThrow
                              : function () {
                                  try {
                                    mightThrow();
                                  } catch (e) {
                                    if (jQuery.Deferred.exceptionHook) {
                                      jQuery.Deferred.exceptionHook(
                                        e,
                                        process.stackTrace
                                      );
                                    }

                                    // Support: Promises/A+ section 2.3.3.3.4.1
                                    // https://promisesaplus.com/#point-61
                                    // Ignore post-resolution exceptions
                                    if (depth + 1 >= maxDepth) {
                                      // Only substitute handlers pass on context
                                      // and multiple values (non-spec behavior)
                                      if (handler !== Thrower) {
                                        that = undefined;
                                        args = [e];
                                      }

                                      deferred.rejectWith(that, args);
                                    }
                                  }
                                };

                          // Support: Promises/A+ section 2.3.3.3.1
                          // https://promisesaplus.com/#point-57
                          // Re-resolve promises immediately to dodge false rejection from
                          // subsequent errors
                          if (depth) {
                            process();
                          } else {
                            // Call an optional hook to record the stack, in case of exception
                            // since it's otherwise lost when execution goes async
                            if (jQuery.Deferred.getStackHook) {
                              process.stackTrace =
                                jQuery.Deferred.getStackHook();
                            }
                            window.setTimeout(process);
                          }
                        };
                      }

                      return jQuery
                        .Deferred(function (newDefer) {
                          // progress_handlers.add( ... )
                          tuples[0][3].add(
                            resolve(
                              0,
                              newDefer,
                              isFunction(onProgress) ? onProgress : Identity,
                              newDefer.notifyWith
                            )
                          );

                          // fulfilled_handlers.add( ... )
                          tuples[1][3].add(
                            resolve(
                              0,
                              newDefer,
                              isFunction(onFulfilled) ? onFulfilled : Identity
                            )
                          );

                          // rejected_handlers.add( ... )
                          tuples[2][3].add(
                            resolve(
                              0,
                              newDefer,
                              isFunction(onRejected) ? onRejected : Thrower
                            )
                          );
                        })
                        .promise();
                    },

                    // Get a promise for this deferred
                    // If obj is provided, the promise aspect is added to the object
                    promise: function (obj) {
                      return obj != null
                        ? jQuery.extend(obj, promise)
                        : promise;
                    },
                  },
                  deferred = {};

                // Add list-specific methods
                jQuery.each(tuples, function (i, tuple) {
                  var list = tuple[2],
                    stateString = tuple[5];

                  // promise.progress = list.add
                  // promise.done = list.add
                  // promise.fail = list.add
                  promise[tuple[1]] = list.add;

                  // Handle state
                  if (stateString) {
                    list.add(
                      function () {
                        // state = "resolved" (i.e., fulfilled)
                        // state = "rejected"
                        state = stateString;
                      },

                      // rejected_callbacks.disable
                      // fulfilled_callbacks.disable
                      tuples[3 - i][2].disable,

                      // rejected_handlers.disable
                      // fulfilled_handlers.disable
                      tuples[3 - i][3].disable,

                      // progress_callbacks.lock
                      tuples[0][2].lock,

                      // progress_handlers.lock
                      tuples[0][3].lock
                    );
                  }

                  // progress_handlers.fire
                  // fulfilled_handlers.fire
                  // rejected_handlers.fire
                  list.add(tuple[3].fire);

                  // deferred.notify = function() { deferred.notifyWith(...) }
                  // deferred.resolve = function() { deferred.resolveWith(...) }
                  // deferred.reject = function() { deferred.rejectWith(...) }
                  deferred[tuple[0]] = function () {
                    deferred[tuple[0] + "With"](
                      this === deferred ? undefined : this,
                      arguments
                    );
                    return this;
                  };

                  // deferred.notifyWith = list.fireWith
                  // deferred.resolveWith = list.fireWith
                  // deferred.rejectWith = list.fireWith
                  deferred[tuple[0] + "With"] = list.fireWith;
                });

                // Make the deferred a promise
                promise.promise(deferred);

                // Call given func if any
                if (func) {
                  func.call(deferred, deferred);
                }

                // All done!
                return deferred;
              },

              // Deferred helper
              when: function (singleValue) {
                var // count of uncompleted subordinates
                  remaining = arguments.length,
                  // count of unprocessed arguments
                  i = remaining,
                  // subordinate fulfillment data
                  resolveContexts = Array(i),
                  resolveValues = slice.call(arguments),
                  // the primary Deferred
                  primary = jQuery.Deferred(),
                  // subordinate callback factory
                  updateFunc = function (i) {
                    return function (value) {
                      resolveContexts[i] = this;
                      resolveValues[i] =
                        arguments.length > 1 ? slice.call(arguments) : value;
                      if (!--remaining) {
                        primary.resolveWith(resolveContexts, resolveValues);
                      }
                    };
                  };

                // Single- and empty arguments are adopted like Promise.resolve
                if (remaining <= 1) {
                  adoptValue(
                    singleValue,
                    primary.done(updateFunc(i)).resolve,
                    primary.reject,
                    !remaining
                  );

                  // Use .then() to unwrap secondary thenables (cf. gh-3000)
                  if (
                    primary.state() === "pending" ||
                    isFunction(resolveValues[i] && resolveValues[i].then)
                  ) {
                    return primary.then();
                  }
                }

                // Multiple arguments are aggregated like Promise.all array elements
                while (i--) {
                  adoptValue(resolveValues[i], updateFunc(i), primary.reject);
                }

                return primary.promise();
              },
            });

            // These usually indicate a programmer mistake during development,
            // warn about them ASAP rather than swallowing them by default.
            var rerrorNames =
              /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

            jQuery.Deferred.exceptionHook = function (error, stack) {
              // Support: IE 8 - 9 only
              // Console exists when dev tools are open, which can happen at any time
              if (
                window.console &&
                window.console.warn &&
                error &&
                rerrorNames.test(error.name)
              ) {
                window.console.warn(
                  "jQuery.Deferred exception: " + error.message,
                  error.stack,
                  stack
                );
              }
            };

            jQuery.readyException = function (error) {
              window.setTimeout(function () {
                throw error;
              });
            };

            // The deferred used on DOM ready
            var readyList = jQuery.Deferred();

            jQuery.fn.ready = function (fn) {
              readyList
                .then(fn)

                // Wrap jQuery.readyException in a function so that the lookup
                // happens at the time of error handling instead of callback
                // registration.
                .catch(function (error) {
                  jQuery.readyException(error);
                });

              return this;
            };

            jQuery.extend({
              // Is the DOM ready to be used? Set to true once it occurs.
              isReady: false,

              // A counter to track how many items to wait for before
              // the ready event fires. See #6781
              readyWait: 1,

              // Handle when the DOM is ready
              ready: function (wait) {
                // Abort if there are pending holds or we're already ready
                if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
                  return;
                }

                // Remember that the DOM is ready
                jQuery.isReady = true;

                // If a normal DOM Ready event fired, decrement, and wait if need be
                if (wait !== true && --jQuery.readyWait > 0) {
                  return;
                }

                // If there are functions bound, to execute
                readyList.resolveWith(document, [jQuery]);
              },
            });

            jQuery.ready.then = readyList.then;

            // The ready event handler and self cleanup method
            function completed() {
              document.removeEventListener("DOMContentLoaded", completed);
              window.removeEventListener("load", completed);
              jQuery.ready();
            }

            // Catch cases where $(document).ready() is called
            // after the browser event has already occurred.
            // Support: IE <=9 - 10 only
            // Older IE sometimes signals "interactive" too soon
            if (
              document.readyState === "complete" ||
              (document.readyState !== "loading" &&
                !document.documentElement.doScroll)
            ) {
              // Handle it asynchronously to allow scripts the opportunity to delay ready
              window.setTimeout(jQuery.ready);
            } else {
              // Use the handy event callback
              document.addEventListener("DOMContentLoaded", completed);

              // A fallback to window.onload, that will always work
              window.addEventListener("load", completed);
            }

            // Multifunctional method to get and set values of a collection
            // The value/s can optionally be executed if it's a function
            var access = function (
              elems,
              fn,
              key,
              value,
              chainable,
              emptyGet,
              raw
            ) {
              var i = 0,
                len = elems.length,
                bulk = key == null;

              // Sets many values
              if (toType(key) === "object") {
                chainable = true;
                for (i in key) {
                  access(elems, fn, i, key[i], true, emptyGet, raw);
                }

                // Sets one value
              } else if (value !== undefined) {
                chainable = true;

                if (!isFunction(value)) {
                  raw = true;
                }

                if (bulk) {
                  // Bulk operations run against the entire set
                  if (raw) {
                    fn.call(elems, value);
                    fn = null;

                    // ...except when executing function values
                  } else {
                    bulk = fn;
                    fn = function (elem, _key, value) {
                      return bulk.call(jQuery(elem), value);
                    };
                  }
                }

                if (fn) {
                  for (; i < len; i++) {
                    fn(
                      elems[i],
                      key,
                      raw ? value : value.call(elems[i], i, fn(elems[i], key))
                    );
                  }
                }
              }

              if (chainable) {
                return elems;
              }

              // Gets
              if (bulk) {
                return fn.call(elems);
              }

              return len ? fn(elems[0], key) : emptyGet;
            };

            // Matches dashed string for camelizing
            var rmsPrefix = /^-ms-/,
              rdashAlpha = /-([a-z])/g;

            // Used by camelCase as callback to replace()
            function fcamelCase(_all, letter) {
              return letter.toUpperCase();
            }

            // Convert dashed to camelCase; used by the css and data modules
            // Support: IE <=9 - 11, Edge 12 - 15
            // Microsoft forgot to hump their vendor prefix (#9572)
            function camelCase(string) {
              return string
                .replace(rmsPrefix, "ms-")
                .replace(rdashAlpha, fcamelCase);
            }
            var acceptData = function (owner) {
              // Accepts only:
              //  - Node
              //    - Node.ELEMENT_NODE
              //    - Node.DOCUMENT_NODE
              //  - Object
              //    - Any
              return (
                owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType
              );
            };

            function Data() {
              this.expando = jQuery.expando + Data.uid++;
            }

            Data.uid = 1;

            Data.prototype = {
              cache: function (owner) {
                // Check if the owner object already has a cache
                var value = owner[this.expando];

                // If not, create one
                if (!value) {
                  value = {};

                  // We can accept data for non-element nodes in modern browsers,
                  // but we should not, see #8335.
                  // Always return an empty object.
                  if (acceptData(owner)) {
                    // If it is a node unlikely to be stringify-ed or looped over
                    // use plain assignment
                    if (owner.nodeType) {
                      owner[this.expando] = value;

                      // Otherwise secure it in a non-enumerable property
                      // configurable must be true to allow the property to be
                      // deleted when data is removed
                    } else {
                      Object.defineProperty(owner, this.expando, {
                        value: value,
                        configurable: true,
                      });
                    }
                  }
                }

                return value;
              },
              set: function (owner, data, value) {
                var prop,
                  cache = this.cache(owner);

                // Handle: [ owner, key, value ] args
                // Always use camelCase key (gh-2257)
                if (typeof data === "string") {
                  cache[camelCase(data)] = value;

                  // Handle: [ owner, { properties } ] args
                } else {
                  // Copy the properties one-by-one to the cache object
                  for (prop in data) {
                    cache[camelCase(prop)] = data[prop];
                  }
                }
                return cache;
              },
              get: function (owner, key) {
                return key === undefined
                  ? this.cache(owner)
                  : // Always use camelCase key (gh-2257)
                    owner[this.expando] && owner[this.expando][camelCase(key)];
              },
              access: function (owner, key, value) {
                // In cases where either:
                //
                //   1. No key was specified
                //   2. A string key was specified, but no value provided
                //
                // Take the "read" path and allow the get method to determine
                // which value to return, respectively either:
                //
                //   1. The entire cache object
                //   2. The data stored at the key
                //
                if (
                  key === undefined ||
                  (key && typeof key === "string" && value === undefined)
                ) {
                  return this.get(owner, key);
                }

                // When the key is not a string, or both a key and value
                // are specified, set or extend (existing objects) with either:
                //
                //   1. An object of properties
                //   2. A key and value
                //
                this.set(owner, key, value);

                // Since the "set" path can have two possible entry points
                // return the expected data based on which path was taken[*]
                return value !== undefined ? value : key;
              },
              remove: function (owner, key) {
                var i,
                  cache = owner[this.expando];

                if (cache === undefined) {
                  return;
                }

                if (key !== undefined) {
                  // Support array or space separated string of keys
                  if (Array.isArray(key)) {
                    // If key is an array of keys...
                    // We always set camelCase keys, so remove that.
                    key = key.map(camelCase);
                  } else {
                    key = camelCase(key);

                    // If a key with the spaces exists, use it.
                    // Otherwise, create an array by matching non-whitespace
                    key = key in cache ? [key] : key.match(rnothtmlwhite) || [];
                  }

                  i = key.length;

                  while (i--) {
                    delete cache[key[i]];
                  }
                }

                // Remove the expando if there's no more data
                if (key === undefined || jQuery.isEmptyObject(cache)) {
                  // Support: Chrome <=35 - 45
                  // Webkit & Blink performance suffers when deleting properties
                  // from DOM nodes, so set to undefined instead
                  // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
                  if (owner.nodeType) {
                    owner[this.expando] = undefined;
                  } else {
                    delete owner[this.expando];
                  }
                }
              },
              hasData: function (owner) {
                var cache = owner[this.expando];
                return cache !== undefined && !jQuery.isEmptyObject(cache);
              },
            };
            var dataPriv = new Data();

            var dataUser = new Data();

            //	Implementation Summary
            //
            //	1. Enforce API surface and semantic compatibility with 1.9.x branch
            //	2. Improve the module's maintainability by reducing the storage
            //		paths to a single mechanism.
            //	3. Use the same single mechanism to support "private" and "user" data.
            //	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
            //	5. Avoid exposing implementation details on user objects (eg. expando properties)
            //	6. Provide a clear path for implementation upgrade to WeakMap in 2014

            var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
              rmultiDash = /[A-Z]/g;

            function getData(data) {
              if (data === "true") {
                return true;
              }

              if (data === "false") {
                return false;
              }

              if (data === "null") {
                return null;
              }

              // Only convert to a number if it doesn't change the string
              if (data === +data + "") {
                return +data;
              }

              if (rbrace.test(data)) {
                return JSON.parse(data);
              }

              return data;
            }

            function dataAttr(elem, key, data) {
              var name;

              // If nothing was found internally, try to fetch any
              // data from the HTML5 data-* attribute
              if (data === undefined && elem.nodeType === 1) {
                name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
                data = elem.getAttribute(name);

                if (typeof data === "string") {
                  try {
                    data = getData(data);
                  } catch (e) {}

                  // Make sure we set the data so it isn't changed later
                  dataUser.set(elem, key, data);
                } else {
                  data = undefined;
                }
              }
              return data;
            }

            jQuery.extend({
              hasData: function (elem) {
                return dataUser.hasData(elem) || dataPriv.hasData(elem);
              },

              data: function (elem, name, data) {
                return dataUser.access(elem, name, data);
              },

              removeData: function (elem, name) {
                dataUser.remove(elem, name);
              },

              // TODO: Now that all calls to _data and _removeData have been replaced
              // with direct calls to dataPriv methods, these can be deprecated.
              _data: function (elem, name, data) {
                return dataPriv.access(elem, name, data);
              },

              _removeData: function (elem, name) {
                dataPriv.remove(elem, name);
              },
            });

            jQuery.fn.extend({
              data: function (key, value) {
                var i,
                  name,
                  data,
                  elem = this[0],
                  attrs = elem && elem.attributes;

                // Gets all values
                if (key === undefined) {
                  if (this.length) {
                    data = dataUser.get(elem);

                    if (
                      elem.nodeType === 1 &&
                      !dataPriv.get(elem, "hasDataAttrs")
                    ) {
                      i = attrs.length;
                      while (i--) {
                        // Support: IE 11 only
                        // The attrs elements can be null (#14894)
                        if (attrs[i]) {
                          name = attrs[i].name;
                          if (name.indexOf("data-") === 0) {
                            name = camelCase(name.slice(5));
                            dataAttr(elem, name, data[name]);
                          }
                        }
                      }
                      dataPriv.set(elem, "hasDataAttrs", true);
                    }
                  }

                  return data;
                }

                // Sets multiple values
                if (typeof key === "object") {
                  return this.each(function () {
                    dataUser.set(this, key);
                  });
                }

                return access(
                  this,
                  function (value) {
                    var data;

                    // The calling jQuery object (element matches) is not empty
                    // (and therefore has an element appears at this[ 0 ]) and the
                    // `value` parameter was not undefined. An empty jQuery object
                    // will result in `undefined` for elem = this[ 0 ] which will
                    // throw an exception if an attempt to read a data cache is made.
                    if (elem && value === undefined) {
                      // Attempt to get data from the cache
                      // The key will always be camelCased in Data
                      data = dataUser.get(elem, key);
                      if (data !== undefined) {
                        return data;
                      }

                      // Attempt to "discover" the data in
                      // HTML5 custom data-* attrs
                      data = dataAttr(elem, key);
                      if (data !== undefined) {
                        return data;
                      }

                      // We tried really hard, but the data doesn't exist.
                      return;
                    }

                    // Set the data...
                    this.each(function () {
                      // We always store the camelCased key
                      dataUser.set(this, key, value);
                    });
                  },
                  null,
                  value,
                  arguments.length > 1,
                  null,
                  true
                );
              },

              removeData: function (key) {
                return this.each(function () {
                  dataUser.remove(this, key);
                });
              },
            });

            jQuery.extend({
              queue: function (elem, type, data) {
                var queue;

                if (elem) {
                  type = (type || "fx") + "queue";
                  queue = dataPriv.get(elem, type);

                  // Speed up dequeue by getting out quickly if this is just a lookup
                  if (data) {
                    if (!queue || Array.isArray(data)) {
                      queue = dataPriv.access(
                        elem,
                        type,
                        jQuery.makeArray(data)
                      );
                    } else {
                      queue.push(data);
                    }
                  }
                  return queue || [];
                }
              },

              dequeue: function (elem, type) {
                type = type || "fx";

                var queue = jQuery.queue(elem, type),
                  startLength = queue.length,
                  fn = queue.shift(),
                  hooks = jQuery._queueHooks(elem, type),
                  next = function () {
                    jQuery.dequeue(elem, type);
                  };

                // If the fx queue is dequeued, always remove the progress sentinel
                if (fn === "inprogress") {
                  fn = queue.shift();
                  startLength--;
                }

                if (fn) {
                  // Add a progress sentinel to prevent the fx queue from being
                  // automatically dequeued
                  if (type === "fx") {
                    queue.unshift("inprogress");
                  }

                  // Clear up the last queue stop function
                  delete hooks.stop;
                  fn.call(elem, next, hooks);
                }

                if (!startLength && hooks) {
                  hooks.empty.fire();
                }
              },

              // Not public - generate a queueHooks object, or return the current one
              _queueHooks: function (elem, type) {
                var key = type + "queueHooks";
                return (
                  dataPriv.get(elem, key) ||
                  dataPriv.access(elem, key, {
                    empty: jQuery.Callbacks("once memory").add(function () {
                      dataPriv.remove(elem, [type + "queue", key]);
                    }),
                  })
                );
              },
            });

            jQuery.fn.extend({
              queue: function (type, data) {
                var setter = 2;

                if (typeof type !== "string") {
                  data = type;
                  type = "fx";
                  setter--;
                }

                if (arguments.length < setter) {
                  return jQuery.queue(this[0], type);
                }

                return data === undefined
                  ? this
                  : this.each(function () {
                      var queue = jQuery.queue(this, type, data);

                      // Ensure a hooks for this queue
                      jQuery._queueHooks(this, type);

                      if (type === "fx" && queue[0] !== "inprogress") {
                        jQuery.dequeue(this, type);
                      }
                    });
              },
              dequeue: function (type) {
                return this.each(function () {
                  jQuery.dequeue(this, type);
                });
              },
              clearQueue: function (type) {
                return this.queue(type || "fx", []);
              },

              // Get a promise resolved when queues of a certain type
              // are emptied (fx is the type by default)
              promise: function (type, obj) {
                var tmp,
                  count = 1,
                  defer = jQuery.Deferred(),
                  elements = this,
                  i = this.length,
                  resolve = function () {
                    if (!--count) {
                      defer.resolveWith(elements, [elements]);
                    }
                  };

                if (typeof type !== "string") {
                  obj = type;
                  type = undefined;
                }
                type = type || "fx";

                while (i--) {
                  tmp = dataPriv.get(elements[i], type + "queueHooks");
                  if (tmp && tmp.empty) {
                    count++;
                    tmp.empty.add(resolve);
                  }
                }
                resolve();
                return defer.promise(obj);
              },
            });
            var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;

            var rcssNum = new RegExp(
              "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$",
              "i"
            );

            var cssExpand = ["Top", "Right", "Bottom", "Left"];

            var documentElement = document.documentElement;

            var isAttached = function (elem) {
                return jQuery.contains(elem.ownerDocument, elem);
              },
              composed = { composed: true };

            // Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
            // Check attachment across shadow DOM boundaries when possible (gh-3504)
            // Support: iOS 10.0-10.2 only
            // Early iOS 10 versions support `attachShadow` but not `getRootNode`,
            // leading to errors. We need to check for `getRootNode`.
            if (documentElement.getRootNode) {
              isAttached = function (elem) {
                return (
                  jQuery.contains(elem.ownerDocument, elem) ||
                  elem.getRootNode(composed) === elem.ownerDocument
                );
              };
            }
            var isHiddenWithinTree = function (elem, el) {
              // isHiddenWithinTree might be called from jQuery#filter function;
              // in that case, element will be second argument
              elem = el || elem;

              // Inline style trumps all
              return (
                elem.style.display === "none" ||
                (elem.style.display === "" &&
                  // Otherwise, check computed style
                  // Support: Firefox <=43 - 45
                  // Disconnected elements can have computed display: none, so first confirm that elem is
                  // in the document.
                  isAttached(elem) &&
                  jQuery.css(elem, "display") === "none")
              );
            };

            function adjustCSS(elem, prop, valueParts, tween) {
              var adjusted,
                scale,
                maxIterations = 20,
                currentValue = tween
                  ? function () {
                      return tween.cur();
                    }
                  : function () {
                      return jQuery.css(elem, prop, "");
                    },
                initial = currentValue(),
                unit =
                  (valueParts && valueParts[3]) ||
                  (jQuery.cssNumber[prop] ? "" : "px"),
                // Starting value computation is required for potential unit mismatches
                initialInUnit =
                  elem.nodeType &&
                  (jQuery.cssNumber[prop] || (unit !== "px" && +initial)) &&
                  rcssNum.exec(jQuery.css(elem, prop));

              if (initialInUnit && initialInUnit[3] !== unit) {
                // Support: Firefox <=54
                // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
                initial = initial / 2;

                // Trust units reported by jQuery.css
                unit = unit || initialInUnit[3];

                // Iteratively approximate from a nonzero starting point
                initialInUnit = +initial || 1;

                while (maxIterations--) {
                  // Evaluate and update our best guess (doubling guesses that zero out).
                  // Finish if the scale equals or crosses 1 (making the old*new product non-positive).
                  jQuery.style(elem, prop, initialInUnit + unit);
                  if (
                    (1 - scale) *
                      (1 - (scale = currentValue() / initial || 0.5)) <=
                    0
                  ) {
                    maxIterations = 0;
                  }
                  initialInUnit = initialInUnit / scale;
                }

                initialInUnit = initialInUnit * 2;
                jQuery.style(elem, prop, initialInUnit + unit);

                // Make sure we update the tween properties later on
                valueParts = valueParts || [];
              }

              if (valueParts) {
                initialInUnit = +initialInUnit || +initial || 0;

                // Apply relative offset (+=/-=) if specified
                adjusted = valueParts[1]
                  ? initialInUnit + (valueParts[1] + 1) * valueParts[2]
                  : +valueParts[2];
                if (tween) {
                  tween.unit = unit;
                  tween.start = initialInUnit;
                  tween.end = adjusted;
                }
              }
              return adjusted;
            }

            var defaultDisplayMap = {};

            function getDefaultDisplay(elem) {
              var temp,
                doc = elem.ownerDocument,
                nodeName = elem.nodeName,
                display = defaultDisplayMap[nodeName];

              if (display) {
                return display;
              }

              temp = doc.body.appendChild(doc.createElement(nodeName));
              display = jQuery.css(temp, "display");

              temp.parentNode.removeChild(temp);

              if (display === "none") {
                display = "block";
              }
              defaultDisplayMap[nodeName] = display;

              return display;
            }

            function showHide(elements, show) {
              var display,
                elem,
                values = [],
                index = 0,
                length = elements.length;

              // Determine new display value for elements that need to change
              for (; index < length; index++) {
                elem = elements[index];
                if (!elem.style) {
                  continue;
                }

                display = elem.style.display;
                if (show) {
                  // Since we force visibility upon cascade-hidden elements, an immediate (and slow)
                  // check is required in this first loop unless we have a nonempty display value (either
                  // inline or about-to-be-restored)
                  if (display === "none") {
                    values[index] = dataPriv.get(elem, "display") || null;
                    if (!values[index]) {
                      elem.style.display = "";
                    }
                  }
                  if (elem.style.display === "" && isHiddenWithinTree(elem)) {
                    values[index] = getDefaultDisplay(elem);
                  }
                } else {
                  if (display !== "none") {
                    values[index] = "none";

                    // Remember what we're overwriting
                    dataPriv.set(elem, "display", display);
                  }
                }
              }

              // Set the display of the elements in a second loop to avoid constant reflow
              for (index = 0; index < length; index++) {
                if (values[index] != null) {
                  elements[index].style.display = values[index];
                }
              }

              return elements;
            }

            jQuery.fn.extend({
              show: function () {
                return showHide(this, true);
              },
              hide: function () {
                return showHide(this);
              },
              toggle: function (state) {
                if (typeof state === "boolean") {
                  return state ? this.show() : this.hide();
                }

                return this.each(function () {
                  if (isHiddenWithinTree(this)) {
                    jQuery(this).show();
                  } else {
                    jQuery(this).hide();
                  }
                });
              },
            });
            var rcheckableType = /^(?:checkbox|radio)$/i;

            var rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i;

            var rscriptType = /^$|^module$|\/(?:java|ecma)script/i;

            (function () {
              var fragment = document.createDocumentFragment(),
                div = fragment.appendChild(document.createElement("div")),
                input = document.createElement("input");

              // Support: Android 4.0 - 4.3 only
              // Check state lost if the name is set (#11217)
              // Support: Windows Web Apps (WWA)
              // `name` and `type` must use .setAttribute for WWA (#14901)
              input.setAttribute("type", "radio");
              input.setAttribute("checked", "checked");
              input.setAttribute("name", "t");

              div.appendChild(input);

              // Support: Android <=4.1 only
              // Older WebKit doesn't clone checked state correctly in fragments
              support.checkClone = div
                .cloneNode(true)
                .cloneNode(true).lastChild.checked;

              // Support: IE <=11 only
              // Make sure textarea (and checkbox) defaultValue is properly cloned
              div.innerHTML = "<textarea>x</textarea>";
              support.noCloneChecked =
                !!div.cloneNode(true).lastChild.defaultValue;

              // Support: IE <=9 only
              // IE <=9 replaces <option> tags with their contents when inserted outside of
              // the select element.
              div.innerHTML = "<option></option>";
              support.option = !!div.lastChild;
            })();

            // We have to close these tags to support XHTML (#13200)
            var wrapMap = {
              // XHTML parsers do not magically insert elements in the
              // same way that tag soup parsers do. So we cannot shorten
              // this by omitting <tbody> or other required elements.
              thead: [1, "<table>", "</table>"],
              col: [2, "<table><colgroup>", "</colgroup></table>"],
              tr: [2, "<table><tbody>", "</tbody></table>"],
              td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],

              _default: [0, "", ""],
            };

            wrapMap.tbody =
              wrapMap.tfoot =
              wrapMap.colgroup =
              wrapMap.caption =
                wrapMap.thead;
            wrapMap.th = wrapMap.td;

            // Support: IE <=9 only
            if (!support.option) {
              wrapMap.optgroup = wrapMap.option = [
                1,
                "<select multiple='multiple'>",
                "</select>",
              ];
            }

            function getAll(context, tag) {
              // Support: IE <=9 - 11 only
              // Use typeof to avoid zero-argument method invocation on host objects (#15151)
              var ret;

              if (typeof context.getElementsByTagName !== "undefined") {
                ret = context.getElementsByTagName(tag || "*");
              } else if (typeof context.querySelectorAll !== "undefined") {
                ret = context.querySelectorAll(tag || "*");
              } else {
                ret = [];
              }

              if (tag === undefined || (tag && nodeName(context, tag))) {
                return jQuery.merge([context], ret);
              }

              return ret;
            }

            // Mark scripts as having already been evaluated
            function setGlobalEval(elems, refElements) {
              var i = 0,
                l = elems.length;

              for (; i < l; i++) {
                dataPriv.set(
                  elems[i],
                  "globalEval",
                  !refElements || dataPriv.get(refElements[i], "globalEval")
                );
              }
            }

            var rhtml = /<|&#?\w+;/;

            function buildFragment(
              elems,
              context,
              scripts,
              selection,
              ignored
            ) {
              var elem,
                tmp,
                tag,
                wrap,
                attached,
                j,
                fragment = context.createDocumentFragment(),
                nodes = [],
                i = 0,
                l = elems.length;

              for (; i < l; i++) {
                elem = elems[i];

                if (elem || elem === 0) {
                  // Add nodes directly
                  if (toType(elem) === "object") {
                    // Support: Android <=4.0 only, PhantomJS 1 only
                    // push.apply(_, arraylike) throws on ancient WebKit
                    jQuery.merge(nodes, elem.nodeType ? [elem] : elem);

                    // Convert non-html into a text node
                  } else if (!rhtml.test(elem)) {
                    nodes.push(context.createTextNode(elem));

                    // Convert html into DOM nodes
                  } else {
                    tmp =
                      tmp || fragment.appendChild(context.createElement("div"));

                    // Deserialize a standard representation
                    tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
                    wrap = wrapMap[tag] || wrapMap._default;
                    tmp.innerHTML =
                      wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];

                    // Descend through wrappers to the right content
                    j = wrap[0];
                    while (j--) {
                      tmp = tmp.lastChild;
                    }

                    // Support: Android <=4.0 only, PhantomJS 1 only
                    // push.apply(_, arraylike) throws on ancient WebKit
                    jQuery.merge(nodes, tmp.childNodes);

                    // Remember the top-level container
                    tmp = fragment.firstChild;

                    // Ensure the created nodes are orphaned (#12392)
                    tmp.textContent = "";
                  }
                }
              }

              // Remove wrapper from fragment
              fragment.textContent = "";

              i = 0;
              while ((elem = nodes[i++])) {
                // Skip elements already in the context collection (trac-4087)
                if (selection && jQuery.inArray(elem, selection) > -1) {
                  if (ignored) {
                    ignored.push(elem);
                  }
                  continue;
                }

                attached = isAttached(elem);

                // Append to fragment
                tmp = getAll(fragment.appendChild(elem), "script");

                // Preserve script evaluation history
                if (attached) {
                  setGlobalEval(tmp);
                }

                // Capture executables
                if (scripts) {
                  j = 0;
                  while ((elem = tmp[j++])) {
                    if (rscriptType.test(elem.type || "")) {
                      scripts.push(elem);
                    }
                  }
                }
              }

              return fragment;
            }

            var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

            function returnTrue() {
              return true;
            }

            function returnFalse() {
              return false;
            }

            // Support: IE <=9 - 11+
            // focus() and blur() are asynchronous, except when they are no-op.
            // So expect focus to be synchronous when the element is already active,
            // and blur to be synchronous when the element is not already active.
            // (focus and blur are always synchronous in other supported browsers,
            // this just defines when we can count on it).
            function expectSync(elem, type) {
              return (elem === safeActiveElement()) === (type === "focus");
            }

            // Support: IE <=9 only
            // Accessing document.activeElement can throw unexpectedly
            // https://bugs.jquery.com/ticket/13393
            function safeActiveElement() {
              try {
                return document.activeElement;
              } catch (err) {}
            }

            function on(elem, types, selector, data, fn, one) {
              var origFn, type;

              // Types can be a map of types/handlers
              if (typeof types === "object") {
                // ( types-Object, selector, data )
                if (typeof selector !== "string") {
                  // ( types-Object, data )
                  data = data || selector;
                  selector = undefined;
                }
                for (type in types) {
                  on(elem, type, selector, data, types[type], one);
                }
                return elem;
              }

              if (data == null && fn == null) {
                // ( types, fn )
                fn = selector;
                data = selector = undefined;
              } else if (fn == null) {
                if (typeof selector === "string") {
                  // ( types, selector, fn )
                  fn = data;
                  data = undefined;
                } else {
                  // ( types, data, fn )
                  fn = data;
                  data = selector;
                  selector = undefined;
                }
              }
              if (fn === false) {
                fn = returnFalse;
              } else if (!fn) {
                return elem;
              }

              if (one === 1) {
                origFn = fn;
                fn = function (event) {
                  // Can use an empty set, since event contains the info
                  jQuery().off(event);
                  return origFn.apply(this, arguments);
                };

                // Use same guid so caller can remove using origFn
                fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
              }
              return elem.each(function () {
                jQuery.event.add(this, types, fn, data, selector);
              });
            }

            /*
             * Helper functions for managing events -- not part of the public interface.
             * Props to Dean Edwards' addEvent library for many of the ideas.
             */
            jQuery.event = {
              global: {},

              add: function (elem, types, handler, data, selector) {
                var handleObjIn,
                  eventHandle,
                  tmp,
                  events,
                  t,
                  handleObj,
                  special,
                  handlers,
                  type,
                  namespaces,
                  origType,
                  elemData = dataPriv.get(elem);

                // Only attach events to objects that accept data
                if (!acceptData(elem)) {
                  return;
                }

                // Caller can pass in an object of custom data in lieu of the handler
                if (handler.handler) {
                  handleObjIn = handler;
                  handler = handleObjIn.handler;
                  selector = handleObjIn.selector;
                }

                // Ensure that invalid selectors throw exceptions at attach time
                // Evaluate against documentElement in case elem is a non-element node (e.g., document)
                if (selector) {
                  jQuery.find.matchesSelector(documentElement, selector);
                }

                // Make sure that the handler has a unique ID, used to find/remove it later
                if (!handler.guid) {
                  handler.guid = jQuery.guid++;
                }

                // Init the element's event structure and main handler, if this is the first
                if (!(events = elemData.events)) {
                  events = elemData.events = Object.create(null);
                }
                if (!(eventHandle = elemData.handle)) {
                  eventHandle = elemData.handle = function (e) {
                    // Discard the second event of a jQuery.event.trigger() and
                    // when an event is called after a page has unloaded
                    return typeof jQuery !== "undefined" &&
                      jQuery.event.triggered !== e.type
                      ? jQuery.event.dispatch.apply(elem, arguments)
                      : undefined;
                  };
                }

                // Handle multiple events separated by a space
                types = (types || "").match(rnothtmlwhite) || [""];
                t = types.length;
                while (t--) {
                  tmp = rtypenamespace.exec(types[t]) || [];
                  type = origType = tmp[1];
                  namespaces = (tmp[2] || "").split(".").sort();

                  // There *must* be a type, no attaching namespace-only handlers
                  if (!type) {
                    continue;
                  }

                  // If event changes its type, use the special event handlers for the changed type
                  special = jQuery.event.special[type] || {};

                  // If selector defined, determine special event api type, otherwise given type
                  type =
                    (selector ? special.delegateType : special.bindType) ||
                    type;

                  // Update special based on newly reset type
                  special = jQuery.event.special[type] || {};

                  // handleObj is passed to all event handlers
                  handleObj = jQuery.extend(
                    {
                      type: type,
                      origType: origType,
                      data: data,
                      handler: handler,
                      guid: handler.guid,
                      selector: selector,
                      needsContext:
                        selector &&
                        jQuery.expr.match.needsContext.test(selector),
                      namespace: namespaces.join("."),
                    },
                    handleObjIn
                  );

                  // Init the event handler queue if we're the first
                  if (!(handlers = events[type])) {
                    handlers = events[type] = [];
                    handlers.delegateCount = 0;

                    // Only use addEventListener if the special events handler returns false
                    if (
                      !special.setup ||
                      special.setup.call(
                        elem,
                        data,
                        namespaces,
                        eventHandle
                      ) === false
                    ) {
                      if (elem.addEventListener) {
                        elem.addEventListener(type, eventHandle);
                      }
                    }
                  }

                  if (special.add) {
                    special.add.call(elem, handleObj);

                    if (!handleObj.handler.guid) {
                      handleObj.handler.guid = handler.guid;
                    }
                  }

                  // Add to the element's handler list, delegates in front
                  if (selector) {
                    handlers.splice(handlers.delegateCount++, 0, handleObj);
                  } else {
                    handlers.push(handleObj);
                  }

                  // Keep track of which events have ever been used, for event optimization
                  jQuery.event.global[type] = true;
                }
              },

              // Detach an event or set of events from an element
              remove: function (elem, types, handler, selector, mappedTypes) {
                var j,
                  origCount,
                  tmp,
                  events,
                  t,
                  handleObj,
                  special,
                  handlers,
                  type,
                  namespaces,
                  origType,
                  elemData = dataPriv.hasData(elem) && dataPriv.get(elem);

                if (!elemData || !(events = elemData.events)) {
                  return;
                }

                // Once for each type.namespace in types; type may be omitted
                types = (types || "").match(rnothtmlwhite) || [""];
                t = types.length;
                while (t--) {
                  tmp = rtypenamespace.exec(types[t]) || [];
                  type = origType = tmp[1];
                  namespaces = (tmp[2] || "").split(".").sort();

                  // Unbind all events (on this namespace, if provided) for the element
                  if (!type) {
                    for (type in events) {
                      jQuery.event.remove(
                        elem,
                        type + types[t],
                        handler,
                        selector,
                        true
                      );
                    }
                    continue;
                  }

                  special = jQuery.event.special[type] || {};
                  type =
                    (selector ? special.delegateType : special.bindType) ||
                    type;
                  handlers = events[type] || [];
                  tmp =
                    tmp[2] &&
                    new RegExp(
                      "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)"
                    );

                  // Remove matching events
                  origCount = j = handlers.length;
                  while (j--) {
                    handleObj = handlers[j];

                    if (
                      (mappedTypes || origType === handleObj.origType) &&
                      (!handler || handler.guid === handleObj.guid) &&
                      (!tmp || tmp.test(handleObj.namespace)) &&
                      (!selector ||
                        selector === handleObj.selector ||
                        (selector === "**" && handleObj.selector))
                    ) {
                      handlers.splice(j, 1);

                      if (handleObj.selector) {
                        handlers.delegateCount--;
                      }
                      if (special.remove) {
                        special.remove.call(elem, handleObj);
                      }
                    }
                  }

                  // Remove generic event handler if we removed something and no more handlers exist
                  // (avoids potential for endless recursion during removal of special event handlers)
                  if (origCount && !handlers.length) {
                    if (
                      !special.teardown ||
                      special.teardown.call(
                        elem,
                        namespaces,
                        elemData.handle
                      ) === false
                    ) {
                      jQuery.removeEvent(elem, type, elemData.handle);
                    }

                    delete events[type];
                  }
                }

                // Remove data and the expando if it's no longer used
                if (jQuery.isEmptyObject(events)) {
                  dataPriv.remove(elem, "handle events");
                }
              },

              dispatch: function (nativeEvent) {
                var i,
                  j,
                  ret,
                  matched,
                  handleObj,
                  handlerQueue,
                  args = new Array(arguments.length),
                  // Make a writable jQuery.Event from the native event object
                  event = jQuery.event.fix(nativeEvent),
                  handlers =
                    (dataPriv.get(this, "events") || Object.create(null))[
                      event.type
                    ] || [],
                  special = jQuery.event.special[event.type] || {};

                // Use the fix-ed jQuery.Event rather than the (read-only) native event
                args[0] = event;

                for (i = 1; i < arguments.length; i++) {
                  args[i] = arguments[i];
                }

                event.delegateTarget = this;

                // Call the preDispatch hook for the mapped type, and let it bail if desired
                if (
                  special.preDispatch &&
                  special.preDispatch.call(this, event) === false
                ) {
                  return;
                }

                // Determine handlers
                handlerQueue = jQuery.event.handlers.call(
                  this,
                  event,
                  handlers
                );

                // Run delegates first; they may want to stop propagation beneath us
                i = 0;
                while (
                  (matched = handlerQueue[i++]) &&
                  !event.isPropagationStopped()
                ) {
                  event.currentTarget = matched.elem;

                  j = 0;
                  while (
                    (handleObj = matched.handlers[j++]) &&
                    !event.isImmediatePropagationStopped()
                  ) {
                    // If the event is namespaced, then each handler is only invoked if it is
                    // specially universal or its namespaces are a superset of the event's.
                    if (
                      !event.rnamespace ||
                      handleObj.namespace === false ||
                      event.rnamespace.test(handleObj.namespace)
                    ) {
                      event.handleObj = handleObj;
                      event.data = handleObj.data;

                      ret = (
                        (jQuery.event.special[handleObj.origType] || {})
                          .handle || handleObj.handler
                      ).apply(matched.elem, args);

                      if (ret !== undefined) {
                        if ((event.result = ret) === false) {
                          event.preventDefault();
                          event.stopPropagation();
                        }
                      }
                    }
                  }
                }

                // Call the postDispatch hook for the mapped type
                if (special.postDispatch) {
                  special.postDispatch.call(this, event);
                }

                return event.result;
              },

              handlers: function (event, handlers) {
                var i,
                  handleObj,
                  sel,
                  matchedHandlers,
                  matchedSelectors,
                  handlerQueue = [],
                  delegateCount = handlers.delegateCount,
                  cur = event.target;

                // Find delegate handlers
                if (
                  delegateCount &&
                  // Support: IE <=9
                  // Black-hole SVG <use> instance trees (trac-13180)
                  cur.nodeType &&
                  // Support: Firefox <=42
                  // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
                  // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
                  // Support: IE 11 only
                  // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
                  !(event.type === "click" && event.button >= 1)
                ) {
                  for (; cur !== this; cur = cur.parentNode || this) {
                    // Don't check non-elements (#13208)
                    // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
                    if (
                      cur.nodeType === 1 &&
                      !(event.type === "click" && cur.disabled === true)
                    ) {
                      matchedHandlers = [];
                      matchedSelectors = {};
                      for (i = 0; i < delegateCount; i++) {
                        handleObj = handlers[i];

                        // Don't conflict with Object.prototype properties (#13203)
                        sel = handleObj.selector + " ";

                        if (matchedSelectors[sel] === undefined) {
                          matchedSelectors[sel] = handleObj.needsContext
                            ? jQuery(sel, this).index(cur) > -1
                            : jQuery.find(sel, this, null, [cur]).length;
                        }
                        if (matchedSelectors[sel]) {
                          matchedHandlers.push(handleObj);
                        }
                      }
                      if (matchedHandlers.length) {
                        handlerQueue.push({
                          elem: cur,
                          handlers: matchedHandlers,
                        });
                      }
                    }
                  }
                }

                // Add the remaining (directly-bound) handlers
                cur = this;
                if (delegateCount < handlers.length) {
                  handlerQueue.push({
                    elem: cur,
                    handlers: handlers.slice(delegateCount),
                  });
                }

                return handlerQueue;
              },

              addProp: function (name, hook) {
                Object.defineProperty(jQuery.Event.prototype, name, {
                  enumerable: true,
                  configurable: true,

                  get: isFunction(hook)
                    ? function () {
                        if (this.originalEvent) {
                          return hook(this.originalEvent);
                        }
                      }
                    : function () {
                        if (this.originalEvent) {
                          return this.originalEvent[name];
                        }
                      },

                  set: function (value) {
                    Object.defineProperty(this, name, {
                      enumerable: true,
                      configurable: true,
                      writable: true,
                      value: value,
                    });
                  },
                });
              },

              fix: function (originalEvent) {
                return originalEvent[jQuery.expando]
                  ? originalEvent
                  : new jQuery.Event(originalEvent);
              },

              special: {
                load: {
                  // Prevent triggered image.load events from bubbling to window.load
                  noBubble: true,
                },
                click: {
                  // Utilize native event to ensure correct state for checkable inputs
                  setup: function (data) {
                    // For mutual compressibility with _default, replace `this` access with a local var.
                    // `|| data` is dead code meant only to preserve the variable through minification.
                    var el = this || data;

                    // Claim the first handler
                    if (
                      rcheckableType.test(el.type) &&
                      el.click &&
                      nodeName(el, "input")
                    ) {
                      // dataPriv.set( el, "click", ... )
                      leverageNative(el, "click", returnTrue);
                    }

                    // Return false to allow normal processing in the caller
                    return false;
                  },
                  trigger: function (data) {
                    // For mutual compressibility with _default, replace `this` access with a local var.
                    // `|| data` is dead code meant only to preserve the variable through minification.
                    var el = this || data;

                    // Force setup before triggering a click
                    if (
                      rcheckableType.test(el.type) &&
                      el.click &&
                      nodeName(el, "input")
                    ) {
                      leverageNative(el, "click");
                    }

                    // Return non-false to allow normal event-path propagation
                    return true;
                  },

                  // For cross-browser consistency, suppress native .click() on links
                  // Also prevent it if we're currently inside a leveraged native-event stack
                  _default: function (event) {
                    var target = event.target;
                    return (
                      (rcheckableType.test(target.type) &&
                        target.click &&
                        nodeName(target, "input") &&
                        dataPriv.get(target, "click")) ||
                      nodeName(target, "a")
                    );
                  },
                },

                beforeunload: {
                  postDispatch: function (event) {
                    // Support: Firefox 20+
                    // Firefox doesn't alert if the returnValue field is not set.
                    if (event.result !== undefined && event.originalEvent) {
                      event.originalEvent.returnValue = event.result;
                    }
                  },
                },
              },
            };

            // Ensure the presence of an event listener that handles manually-triggered
            // synthetic events by interrupting progress until reinvoked in response to
            // *native* events that it fires directly, ensuring that state changes have
            // already occurred before other listeners are invoked.
            function leverageNative(el, type, expectSync) {
              // Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
              if (!expectSync) {
                if (dataPriv.get(el, type) === undefined) {
                  jQuery.event.add(el, type, returnTrue);
                }
                return;
              }

              // Register the controller as a special universal handler for all event namespaces
              dataPriv.set(el, type, false);
              jQuery.event.add(el, type, {
                namespace: false,
                handler: function (event) {
                  var notAsync,
                    result,
                    saved = dataPriv.get(this, type);

                  if (event.isTrigger & 1 && this[type]) {
                    // Interrupt processing of the outer synthetic .trigger()ed event
                    // Saved data should be false in such cases, but might be a leftover capture object
                    // from an async native handler (gh-4350)
                    if (!saved.length) {
                      // Store arguments for use when handling the inner native event
                      // There will always be at least one argument (an event object), so this array
                      // will not be confused with a leftover capture object.
                      saved = slice.call(arguments);
                      dataPriv.set(this, type, saved);

                      // Trigger the native event and capture its result
                      // Support: IE <=9 - 11+
                      // focus() and blur() are asynchronous
                      notAsync = expectSync(this, type);
                      this[type]();
                      result = dataPriv.get(this, type);
                      if (saved !== result || notAsync) {
                        dataPriv.set(this, type, false);
                      } else {
                        result = {};
                      }
                      if (saved !== result) {
                        // Cancel the outer synthetic event
                        event.stopImmediatePropagation();
                        event.preventDefault();

                        // Support: Chrome 86+
                        // In Chrome, if an element having a focusout handler is blurred by
                        // clicking outside of it, it invokes the handler synchronously. If
                        // that handler calls `.remove()` on the element, the data is cleared,
                        // leaving `result` undefined. We need to guard against this.
                        return result && result.value;
                      }

                      // If this is an inner synthetic event for an event with a bubbling surrogate
                      // (focus or blur), assume that the surrogate already propagated from triggering the
                      // native event and prevent that from happening again here.
                      // This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
                      // bubbling surrogate propagates *after* the non-bubbling base), but that seems
                      // less bad than duplication.
                    } else if (
                      (jQuery.event.special[type] || {}).delegateType
                    ) {
                      event.stopPropagation();
                    }

                    // If this is a native event triggered above, everything is now in order
                    // Fire an inner synthetic event with the original arguments
                  } else if (saved.length) {
                    // ...and capture the result
                    dataPriv.set(this, type, {
                      value: jQuery.event.trigger(
                        // Support: IE <=9 - 11+
                        // Extend with the prototype to reset the above stopImmediatePropagation()
                        jQuery.extend(saved[0], jQuery.Event.prototype),
                        saved.slice(1),
                        this
                      ),
                    });

                    // Abort handling of the native event
                    event.stopImmediatePropagation();
                  }
                },
              });
            }

            jQuery.removeEvent = function (elem, type, handle) {
              // This "if" is needed for plain objects
              if (elem.removeEventListener) {
                elem.removeEventListener(type, handle);
              }
            };

            jQuery.Event = function (src, props) {
              // Allow instantiation without the 'new' keyword
              if (!(this instanceof jQuery.Event)) {
                return new jQuery.Event(src, props);
              }

              // Event object
              if (src && src.type) {
                this.originalEvent = src;
                this.type = src.type;

                // Events bubbling up the document may have been marked as prevented
                // by a handler lower down the tree; reflect the correct value.
                this.isDefaultPrevented =
                  src.defaultPrevented ||
                  (src.defaultPrevented === undefined &&
                    // Support: Android <=2.3 only
                    src.returnValue === false)
                    ? returnTrue
                    : returnFalse;

                // Create target properties
                // Support: Safari <=6 - 7 only
                // Target should not be a text node (#504, #13143)
                this.target =
                  src.target && src.target.nodeType === 3
                    ? src.target.parentNode
                    : src.target;

                this.currentTarget = src.currentTarget;
                this.relatedTarget = src.relatedTarget;

                // Event type
              } else {
                this.type = src;
              }

              // Put explicitly provided properties onto the event object
              if (props) {
                jQuery.extend(this, props);
              }

              // Create a timestamp if incoming event doesn't have one
              this.timeStamp = (src && src.timeStamp) || Date.now();

              // Mark it as fixed
              this[jQuery.expando] = true;
            };

            // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
            // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
            jQuery.Event.prototype = {
              constructor: jQuery.Event,
              isDefaultPrevented: returnFalse,
              isPropagationStopped: returnFalse,
              isImmediatePropagationStopped: returnFalse,
              isSimulated: false,

              preventDefault: function () {
                var e = this.originalEvent;

                this.isDefaultPrevented = returnTrue;

                if (e && !this.isSimulated) {
                  e.preventDefault();
                }
              },
              stopPropagation: function () {
                var e = this.originalEvent;

                this.isPropagationStopped = returnTrue;

                if (e && !this.isSimulated) {
                  e.stopPropagation();
                }
              },
              stopImmediatePropagation: function () {
                var e = this.originalEvent;

                this.isImmediatePropagationStopped = returnTrue;

                if (e && !this.isSimulated) {
                  e.stopImmediatePropagation();
                }

                this.stopPropagation();
              },
            };

            // Includes all common event props including KeyEvent and MouseEvent specific props
            jQuery.each(
              {
                altKey: true,
                bubbles: true,
                cancelable: true,
                changedTouches: true,
                ctrlKey: true,
                detail: true,
                eventPhase: true,
                metaKey: true,
                pageX: true,
                pageY: true,
                shiftKey: true,
                view: true,
                char: true,
                code: true,
                charCode: true,
                key: true,
                keyCode: true,
                button: true,
                buttons: true,
                clientX: true,
                clientY: true,
                offsetX: true,
                offsetY: true,
                pointerId: true,
                pointerType: true,
                screenX: true,
                screenY: true,
                targetTouches: true,
                toElement: true,
                touches: true,
                which: true,
              },
              jQuery.event.addProp
            );

            jQuery.each(
              { focus: "focusin", blur: "focusout" },
              function (type, delegateType) {
                jQuery.event.special[type] = {
                  // Utilize native event if possible so blur/focus sequence is correct
                  setup: function () {
                    // Claim the first handler
                    // dataPriv.set( this, "focus", ... )
                    // dataPriv.set( this, "blur", ... )
                    leverageNative(this, type, expectSync);

                    // Return false to allow normal processing in the caller
                    return false;
                  },
                  trigger: function () {
                    // Force setup before trigger
                    leverageNative(this, type);

                    // Return non-false to allow normal event-path propagation
                    return true;
                  },

                  // Suppress native focus or blur as it's already being fired
                  // in leverageNative.
                  _default: function () {
                    return true;
                  },

                  delegateType: delegateType,
                };
              }
            );

            // Create mouseenter/leave events using mouseover/out and event-time checks
            // so that event delegation works in jQuery.
            // Do the same for pointerenter/pointerleave and pointerover/pointerout
            //
            // Support: Safari 7 only
            // Safari sends mouseenter too often; see:
            // https://bugs.chromium.org/p/chromium/issues/detail?id=470258
            // for the description of the bug (it existed in older Chrome versions as well).
            jQuery.each(
              {
                mouseenter: "mouseover",
                mouseleave: "mouseout",
                pointerenter: "pointerover",
                pointerleave: "pointerout",
              },
              function (orig, fix) {
                jQuery.event.special[orig] = {
                  delegateType: fix,
                  bindType: fix,

                  handle: function (event) {
                    var ret,
                      target = this,
                      related = event.relatedTarget,
                      handleObj = event.handleObj;

                    // For mouseenter/leave call the handler if related is outside the target.
                    // NB: No relatedTarget if the mouse left/entered the browser window
                    if (
                      !related ||
                      (related !== target && !jQuery.contains(target, related))
                    ) {
                      event.type = handleObj.origType;
                      ret = handleObj.handler.apply(this, arguments);
                      event.type = fix;
                    }
                    return ret;
                  },
                };
              }
            );

            jQuery.fn.extend({
              on: function (types, selector, data, fn) {
                return on(this, types, selector, data, fn);
              },
              one: function (types, selector, data, fn) {
                return on(this, types, selector, data, fn, 1);
              },
              off: function (types, selector, fn) {
                var handleObj, type;
                if (types && types.preventDefault && types.handleObj) {
                  // ( event )  dispatched jQuery.Event
                  handleObj = types.handleObj;
                  jQuery(types.delegateTarget).off(
                    handleObj.namespace
                      ? handleObj.origType + "." + handleObj.namespace
                      : handleObj.origType,
                    handleObj.selector,
                    handleObj.handler
                  );
                  return this;
                }
                if (typeof types === "object") {
                  // ( types-object [, selector] )
                  for (type in types) {
                    this.off(type, selector, types[type]);
                  }
                  return this;
                }
                if (selector === false || typeof selector === "function") {
                  // ( types [, fn] )
                  fn = selector;
                  selector = undefined;
                }
                if (fn === false) {
                  fn = returnFalse;
                }
                return this.each(function () {
                  jQuery.event.remove(this, types, fn, selector);
                });
              },
            });

            var // Support: IE <=10 - 11, Edge 12 - 13 only
              // In IE/Edge using regex groups here causes severe slowdowns.
              // See https://connect.microsoft.com/IE/feedback/details/1736512/
              rnoInnerhtml = /<script|<style|<link/i,
              // checked="checked" or checked
              rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
              rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

            // Prefer a tbody over its parent table for containing new rows
            function manipulationTarget(elem, content) {
              if (
                nodeName(elem, "table") &&
                nodeName(
                  content.nodeType !== 11 ? content : content.firstChild,
                  "tr"
                )
              ) {
                return jQuery(elem).children("tbody")[0] || elem;
              }

              return elem;
            }

            // Replace/restore the type attribute of script elements for safe DOM manipulation
            function disableScript(elem) {
              elem.type =
                (elem.getAttribute("type") !== null) + "/" + elem.type;
              return elem;
            }
            function restoreScript(elem) {
              if ((elem.type || "").slice(0, 5) === "true/") {
                elem.type = elem.type.slice(5);
              } else {
                elem.removeAttribute("type");
              }

              return elem;
            }

            function cloneCopyEvent(src, dest) {
              var i, l, type, pdataOld, udataOld, udataCur, events;

              if (dest.nodeType !== 1) {
                return;
              }

              // 1. Copy private data: events, handlers, etc.
              if (dataPriv.hasData(src)) {
                pdataOld = dataPriv.get(src);
                events = pdataOld.events;

                if (events) {
                  dataPriv.remove(dest, "handle events");

                  for (type in events) {
                    for (i = 0, l = events[type].length; i < l; i++) {
                      jQuery.event.add(dest, type, events[type][i]);
                    }
                  }
                }
              }

              // 2. Copy user data
              if (dataUser.hasData(src)) {
                udataOld = dataUser.access(src);
                udataCur = jQuery.extend({}, udataOld);

                dataUser.set(dest, udataCur);
              }
            }

            // Fix IE bugs, see support tests
            function fixInput(src, dest) {
              var nodeName = dest.nodeName.toLowerCase();

              // Fails to persist the checked state of a cloned checkbox or radio button.
              if (nodeName === "input" && rcheckableType.test(src.type)) {
                dest.checked = src.checked;

                // Fails to return the selected option to the default selected state when cloning options
              } else if (nodeName === "input" || nodeName === "textarea") {
                dest.defaultValue = src.defaultValue;
              }
            }

            function domManip(collection, args, callback, ignored) {
              // Flatten any nested arrays
              args = flat(args);

              var fragment,
                first,
                scripts,
                hasScripts,
                node,
                doc,
                i = 0,
                l = collection.length,
                iNoClone = l - 1,
                value = args[0],
                valueIsFunction = isFunction(value);

              // We can't cloneNode fragments that contain checked, in WebKit
              if (
                valueIsFunction ||
                (l > 1 &&
                  typeof value === "string" &&
                  !support.checkClone &&
                  rchecked.test(value))
              ) {
                return collection.each(function (index) {
                  var self = collection.eq(index);
                  if (valueIsFunction) {
                    args[0] = value.call(this, index, self.html());
                  }
                  domManip(self, args, callback, ignored);
                });
              }

              if (l) {
                fragment = buildFragment(
                  args,
                  collection[0].ownerDocument,
                  false,
                  collection,
                  ignored
                );
                first = fragment.firstChild;

                if (fragment.childNodes.length === 1) {
                  fragment = first;
                }

                // Require either new content or an interest in ignored elements to invoke the callback
                if (first || ignored) {
                  scripts = jQuery.map(
                    getAll(fragment, "script"),
                    disableScript
                  );
                  hasScripts = scripts.length;

                  // Use the original fragment for the last item
                  // instead of the first because it can end up
                  // being emptied incorrectly in certain situations (#8070).
                  for (; i < l; i++) {
                    node = fragment;

                    if (i !== iNoClone) {
                      node = jQuery.clone(node, true, true);

                      // Keep references to cloned scripts for later restoration
                      if (hasScripts) {
                        // Support: Android <=4.0 only, PhantomJS 1 only
                        // push.apply(_, arraylike) throws on ancient WebKit
                        jQuery.merge(scripts, getAll(node, "script"));
                      }
                    }

                    callback.call(collection[i], node, i);
                  }

                  if (hasScripts) {
                    doc = scripts[scripts.length - 1].ownerDocument;

                    // Reenable scripts
                    jQuery.map(scripts, restoreScript);

                    // Evaluate executable scripts on first document insertion
                    for (i = 0; i < hasScripts; i++) {
                      node = scripts[i];
                      if (
                        rscriptType.test(node.type || "") &&
                        !dataPriv.access(node, "globalEval") &&
                        jQuery.contains(doc, node)
                      ) {
                        if (
                          node.src &&
                          (node.type || "").toLowerCase() !== "module"
                        ) {
                          // Optional AJAX dependency, but won't run scripts if not present
                          if (jQuery._evalUrl && !node.noModule) {
                            jQuery._evalUrl(
                              node.src,
                              {
                                nonce: node.nonce || node.getAttribute("nonce"),
                              },
                              doc
                            );
                          }
                        } else {
                          DOMEval(
                            node.textContent.replace(rcleanScript, ""),
                            node,
                            doc
                          );
                        }
                      }
                    }
                  }
                }
              }

              return collection;
            }

            function remove(elem, selector, keepData) {
              var node,
                nodes = selector ? jQuery.filter(selector, elem) : elem,
                i = 0;

              for (; (node = nodes[i]) != null; i++) {
                if (!keepData && node.nodeType === 1) {
                  jQuery.cleanData(getAll(node));
                }

                if (node.parentNode) {
                  if (keepData && isAttached(node)) {
                    setGlobalEval(getAll(node, "script"));
                  }
                  node.parentNode.removeChild(node);
                }
              }

              return elem;
            }

            jQuery.extend({
              htmlPrefilter: function (html) {
                return html;
              },

              clone: function (elem, dataAndEvents, deepDataAndEvents) {
                var i,
                  l,
                  srcElements,
                  destElements,
                  clone = elem.cloneNode(true),
                  inPage = isAttached(elem);

                // Fix IE cloning issues
                if (
                  !support.noCloneChecked &&
                  (elem.nodeType === 1 || elem.nodeType === 11) &&
                  !jQuery.isXMLDoc(elem)
                ) {
                  // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
                  destElements = getAll(clone);
                  srcElements = getAll(elem);

                  for (i = 0, l = srcElements.length; i < l; i++) {
                    fixInput(srcElements[i], destElements[i]);
                  }
                }

                // Copy the events from the original to the clone
                if (dataAndEvents) {
                  if (deepDataAndEvents) {
                    srcElements = srcElements || getAll(elem);
                    destElements = destElements || getAll(clone);

                    for (i = 0, l = srcElements.length; i < l; i++) {
                      cloneCopyEvent(srcElements[i], destElements[i]);
                    }
                  } else {
                    cloneCopyEvent(elem, clone);
                  }
                }

                // Preserve script evaluation history
                destElements = getAll(clone, "script");
                if (destElements.length > 0) {
                  setGlobalEval(
                    destElements,
                    !inPage && getAll(elem, "script")
                  );
                }

                // Return the cloned set
                return clone;
              },

              cleanData: function (elems) {
                var data,
                  elem,
                  type,
                  special = jQuery.event.special,
                  i = 0;

                for (; (elem = elems[i]) !== undefined; i++) {
                  if (acceptData(elem)) {
                    if ((data = elem[dataPriv.expando])) {
                      if (data.events) {
                        for (type in data.events) {
                          if (special[type]) {
                            jQuery.event.remove(elem, type);

                            // This is a shortcut to avoid jQuery.event.remove's overhead
                          } else {
                            jQuery.removeEvent(elem, type, data.handle);
                          }
                        }
                      }

                      // Support: Chrome <=35 - 45+
                      // Assign undefined instead of using delete, see Data#remove
                      elem[dataPriv.expando] = undefined;
                    }
                    if (elem[dataUser.expando]) {
                      // Support: Chrome <=35 - 45+
                      // Assign undefined instead of using delete, see Data#remove
                      elem[dataUser.expando] = undefined;
                    }
                  }
                }
              },
            });

            jQuery.fn.extend({
              detach: function (selector) {
                return remove(this, selector, true);
              },

              remove: function (selector) {
                return remove(this, selector);
              },

              text: function (value) {
                return access(
                  this,
                  function (value) {
                    return value === undefined
                      ? jQuery.text(this)
                      : this.empty().each(function () {
                          if (
                            this.nodeType === 1 ||
                            this.nodeType === 11 ||
                            this.nodeType === 9
                          ) {
                            this.textContent = value;
                          }
                        });
                  },
                  null,
                  value,
                  arguments.length
                );
              },

              append: function () {
                return domManip(this, arguments, function (elem) {
                  if (
                    this.nodeType === 1 ||
                    this.nodeType === 11 ||
                    this.nodeType === 9
                  ) {
                    var target = manipulationTarget(this, elem);
                    target.appendChild(elem);
                  }
                });
              },

              prepend: function () {
                return domManip(this, arguments, function (elem) {
                  if (
                    this.nodeType === 1 ||
                    this.nodeType === 11 ||
                    this.nodeType === 9
                  ) {
                    var target = manipulationTarget(this, elem);
                    target.insertBefore(elem, target.firstChild);
                  }
                });
              },

              before: function () {
                return domManip(this, arguments, function (elem) {
                  if (this.parentNode) {
                    this.parentNode.insertBefore(elem, this);
                  }
                });
              },

              after: function () {
                return domManip(this, arguments, function (elem) {
                  if (this.parentNode) {
                    this.parentNode.insertBefore(elem, this.nextSibling);
                  }
                });
              },

              empty: function () {
                var elem,
                  i = 0;

                for (; (elem = this[i]) != null; i++) {
                  if (elem.nodeType === 1) {
                    // Prevent memory leaks
                    jQuery.cleanData(getAll(elem, false));

                    // Remove any remaining nodes
                    elem.textContent = "";
                  }
                }

                return this;
              },

              clone: function (dataAndEvents, deepDataAndEvents) {
                dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
                deepDataAndEvents =
                  deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

                return this.map(function () {
                  return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
                });
              },

              html: function (value) {
                return access(
                  this,
                  function (value) {
                    var elem = this[0] || {},
                      i = 0,
                      l = this.length;

                    if (value === undefined && elem.nodeType === 1) {
                      return elem.innerHTML;
                    }

                    // See if we can take a shortcut and just use innerHTML
                    if (
                      typeof value === "string" &&
                      !rnoInnerhtml.test(value) &&
                      !wrapMap[
                        (rtagName.exec(value) || ["", ""])[1].toLowerCase()
                      ]
                    ) {
                      value = jQuery.htmlPrefilter(value);

                      try {
                        for (; i < l; i++) {
                          elem = this[i] || {};

                          // Remove element nodes and prevent memory leaks
                          if (elem.nodeType === 1) {
                            jQuery.cleanData(getAll(elem, false));
                            elem.innerHTML = value;
                          }
                        }

                        elem = 0;

                        // If using innerHTML throws an exception, use the fallback method
                      } catch (e) {}
                    }

                    if (elem) {
                      this.empty().append(value);
                    }
                  },
                  null,
                  value,
                  arguments.length
                );
              },

              replaceWith: function () {
                var ignored = [];

                // Make the changes, replacing each non-ignored context element with the new content
                return domManip(
                  this,
                  arguments,
                  function (elem) {
                    var parent = this.parentNode;

                    if (jQuery.inArray(this, ignored) < 0) {
                      jQuery.cleanData(getAll(this));
                      if (parent) {
                        parent.replaceChild(elem, this);
                      }
                    }

                    // Force callback invocation
                  },
                  ignored
                );
              },
            });

            jQuery.each(
              {
                appendTo: "append",
                prependTo: "prepend",
                insertBefore: "before",
                insertAfter: "after",
                replaceAll: "replaceWith",
              },
              function (name, original) {
                jQuery.fn[name] = function (selector) {
                  var elems,
                    ret = [],
                    insert = jQuery(selector),
                    last = insert.length - 1,
                    i = 0;

                  for (; i <= last; i++) {
                    elems = i === last ? this : this.clone(true);
                    jQuery(insert[i])[original](elems);

                    // Support: Android <=4.0 only, PhantomJS 1 only
                    // .get() because push.apply(_, arraylike) throws on ancient WebKit
                    push.apply(ret, elems.get());
                  }

                  return this.pushStack(ret);
                };
              }
            );
            var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");

            var getStyles = function (elem) {
              // Support: IE <=11 only, Firefox <=30 (#15098, #14150)
              // IE throws on elements created in popups
              // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
              var view = elem.ownerDocument.defaultView;

              if (!view || !view.opener) {
                view = window;
              }

              return view.getComputedStyle(elem);
            };

            var swap = function (elem, options, callback) {
              var ret,
                name,
                old = {};

              // Remember the old values, and insert the new ones
              for (name in options) {
                old[name] = elem.style[name];
                elem.style[name] = options[name];
              }

              ret = callback.call(elem);

              // Revert the old values
              for (name in options) {
                elem.style[name] = old[name];
              }

              return ret;
            };

            var rboxStyle = new RegExp(cssExpand.join("|"), "i");

            (function () {
              // Executing both pixelPosition & boxSizingReliable tests require only one layout
              // so they're executed at the same time to save the second computation.
              function computeStyleTests() {
                // This is a singleton, we need to execute it only once
                if (!div) {
                  return;
                }

                container.style.cssText =
                  "position:absolute;left:-11111px;width:60px;" +
                  "margin-top:1px;padding:0;border:0";
                div.style.cssText =
                  "position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
                  "margin:auto;border:1px;padding:1px;" +
                  "width:60%;top:1%";
                documentElement.appendChild(container).appendChild(div);

                var divStyle = window.getComputedStyle(div);
                pixelPositionVal = divStyle.top !== "1%";

                // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
                reliableMarginLeftVal =
                  roundPixelMeasures(divStyle.marginLeft) === 12;

                // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
                // Some styles come back with percentage values, even though they shouldn't
                div.style.right = "60%";
                pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36;

                // Support: IE 9 - 11 only
                // Detect misreporting of content dimensions for box-sizing:border-box elements
                boxSizingReliableVal =
                  roundPixelMeasures(divStyle.width) === 36;

                // Support: IE 9 only
                // Detect overflow:scroll screwiness (gh-3699)
                // Support: Chrome <=64
                // Don't get tricked when zoom affects offsetWidth (gh-4029)
                div.style.position = "absolute";
                scrollboxSizeVal =
                  roundPixelMeasures(div.offsetWidth / 3) === 12;

                documentElement.removeChild(container);

                // Nullify the div so it wouldn't be stored in the memory and
                // it will also be a sign that checks already performed
                div = null;
              }

              function roundPixelMeasures(measure) {
                return Math.round(parseFloat(measure));
              }

              var pixelPositionVal,
                boxSizingReliableVal,
                scrollboxSizeVal,
                pixelBoxStylesVal,
                reliableTrDimensionsVal,
                reliableMarginLeftVal,
                container = document.createElement("div"),
                div = document.createElement("div");

              // Finish early in limited (non-browser) environments
              if (!div.style) {
                return;
              }

              // Support: IE <=9 - 11 only
              // Style of cloned element affects source element cloned (#8908)
              div.style.backgroundClip = "content-box";
              div.cloneNode(true).style.backgroundClip = "";
              support.clearCloneStyle =
                div.style.backgroundClip === "content-box";

              jQuery.extend(support, {
                boxSizingReliable: function () {
                  computeStyleTests();
                  return boxSizingReliableVal;
                },
                pixelBoxStyles: function () {
                  computeStyleTests();
                  return pixelBoxStylesVal;
                },
                pixelPosition: function () {
                  computeStyleTests();
                  return pixelPositionVal;
                },
                reliableMarginLeft: function () {
                  computeStyleTests();
                  return reliableMarginLeftVal;
                },
                scrollboxSize: function () {
                  computeStyleTests();
                  return scrollboxSizeVal;
                },

                // Support: IE 9 - 11+, Edge 15 - 18+
                // IE/Edge misreport `getComputedStyle` of table rows with width/height
                // set in CSS while `offset*` properties report correct values.
                // Behavior in IE 9 is more subtle than in newer versions & it passes
                // some versions of this test; make sure not to make it pass there!
                //
                // Support: Firefox 70+
                // Only Firefox includes border widths
                // in computed dimensions. (gh-4529)
                reliableTrDimensions: function () {
                  var table, tr, trChild, trStyle;
                  if (reliableTrDimensionsVal == null) {
                    table = document.createElement("table");
                    tr = document.createElement("tr");
                    trChild = document.createElement("div");

                    table.style.cssText =
                      "position:absolute;left:-11111px;border-collapse:separate";
                    tr.style.cssText = "border:1px solid";

                    // Support: Chrome 86+
                    // Height set through cssText does not get applied.
                    // Computed height then comes back as 0.
                    tr.style.height = "1px";
                    trChild.style.height = "9px";

                    // Support: Android 8 Chrome 86+
                    // In our bodyBackground.html iframe,
                    // display for all div elements is set to "inline",
                    // which causes a problem only in Android 8 Chrome 86.
                    // Ensuring the div is display: block
                    // gets around this issue.
                    trChild.style.display = "block";

                    documentElement
                      .appendChild(table)
                      .appendChild(tr)
                      .appendChild(trChild);

                    trStyle = window.getComputedStyle(tr);
                    reliableTrDimensionsVal =
                      parseInt(trStyle.height, 10) +
                        parseInt(trStyle.borderTopWidth, 10) +
                        parseInt(trStyle.borderBottomWidth, 10) ===
                      tr.offsetHeight;

                    documentElement.removeChild(table);
                  }
                  return reliableTrDimensionsVal;
                },
              });
            })();

            function curCSS(elem, name, computed) {
              var width,
                minWidth,
                maxWidth,
                ret,
                // Support: Firefox 51+
                // Retrieving style before computed somehow
                // fixes an issue with getting wrong values
                // on detached elements
                style = elem.style;

              computed = computed || getStyles(elem);

              // getPropertyValue is needed for:
              //   .css('filter') (IE 9 only, #12537)
              //   .css('--customProperty) (#3144)
              if (computed) {
                ret = computed.getPropertyValue(name) || computed[name];

                if (ret === "" && !isAttached(elem)) {
                  ret = jQuery.style(elem, name);
                }

                // A tribute to the "awesome hack by Dean Edwards"
                // Android Browser returns percentage for some values,
                // but width seems to be reliably pixels.
                // This is against the CSSOM draft spec:
                // https://drafts.csswg.org/cssom/#resolved-values
                if (
                  !support.pixelBoxStyles() &&
                  rnumnonpx.test(ret) &&
                  rboxStyle.test(name)
                ) {
                  // Remember the original values
                  width = style.width;
                  minWidth = style.minWidth;
                  maxWidth = style.maxWidth;

                  // Put in the new values to get a computed value out
                  style.minWidth = style.maxWidth = style.width = ret;
                  ret = computed.width;

                  // Revert the changed values
                  style.width = width;
                  style.minWidth = minWidth;
                  style.maxWidth = maxWidth;
                }
              }

              return ret !== undefined
                ? // Support: IE <=9 - 11 only
                  // IE returns zIndex value as an integer.
                  ret + ""
                : ret;
            }

            function addGetHookIf(conditionFn, hookFn) {
              // Define the hook, we'll check on the first run if it's really needed.
              return {
                get: function () {
                  if (conditionFn()) {
                    // Hook not needed (or it's not possible to use it due
                    // to missing dependency), remove it.
                    delete this.get;
                    return;
                  }

                  // Hook needed; redefine it so that the support test is not executed again.
                  return (this.get = hookFn).apply(this, arguments);
                },
              };
            }

            var cssPrefixes = ["Webkit", "Moz", "ms"],
              emptyStyle = document.createElement("div").style,
              vendorProps = {};

            // Return a vendor-prefixed property or undefined
            function vendorPropName(name) {
              // Check for vendor prefixed names
              var capName = name[0].toUpperCase() + name.slice(1),
                i = cssPrefixes.length;

              while (i--) {
                name = cssPrefixes[i] + capName;
                if (name in emptyStyle) {
                  return name;
                }
              }
            }

            // Return a potentially-mapped jQuery.cssProps or vendor prefixed property
            function finalPropName(name) {
              var final = jQuery.cssProps[name] || vendorProps[name];

              if (final) {
                return final;
              }
              if (name in emptyStyle) {
                return name;
              }
              return (vendorProps[name] = vendorPropName(name) || name);
            }

            var // Swappable if display is none or starts with table
              // except "table", "table-cell", or "table-caption"
              // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
              rdisplayswap = /^(none|table(?!-c[ea]).+)/,
              rcustomProp = /^--/,
              cssShow = {
                position: "absolute",
                visibility: "hidden",
                display: "block",
              },
              cssNormalTransform = {
                letterSpacing: "0",
                fontWeight: "400",
              };

            function setPositiveNumber(_elem, value, subtract) {
              // Any relative (+/-) values have already been
              // normalized at this point
              var matches = rcssNum.exec(value);
              return matches
                ? // Guard against undefined "subtract", e.g., when used as in cssHooks
                  Math.max(0, matches[2] - (subtract || 0)) +
                    (matches[3] || "px")
                : value;
            }

            function boxModelAdjustment(
              elem,
              dimension,
              box,
              isBorderBox,
              styles,
              computedVal
            ) {
              var i = dimension === "width" ? 1 : 0,
                extra = 0,
                delta = 0;

              // Adjustment may not be necessary
              if (box === (isBorderBox ? "border" : "content")) {
                return 0;
              }

              for (; i < 4; i += 2) {
                // Both box models exclude margin
                if (box === "margin") {
                  delta += jQuery.css(elem, box + cssExpand[i], true, styles);
                }

                // If we get here with a content-box, we're seeking "padding" or "border" or "margin"
                if (!isBorderBox) {
                  // Add padding
                  delta += jQuery.css(
                    elem,
                    "padding" + cssExpand[i],
                    true,
                    styles
                  );

                  // For "border" or "margin", add border
                  if (box !== "padding") {
                    delta += jQuery.css(
                      elem,
                      "border" + cssExpand[i] + "Width",
                      true,
                      styles
                    );

                    // But still keep track of it otherwise
                  } else {
                    extra += jQuery.css(
                      elem,
                      "border" + cssExpand[i] + "Width",
                      true,
                      styles
                    );
                  }

                  // If we get here with a border-box (content + padding + border), we're seeking "content" or
                  // "padding" or "margin"
                } else {
                  // For "content", subtract padding
                  if (box === "content") {
                    delta -= jQuery.css(
                      elem,
                      "padding" + cssExpand[i],
                      true,
                      styles
                    );
                  }

                  // For "content" or "padding", subtract border
                  if (box !== "margin") {
                    delta -= jQuery.css(
                      elem,
                      "border" + cssExpand[i] + "Width",
                      true,
                      styles
                    );
                  }
                }
              }

              // Account for positive content-box scroll gutter when requested by providing computedVal
              if (!isBorderBox && computedVal >= 0) {
                // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
                // Assuming integer scroll gutter, subtract the rest and round down
                delta +=
                  Math.max(
                    0,
                    Math.ceil(
                      elem[
                        "offset" +
                          dimension[0].toUpperCase() +
                          dimension.slice(1)
                      ] -
                        computedVal -
                        delta -
                        extra -
                        0.5

                      // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
                      // Use an explicit zero to avoid NaN (gh-3964)
                    )
                  ) || 0;
              }

              return delta;
            }

            function getWidthOrHeight(elem, dimension, extra) {
              // Start with computed style
              var styles = getStyles(elem),
                // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
                // Fake content-box until we know it's needed to know the true value.
                boxSizingNeeded = !support.boxSizingReliable() || extra,
                isBorderBox =
                  boxSizingNeeded &&
                  jQuery.css(elem, "boxSizing", false, styles) === "border-box",
                valueIsBorderBox = isBorderBox,
                val = curCSS(elem, dimension, styles),
                offsetProp =
                  "offset" + dimension[0].toUpperCase() + dimension.slice(1);

              // Support: Firefox <=54
              // Return a confounding non-pixel value or feign ignorance, as appropriate.
              if (rnumnonpx.test(val)) {
                if (!extra) {
                  return val;
                }
                val = "auto";
              }

              // Support: IE 9 - 11 only
              // Use offsetWidth/offsetHeight for when box sizing is unreliable.
              // In those cases, the computed value can be trusted to be border-box.
              if (
                ((!support.boxSizingReliable() && isBorderBox) ||
                  // Support: IE 10 - 11+, Edge 15 - 18+
                  // IE/Edge misreport `getComputedStyle` of table rows with width/height
                  // set in CSS while `offset*` properties report correct values.
                  // Interestingly, in some cases IE 9 doesn't suffer from this issue.
                  (!support.reliableTrDimensions() && nodeName(elem, "tr")) ||
                  // Fall back to offsetWidth/offsetHeight when value is "auto"
                  // This happens for inline elements with no explicit setting (gh-3571)
                  val === "auto" ||
                  // Support: Android <=4.1 - 4.3 only
                  // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
                  (!parseFloat(val) &&
                    jQuery.css(elem, "display", false, styles) === "inline")) &&
                // Make sure the element is visible & connected
                elem.getClientRects().length
              ) {
                isBorderBox =
                  jQuery.css(elem, "boxSizing", false, styles) === "border-box";

                // Where available, offsetWidth/offsetHeight approximate border box dimensions.
                // Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
                // retrieved value as a content box dimension.
                valueIsBorderBox = offsetProp in elem;
                if (valueIsBorderBox) {
                  val = elem[offsetProp];
                }
              }

              // Normalize "" and auto
              val = parseFloat(val) || 0;

              // Adjust for the element's box model
              return (
                val +
                boxModelAdjustment(
                  elem,
                  dimension,
                  extra || (isBorderBox ? "border" : "content"),
                  valueIsBorderBox,
                  styles,

                  // Provide the current computed size to request scroll gutter calculation (gh-3589)
                  val
                ) +
                "px"
              );
            }

            jQuery.extend({
              // Add in style property hooks for overriding the default
              // behavior of getting and setting a style property
              cssHooks: {
                opacity: {
                  get: function (elem, computed) {
                    if (computed) {
                      // We should always get a number back from opacity
                      var ret = curCSS(elem, "opacity");
                      return ret === "" ? "1" : ret;
                    }
                  },
                },
              },

              // Don't automatically add "px" to these possibly-unitless properties
              cssNumber: {
                animationIterationCount: true,
                columnCount: true,
                fillOpacity: true,
                flexGrow: true,
                flexShrink: true,
                fontWeight: true,
                gridArea: true,
                gridColumn: true,
                gridColumnEnd: true,
                gridColumnStart: true,
                gridRow: true,
                gridRowEnd: true,
                gridRowStart: true,
                lineHeight: true,
                opacity: true,
                order: true,
                orphans: true,
                widows: true,
                zIndex: true,
                zoom: true,
              },

              // Add in properties whose names you wish to fix before
              // setting or getting the value
              cssProps: {},

              // Get and set the style property on a DOM Node
              style: function (elem, name, value, extra) {
                // Don't set styles on text and comment nodes
                if (
                  !elem ||
                  elem.nodeType === 3 ||
                  elem.nodeType === 8 ||
                  !elem.style
                ) {
                  return;
                }

                // Make sure that we're working with the right name
                var ret,
                  type,
                  hooks,
                  origName = camelCase(name),
                  isCustomProp = rcustomProp.test(name),
                  style = elem.style;

                // Make sure that we're working with the right name. We don't
                // want to query the value if it is a CSS custom property
                // since they are user-defined.
                if (!isCustomProp) {
                  name = finalPropName(origName);
                }

                // Gets hook for the prefixed version, then unprefixed version
                hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];

                // Check if we're setting a value
                if (value !== undefined) {
                  type = typeof value;

                  // Convert "+=" or "-=" to relative numbers (#7345)
                  if (
                    type === "string" &&
                    (ret = rcssNum.exec(value)) &&
                    ret[1]
                  ) {
                    value = adjustCSS(elem, name, ret);

                    // Fixes bug #9237
                    type = "number";
                  }

                  // Make sure that null and NaN values aren't set (#7116)
                  if (value == null || value !== value) {
                    return;
                  }

                  // If a number was passed in, add the unit (except for certain CSS properties)
                  // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
                  // "px" to a few hardcoded values.
                  if (type === "number" && !isCustomProp) {
                    value +=
                      (ret && ret[3]) ||
                      (jQuery.cssNumber[origName] ? "" : "px");
                  }

                  // background-* props affect original clone's values
                  if (
                    !support.clearCloneStyle &&
                    value === "" &&
                    name.indexOf("background") === 0
                  ) {
                    style[name] = "inherit";
                  }

                  // If a hook was provided, use that value, otherwise just set the specified value
                  if (
                    !hooks ||
                    !("set" in hooks) ||
                    (value = hooks.set(elem, value, extra)) !== undefined
                  ) {
                    if (isCustomProp) {
                      style.setProperty(name, value);
                    } else {
                      style[name] = value;
                    }
                  }
                } else {
                  // If a hook was provided get the non-computed value from there
                  if (
                    hooks &&
                    "get" in hooks &&
                    (ret = hooks.get(elem, false, extra)) !== undefined
                  ) {
                    return ret;
                  }

                  // Otherwise just get the value from the style object
                  return style[name];
                }
              },

              css: function (elem, name, extra, styles) {
                var val,
                  num,
                  hooks,
                  origName = camelCase(name),
                  isCustomProp = rcustomProp.test(name);

                // Make sure that we're working with the right name. We don't
                // want to modify the value if it is a CSS custom property
                // since they are user-defined.
                if (!isCustomProp) {
                  name = finalPropName(origName);
                }

                // Try prefixed name followed by the unprefixed name
                hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];

                // If a hook was provided get the computed value from there
                if (hooks && "get" in hooks) {
                  val = hooks.get(elem, true, extra);
                }

                // Otherwise, if a way to get the computed value exists, use that
                if (val === undefined) {
                  val = curCSS(elem, name, styles);
                }

                // Convert "normal" to computed value
                if (val === "normal" && name in cssNormalTransform) {
                  val = cssNormalTransform[name];
                }

                // Make numeric if forced or a qualifier was provided and val looks numeric
                if (extra === "" || extra) {
                  num = parseFloat(val);
                  return extra === true || isFinite(num) ? num || 0 : val;
                }

                return val;
              },
            });

            jQuery.each(["height", "width"], function (_i, dimension) {
              jQuery.cssHooks[dimension] = {
                get: function (elem, computed, extra) {
                  if (computed) {
                    // Certain elements can have dimension info if we invisibly show them
                    // but it must have a current display style that would benefit
                    return rdisplayswap.test(jQuery.css(elem, "display")) &&
                      // Support: Safari 8+
                      // Table columns in Safari have non-zero offsetWidth & zero
                      // getBoundingClientRect().width unless display is changed.
                      // Support: IE <=11 only
                      // Running getBoundingClientRect on a disconnected node
                      // in IE throws an error.
                      (!elem.getClientRects().length ||
                        !elem.getBoundingClientRect().width)
                      ? swap(elem, cssShow, function () {
                          return getWidthOrHeight(elem, dimension, extra);
                        })
                      : getWidthOrHeight(elem, dimension, extra);
                  }
                },

                set: function (elem, value, extra) {
                  var matches,
                    styles = getStyles(elem),
                    // Only read styles.position if the test has a chance to fail
                    // to avoid forcing a reflow.
                    scrollboxSizeBuggy =
                      !support.scrollboxSize() &&
                      styles.position === "absolute",
                    // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
                    boxSizingNeeded = scrollboxSizeBuggy || extra,
                    isBorderBox =
                      boxSizingNeeded &&
                      jQuery.css(elem, "boxSizing", false, styles) ===
                        "border-box",
                    subtract = extra
                      ? boxModelAdjustment(
                          elem,
                          dimension,
                          extra,
                          isBorderBox,
                          styles
                        )
                      : 0;

                  // Account for unreliable border-box dimensions by comparing offset* to computed and
                  // faking a content-box to get border and padding (gh-3699)
                  if (isBorderBox && scrollboxSizeBuggy) {
                    subtract -= Math.ceil(
                      elem[
                        "offset" +
                          dimension[0].toUpperCase() +
                          dimension.slice(1)
                      ] -
                        parseFloat(styles[dimension]) -
                        boxModelAdjustment(
                          elem,
                          dimension,
                          "border",
                          false,
                          styles
                        ) -
                        0.5
                    );
                  }

                  // Convert to pixels if value adjustment is needed
                  if (
                    subtract &&
                    (matches = rcssNum.exec(value)) &&
                    (matches[3] || "px") !== "px"
                  ) {
                    elem.style[dimension] = value;
                    value = jQuery.css(elem, dimension);
                  }

                  return setPositiveNumber(elem, value, subtract);
                },
              };
            });

            jQuery.cssHooks.marginLeft = addGetHookIf(
              support.reliableMarginLeft,
              function (elem, computed) {
                if (computed) {
                  return (
                    (parseFloat(curCSS(elem, "marginLeft")) ||
                      elem.getBoundingClientRect().left -
                        swap(elem, { marginLeft: 0 }, function () {
                          return elem.getBoundingClientRect().left;
                        })) + "px"
                  );
                }
              }
            );

            // These hooks are used by animate to expand properties
            jQuery.each(
              {
                margin: "",
                padding: "",
                border: "Width",
              },
              function (prefix, suffix) {
                jQuery.cssHooks[prefix + suffix] = {
                  expand: function (value) {
                    var i = 0,
                      expanded = {},
                      // Assumes a single number if not a string
                      parts =
                        typeof value === "string" ? value.split(" ") : [value];

                    for (; i < 4; i++) {
                      expanded[prefix + cssExpand[i] + suffix] =
                        parts[i] || parts[i - 2] || parts[0];
                    }

                    return expanded;
                  },
                };

                if (prefix !== "margin") {
                  jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
                }
              }
            );

            jQuery.fn.extend({
              css: function (name, value) {
                return access(
                  this,
                  function (elem, name, value) {
                    var styles,
                      len,
                      map = {},
                      i = 0;

                    if (Array.isArray(name)) {
                      styles = getStyles(elem);
                      len = name.length;

                      for (; i < len; i++) {
                        map[name[i]] = jQuery.css(elem, name[i], false, styles);
                      }

                      return map;
                    }

                    return value !== undefined
                      ? jQuery.style(elem, name, value)
                      : jQuery.css(elem, name);
                  },
                  name,
                  value,
                  arguments.length > 1
                );
              },
            });

            function Tween(elem, options, prop, end, easing) {
              return new Tween.prototype.init(elem, options, prop, end, easing);
            }
            jQuery.Tween = Tween;

            Tween.prototype = {
              constructor: Tween,
              init: function (elem, options, prop, end, easing, unit) {
                this.elem = elem;
                this.prop = prop;
                this.easing = easing || jQuery.easing._default;
                this.options = options;
                this.start = this.now = this.cur();
                this.end = end;
                this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
              },
              cur: function () {
                var hooks = Tween.propHooks[this.prop];

                return hooks && hooks.get
                  ? hooks.get(this)
                  : Tween.propHooks._default.get(this);
              },
              run: function (percent) {
                var eased,
                  hooks = Tween.propHooks[this.prop];

                if (this.options.duration) {
                  this.pos = eased = jQuery.easing[this.easing](
                    percent,
                    this.options.duration * percent,
                    0,
                    1,
                    this.options.duration
                  );
                } else {
                  this.pos = eased = percent;
                }
                this.now = (this.end - this.start) * eased + this.start;

                if (this.options.step) {
                  this.options.step.call(this.elem, this.now, this);
                }

                if (hooks && hooks.set) {
                  hooks.set(this);
                } else {
                  Tween.propHooks._default.set(this);
                }
                return this;
              },
            };

            Tween.prototype.init.prototype = Tween.prototype;

            Tween.propHooks = {
              _default: {
                get: function (tween) {
                  var result;

                  // Use a property on the element directly when it is not a DOM element,
                  // or when there is no matching style property that exists.
                  if (
                    tween.elem.nodeType !== 1 ||
                    (tween.elem[tween.prop] != null &&
                      tween.elem.style[tween.prop] == null)
                  ) {
                    return tween.elem[tween.prop];
                  }

                  // Passing an empty string as a 3rd parameter to .css will automatically
                  // attempt a parseFloat and fallback to a string if the parse fails.
                  // Simple values such as "10px" are parsed to Float;
                  // complex values such as "rotate(1rad)" are returned as-is.
                  result = jQuery.css(tween.elem, tween.prop, "");

                  // Empty strings, null, undefined and "auto" are converted to 0.
                  return !result || result === "auto" ? 0 : result;
                },
                set: function (tween) {
                  // Use step hook for back compat.
                  // Use cssHook if its there.
                  // Use .style if available and use plain properties where available.
                  if (jQuery.fx.step[tween.prop]) {
                    jQuery.fx.step[tween.prop](tween);
                  } else if (
                    tween.elem.nodeType === 1 &&
                    (jQuery.cssHooks[tween.prop] ||
                      tween.elem.style[finalPropName(tween.prop)] != null)
                  ) {
                    jQuery.style(
                      tween.elem,
                      tween.prop,
                      tween.now + tween.unit
                    );
                  } else {
                    tween.elem[tween.prop] = tween.now;
                  }
                },
              },
            };

            // Support: IE <=9 only
            // Panic based approach to setting things on disconnected nodes
            Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
              set: function (tween) {
                if (tween.elem.nodeType && tween.elem.parentNode) {
                  tween.elem[tween.prop] = tween.now;
                }
              },
            };

            jQuery.easing = {
              linear: function (p) {
                return p;
              },
              swing: function (p) {
                return 0.5 - Math.cos(p * Math.PI) / 2;
              },
              _default: "swing",
            };

            jQuery.fx = Tween.prototype.init;

            // Back compat <1.8 extension point
            jQuery.fx.step = {};

            var fxNow,
              inProgress,
              rfxtypes = /^(?:toggle|show|hide)$/,
              rrun = /queueHooks$/;

            function schedule() {
              if (inProgress) {
                if (document.hidden === false && window.requestAnimationFrame) {
                  window.requestAnimationFrame(schedule);
                } else {
                  window.setTimeout(schedule, jQuery.fx.interval);
                }

                jQuery.fx.tick();
              }
            }

            // Animations created synchronously will run synchronously
            function createFxNow() {
              window.setTimeout(function () {
                fxNow = undefined;
              });
              return (fxNow = Date.now());
            }

            // Generate parameters to create a standard animation
            function genFx(type, includeWidth) {
              var which,
                i = 0,
                attrs = { height: type };

              // If we include width, step value is 1 to do all cssExpand values,
              // otherwise step value is 2 to skip over Left and Right
              includeWidth = includeWidth ? 1 : 0;
              for (; i < 4; i += 2 - includeWidth) {
                which = cssExpand[i];
                attrs["margin" + which] = attrs["padding" + which] = type;
              }

              if (includeWidth) {
                attrs.opacity = attrs.width = type;
              }

              return attrs;
            }

            function createTween(value, prop, animation) {
              var tween,
                collection = (Animation.tweeners[prop] || []).concat(
                  Animation.tweeners["*"]
                ),
                index = 0,
                length = collection.length;
              for (; index < length; index++) {
                if ((tween = collection[index].call(animation, prop, value))) {
                  // We're done with this property
                  return tween;
                }
              }
            }

            function defaultPrefilter(elem, props, opts) {
              var prop,
                value,
                toggle,
                hooks,
                oldfire,
                propTween,
                restoreDisplay,
                display,
                isBox = "width" in props || "height" in props,
                anim = this,
                orig = {},
                style = elem.style,
                hidden = elem.nodeType && isHiddenWithinTree(elem),
                dataShow = dataPriv.get(elem, "fxshow");

              // Queue-skipping animations hijack the fx hooks
              if (!opts.queue) {
                hooks = jQuery._queueHooks(elem, "fx");
                if (hooks.unqueued == null) {
                  hooks.unqueued = 0;
                  oldfire = hooks.empty.fire;
                  hooks.empty.fire = function () {
                    if (!hooks.unqueued) {
                      oldfire();
                    }
                  };
                }
                hooks.unqueued++;

                anim.always(function () {
                  // Ensure the complete handler is called before this completes
                  anim.always(function () {
                    hooks.unqueued--;
                    if (!jQuery.queue(elem, "fx").length) {
                      hooks.empty.fire();
                    }
                  });
                });
              }

              // Detect show/hide animations
              for (prop in props) {
                value = props[prop];
                if (rfxtypes.test(value)) {
                  delete props[prop];
                  toggle = toggle || value === "toggle";
                  if (value === (hidden ? "hide" : "show")) {
                    // Pretend to be hidden if this is a "show" and
                    // there is still data from a stopped show/hide
                    if (
                      value === "show" &&
                      dataShow &&
                      dataShow[prop] !== undefined
                    ) {
                      hidden = true;

                      // Ignore all other no-op show/hide data
                    } else {
                      continue;
                    }
                  }
                  orig[prop] =
                    (dataShow && dataShow[prop]) || jQuery.style(elem, prop);
                }
              }

              // Bail out if this is a no-op like .hide().hide()
              propTween = !jQuery.isEmptyObject(props);
              if (!propTween && jQuery.isEmptyObject(orig)) {
                return;
              }

              // Restrict "overflow" and "display" styles during box animations
              if (isBox && elem.nodeType === 1) {
                // Support: IE <=9 - 11, Edge 12 - 15
                // Record all 3 overflow attributes because IE does not infer the shorthand
                // from identically-valued overflowX and overflowY and Edge just mirrors
                // the overflowX value there.
                opts.overflow = [
                  style.overflow,
                  style.overflowX,
                  style.overflowY,
                ];

                // Identify a display type, preferring old show/hide data over the CSS cascade
                restoreDisplay = dataShow && dataShow.display;
                if (restoreDisplay == null) {
                  restoreDisplay = dataPriv.get(elem, "display");
                }
                display = jQuery.css(elem, "display");
                if (display === "none") {
                  if (restoreDisplay) {
                    display = restoreDisplay;
                  } else {
                    // Get nonempty value(s) by temporarily forcing visibility
                    showHide([elem], true);
                    restoreDisplay = elem.style.display || restoreDisplay;
                    display = jQuery.css(elem, "display");
                    showHide([elem]);
                  }
                }

                // Animate inline elements as inline-block
                if (
                  display === "inline" ||
                  (display === "inline-block" && restoreDisplay != null)
                ) {
                  if (jQuery.css(elem, "float") === "none") {
                    // Restore the original display value at the end of pure show/hide animations
                    if (!propTween) {
                      anim.done(function () {
                        style.display = restoreDisplay;
                      });
                      if (restoreDisplay == null) {
                        display = style.display;
                        restoreDisplay = display === "none" ? "" : display;
                      }
                    }
                    style.display = "inline-block";
                  }
                }
              }

              if (opts.overflow) {
                style.overflow = "hidden";
                anim.always(function () {
                  style.overflow = opts.overflow[0];
                  style.overflowX = opts.overflow[1];
                  style.overflowY = opts.overflow[2];
                });
              }

              // Implement show/hide animations
              propTween = false;
              for (prop in orig) {
                // General show/hide setup for this element animation
                if (!propTween) {
                  if (dataShow) {
                    if ("hidden" in dataShow) {
                      hidden = dataShow.hidden;
                    }
                  } else {
                    dataShow = dataPriv.access(elem, "fxshow", {
                      display: restoreDisplay,
                    });
                  }

                  // Store hidden/visible for toggle so `.stop().toggle()` "reverses"
                  if (toggle) {
                    dataShow.hidden = !hidden;
                  }

                  // Show elements before animating them
                  if (hidden) {
                    showHide([elem], true);
                  }

                  /* eslint-disable no-loop-func */

                  anim.done(function () {
                    /* eslint-enable no-loop-func */

                    // The final step of a "hide" animation is actually hiding the element
                    if (!hidden) {
                      showHide([elem]);
                    }
                    dataPriv.remove(elem, "fxshow");
                    for (prop in orig) {
                      jQuery.style(elem, prop, orig[prop]);
                    }
                  });
                }

                // Per-property setup
                propTween = createTween(
                  hidden ? dataShow[prop] : 0,
                  prop,
                  anim
                );
                if (!(prop in dataShow)) {
                  dataShow[prop] = propTween.start;
                  if (hidden) {
                    propTween.end = propTween.start;
                    propTween.start = 0;
                  }
                }
              }
            }

            function propFilter(props, specialEasing) {
              var index, name, easing, value, hooks;

              // camelCase, specialEasing and expand cssHook pass
              for (index in props) {
                name = camelCase(index);
                easing = specialEasing[name];
                value = props[index];
                if (Array.isArray(value)) {
                  easing = value[1];
                  value = props[index] = value[0];
                }

                if (index !== name) {
                  props[name] = value;
                  delete props[index];
                }

                hooks = jQuery.cssHooks[name];
                if (hooks && "expand" in hooks) {
                  value = hooks.expand(value);
                  delete props[name];

                  // Not quite $.extend, this won't overwrite existing keys.
                  // Reusing 'index' because we have the correct "name"
                  for (index in value) {
                    if (!(index in props)) {
                      props[index] = value[index];
                      specialEasing[index] = easing;
                    }
                  }
                } else {
                  specialEasing[name] = easing;
                }
              }
            }

            function Animation(elem, properties, options) {
              var result,
                stopped,
                index = 0,
                length = Animation.prefilters.length,
                deferred = jQuery.Deferred().always(function () {
                  // Don't match elem in the :animated selector
                  delete tick.elem;
                }),
                tick = function () {
                  if (stopped) {
                    return false;
                  }
                  var currentTime = fxNow || createFxNow(),
                    remaining = Math.max(
                      0,
                      animation.startTime + animation.duration - currentTime
                    ),
                    // Support: Android 2.3 only
                    // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
                    temp = remaining / animation.duration || 0,
                    percent = 1 - temp,
                    index = 0,
                    length = animation.tweens.length;

                  for (; index < length; index++) {
                    animation.tweens[index].run(percent);
                  }

                  deferred.notifyWith(elem, [animation, percent, remaining]);

                  // If there's more to do, yield
                  if (percent < 1 && length) {
                    return remaining;
                  }

                  // If this was an empty animation, synthesize a final progress notification
                  if (!length) {
                    deferred.notifyWith(elem, [animation, 1, 0]);
                  }

                  // Resolve the animation and report its conclusion
                  deferred.resolveWith(elem, [animation]);
                  return false;
                },
                animation = deferred.promise({
                  elem: elem,
                  props: jQuery.extend({}, properties),
                  opts: jQuery.extend(
                    true,
                    {
                      specialEasing: {},
                      easing: jQuery.easing._default,
                    },
                    options
                  ),
                  originalProperties: properties,
                  originalOptions: options,
                  startTime: fxNow || createFxNow(),
                  duration: options.duration,
                  tweens: [],
                  createTween: function (prop, end) {
                    var tween = jQuery.Tween(
                      elem,
                      animation.opts,
                      prop,
                      end,
                      animation.opts.specialEasing[prop] ||
                        animation.opts.easing
                    );
                    animation.tweens.push(tween);
                    return tween;
                  },
                  stop: function (gotoEnd) {
                    var index = 0,
                      // If we are going to the end, we want to run all the tweens
                      // otherwise we skip this part
                      length = gotoEnd ? animation.tweens.length : 0;
                    if (stopped) {
                      return this;
                    }
                    stopped = true;
                    for (; index < length; index++) {
                      animation.tweens[index].run(1);
                    }

                    // Resolve when we played the last frame; otherwise, reject
                    if (gotoEnd) {
                      deferred.notifyWith(elem, [animation, 1, 0]);
                      deferred.resolveWith(elem, [animation, gotoEnd]);
                    } else {
                      deferred.rejectWith(elem, [animation, gotoEnd]);
                    }
                    return this;
                  },
                }),
                props = animation.props;

              propFilter(props, animation.opts.specialEasing);

              for (; index < length; index++) {
                result = Animation.prefilters[index].call(
                  animation,
                  elem,
                  props,
                  animation.opts
                );
                if (result) {
                  if (isFunction(result.stop)) {
                    jQuery._queueHooks(
                      animation.elem,
                      animation.opts.queue
                    ).stop = result.stop.bind(result);
                  }
                  return result;
                }
              }

              jQuery.map(props, createTween, animation);

              if (isFunction(animation.opts.start)) {
                animation.opts.start.call(elem, animation);
              }

              // Attach callbacks from options
              animation
                .progress(animation.opts.progress)
                .done(animation.opts.done, animation.opts.complete)
                .fail(animation.opts.fail)
                .always(animation.opts.always);

              jQuery.fx.timer(
                jQuery.extend(tick, {
                  elem: elem,
                  anim: animation,
                  queue: animation.opts.queue,
                })
              );

              return animation;
            }

            jQuery.Animation = jQuery.extend(Animation, {
              tweeners: {
                "*": [
                  function (prop, value) {
                    var tween = this.createTween(prop, value);
                    adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
                    return tween;
                  },
                ],
              },

              tweener: function (props, callback) {
                if (isFunction(props)) {
                  callback = props;
                  props = ["*"];
                } else {
                  props = props.match(rnothtmlwhite);
                }

                var prop,
                  index = 0,
                  length = props.length;

                for (; index < length; index++) {
                  prop = props[index];
                  Animation.tweeners[prop] = Animation.tweeners[prop] || [];
                  Animation.tweeners[prop].unshift(callback);
                }
              },

              prefilters: [defaultPrefilter],

              prefilter: function (callback, prepend) {
                if (prepend) {
                  Animation.prefilters.unshift(callback);
                } else {
                  Animation.prefilters.push(callback);
                }
              },
            });

            jQuery.speed = function (speed, easing, fn) {
              var opt =
                speed && typeof speed === "object"
                  ? jQuery.extend({}, speed)
                  : {
                      complete:
                        fn || (!fn && easing) || (isFunction(speed) && speed),
                      duration: speed,
                      easing:
                        (fn && easing) ||
                        (easing && !isFunction(easing) && easing),
                    };

              // Go to the end state if fx are off
              if (jQuery.fx.off) {
                opt.duration = 0;
              } else {
                if (typeof opt.duration !== "number") {
                  if (opt.duration in jQuery.fx.speeds) {
                    opt.duration = jQuery.fx.speeds[opt.duration];
                  } else {
                    opt.duration = jQuery.fx.speeds._default;
                  }
                }
              }

              // Normalize opt.queue - true/undefined/null -> "fx"
              if (opt.queue == null || opt.queue === true) {
                opt.queue = "fx";
              }

              // Queueing
              opt.old = opt.complete;

              opt.complete = function () {
                if (isFunction(opt.old)) {
                  opt.old.call(this);
                }

                if (opt.queue) {
                  jQuery.dequeue(this, opt.queue);
                }
              };

              return opt;
            };

            jQuery.fn.extend({
              fadeTo: function (speed, to, easing, callback) {
                // Show any hidden elements after setting opacity to 0
                return (
                  this.filter(isHiddenWithinTree)
                    .css("opacity", 0)
                    .show()

                    // Animate to the value specified
                    .end()
                    .animate({ opacity: to }, speed, easing, callback)
                );
              },
              animate: function (prop, speed, easing, callback) {
                var empty = jQuery.isEmptyObject(prop),
                  optall = jQuery.speed(speed, easing, callback),
                  doAnimation = function () {
                    // Operate on a copy of prop so per-property easing won't be lost
                    var anim = Animation(this, jQuery.extend({}, prop), optall);

                    // Empty animations, or finishing resolves immediately
                    if (empty || dataPriv.get(this, "finish")) {
                      anim.stop(true);
                    }
                  };

                doAnimation.finish = doAnimation;

                return empty || optall.queue === false
                  ? this.each(doAnimation)
                  : this.queue(optall.queue, doAnimation);
              },
              stop: function (type, clearQueue, gotoEnd) {
                var stopQueue = function (hooks) {
                  var stop = hooks.stop;
                  delete hooks.stop;
                  stop(gotoEnd);
                };

                if (typeof type !== "string") {
                  gotoEnd = clearQueue;
                  clearQueue = type;
                  type = undefined;
                }
                if (clearQueue) {
                  this.queue(type || "fx", []);
                }

                return this.each(function () {
                  var dequeue = true,
                    index = type != null && type + "queueHooks",
                    timers = jQuery.timers,
                    data = dataPriv.get(this);

                  if (index) {
                    if (data[index] && data[index].stop) {
                      stopQueue(data[index]);
                    }
                  } else {
                    for (index in data) {
                      if (data[index] && data[index].stop && rrun.test(index)) {
                        stopQueue(data[index]);
                      }
                    }
                  }

                  for (index = timers.length; index--; ) {
                    if (
                      timers[index].elem === this &&
                      (type == null || timers[index].queue === type)
                    ) {
                      timers[index].anim.stop(gotoEnd);
                      dequeue = false;
                      timers.splice(index, 1);
                    }
                  }

                  // Start the next in the queue if the last step wasn't forced.
                  // Timers currently will call their complete callbacks, which
                  // will dequeue but only if they were gotoEnd.
                  if (dequeue || !gotoEnd) {
                    jQuery.dequeue(this, type);
                  }
                });
              },
              finish: function (type) {
                if (type !== false) {
                  type = type || "fx";
                }
                return this.each(function () {
                  var index,
                    data = dataPriv.get(this),
                    queue = data[type + "queue"],
                    hooks = data[type + "queueHooks"],
                    timers = jQuery.timers,
                    length = queue ? queue.length : 0;

                  // Enable finishing flag on private data
                  data.finish = true;

                  // Empty the queue first
                  jQuery.queue(this, type, []);

                  if (hooks && hooks.stop) {
                    hooks.stop.call(this, true);
                  }

                  // Look for any active animations, and finish them
                  for (index = timers.length; index--; ) {
                    if (
                      timers[index].elem === this &&
                      timers[index].queue === type
                    ) {
                      timers[index].anim.stop(true);
                      timers.splice(index, 1);
                    }
                  }

                  // Look for any animations in the old queue and finish them
                  for (index = 0; index < length; index++) {
                    if (queue[index] && queue[index].finish) {
                      queue[index].finish.call(this);
                    }
                  }

                  // Turn off finishing flag
                  delete data.finish;
                });
              },
            });

            jQuery.each(["toggle", "show", "hide"], function (_i, name) {
              var cssFn = jQuery.fn[name];
              jQuery.fn[name] = function (speed, easing, callback) {
                return speed == null || typeof speed === "boolean"
                  ? cssFn.apply(this, arguments)
                  : this.animate(genFx(name, true), speed, easing, callback);
              };
            });

            // Generate shortcuts for custom animations
            jQuery.each(
              {
                slideDown: genFx("show"),
                slideUp: genFx("hide"),
                slideToggle: genFx("toggle"),
                fadeIn: { opacity: "show" },
                fadeOut: { opacity: "hide" },
                fadeToggle: { opacity: "toggle" },
              },
              function (name, props) {
                jQuery.fn[name] = function (speed, easing, callback) {
                  return this.animate(props, speed, easing, callback);
                };
              }
            );

            jQuery.timers = [];
            jQuery.fx.tick = function () {
              var timer,
                i = 0,
                timers = jQuery.timers;

              fxNow = Date.now();

              for (; i < timers.length; i++) {
                timer = timers[i];

                // Run the timer and safely remove it when done (allowing for external removal)
                if (!timer() && timers[i] === timer) {
                  timers.splice(i--, 1);
                }
              }

              if (!timers.length) {
                jQuery.fx.stop();
              }
              fxNow = undefined;
            };

            jQuery.fx.timer = function (timer) {
              jQuery.timers.push(timer);
              jQuery.fx.start();
            };

            jQuery.fx.interval = 13;
            jQuery.fx.start = function () {
              if (inProgress) {
                return;
              }

              inProgress = true;
              schedule();
            };

            jQuery.fx.stop = function () {
              inProgress = null;
            };

            jQuery.fx.speeds = {
              slow: 600,
              fast: 200,

              // Default speed
              _default: 400,
            };

            // Based off of the plugin by Clint Helfers, with permission.
            // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
            jQuery.fn.delay = function (time, type) {
              time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
              type = type || "fx";

              return this.queue(type, function (next, hooks) {
                var timeout = window.setTimeout(next, time);
                hooks.stop = function () {
                  window.clearTimeout(timeout);
                };
              });
            };

            (function () {
              var input = document.createElement("input"),
                select = document.createElement("select"),
                opt = select.appendChild(document.createElement("option"));

              input.type = "checkbox";

              // Support: Android <=4.3 only
              // Default value for a checkbox should be "on"
              support.checkOn = input.value !== "";

              // Support: IE <=11 only
              // Must access selectedIndex to make default options select
              support.optSelected = opt.selected;

              // Support: IE <=11 only
              // An input loses its value after becoming a radio
              input = document.createElement("input");
              input.value = "t";
              input.type = "radio";
              support.radioValue = input.value === "t";
            })();

            var boolHook,
              attrHandle = jQuery.expr.attrHandle;

            jQuery.fn.extend({
              attr: function (name, value) {
                return access(
                  this,
                  jQuery.attr,
                  name,
                  value,
                  arguments.length > 1
                );
              },

              removeAttr: function (name) {
                return this.each(function () {
                  jQuery.removeAttr(this, name);
                });
              },
            });

            jQuery.extend({
              attr: function (elem, name, value) {
                var ret,
                  hooks,
                  nType = elem.nodeType;

                // Don't get/set attributes on text, comment and attribute nodes
                if (nType === 3 || nType === 8 || nType === 2) {
                  return;
                }

                // Fallback to prop when attributes are not supported
                if (typeof elem.getAttribute === "undefined") {
                  return jQuery.prop(elem, name, value);
                }

                // Attribute hooks are determined by the lowercase version
                // Grab necessary hook if one is defined
                if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
                  hooks =
                    jQuery.attrHooks[name.toLowerCase()] ||
                    (jQuery.expr.match.bool.test(name) ? boolHook : undefined);
                }

                if (value !== undefined) {
                  if (value === null) {
                    jQuery.removeAttr(elem, name);
                    return;
                  }

                  if (
                    hooks &&
                    "set" in hooks &&
                    (ret = hooks.set(elem, value, name)) !== undefined
                  ) {
                    return ret;
                  }

                  elem.setAttribute(name, value + "");
                  return value;
                }

                if (
                  hooks &&
                  "get" in hooks &&
                  (ret = hooks.get(elem, name)) !== null
                ) {
                  return ret;
                }

                ret = jQuery.find.attr(elem, name);

                // Non-existent attributes return null, we normalize to undefined
                return ret == null ? undefined : ret;
              },

              attrHooks: {
                type: {
                  set: function (elem, value) {
                    if (
                      !support.radioValue &&
                      value === "radio" &&
                      nodeName(elem, "input")
                    ) {
                      var val = elem.value;
                      elem.setAttribute("type", value);
                      if (val) {
                        elem.value = val;
                      }
                      return value;
                    }
                  },
                },
              },

              removeAttr: function (elem, value) {
                var name,
                  i = 0,
                  // Attribute names can contain non-HTML whitespace characters
                  // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
                  attrNames = value && value.match(rnothtmlwhite);

                if (attrNames && elem.nodeType === 1) {
                  while ((name = attrNames[i++])) {
                    elem.removeAttribute(name);
                  }
                }
              },
            });

            // Hooks for boolean attributes
            boolHook = {
              set: function (elem, value, name) {
                if (value === false) {
                  // Remove boolean attributes when set to false
                  jQuery.removeAttr(elem, name);
                } else {
                  elem.setAttribute(name, name);
                }
                return name;
              },
            };

            jQuery.each(
              jQuery.expr.match.bool.source.match(/\w+/g),
              function (_i, name) {
                var getter = attrHandle[name] || jQuery.find.attr;

                attrHandle[name] = function (elem, name, isXML) {
                  var ret,
                    handle,
                    lowercaseName = name.toLowerCase();

                  if (!isXML) {
                    // Avoid an infinite loop by temporarily removing this function from the getter
                    handle = attrHandle[lowercaseName];
                    attrHandle[lowercaseName] = ret;
                    ret =
                      getter(elem, name, isXML) != null ? lowercaseName : null;
                    attrHandle[lowercaseName] = handle;
                  }
                  return ret;
                };
              }
            );

            var rfocusable = /^(?:input|select|textarea|button)$/i,
              rclickable = /^(?:a|area)$/i;

            jQuery.fn.extend({
              prop: function (name, value) {
                return access(
                  this,
                  jQuery.prop,
                  name,
                  value,
                  arguments.length > 1
                );
              },

              removeProp: function (name) {
                return this.each(function () {
                  delete this[jQuery.propFix[name] || name];
                });
              },
            });

            jQuery.extend({
              prop: function (elem, name, value) {
                var ret,
                  hooks,
                  nType = elem.nodeType;

                // Don't get/set properties on text, comment and attribute nodes
                if (nType === 3 || nType === 8 || nType === 2) {
                  return;
                }

                if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
                  // Fix name and attach hooks
                  name = jQuery.propFix[name] || name;
                  hooks = jQuery.propHooks[name];
                }

                if (value !== undefined) {
                  if (
                    hooks &&
                    "set" in hooks &&
                    (ret = hooks.set(elem, value, name)) !== undefined
                  ) {
                    return ret;
                  }

                  return (elem[name] = value);
                }

                if (
                  hooks &&
                  "get" in hooks &&
                  (ret = hooks.get(elem, name)) !== null
                ) {
                  return ret;
                }

                return elem[name];
              },

              propHooks: {
                tabIndex: {
                  get: function (elem) {
                    // Support: IE <=9 - 11 only
                    // elem.tabIndex doesn't always return the
                    // correct value when it hasn't been explicitly set
                    // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
                    // Use proper attribute retrieval(#12072)
                    var tabindex = jQuery.find.attr(elem, "tabindex");

                    if (tabindex) {
                      return parseInt(tabindex, 10);
                    }

                    if (
                      rfocusable.test(elem.nodeName) ||
                      (rclickable.test(elem.nodeName) && elem.href)
                    ) {
                      return 0;
                    }

                    return -1;
                  },
                },
              },

              propFix: {
                for: "htmlFor",
                class: "className",
              },
            });

            // Support: IE <=11 only
            // Accessing the selectedIndex property
            // forces the browser to respect setting selected
            // on the option
            // The getter ensures a default option is selected
            // when in an optgroup
            // eslint rule "no-unused-expressions" is disabled for this code
            // since it considers such accessions noop
            if (!support.optSelected) {
              jQuery.propHooks.selected = {
                get: function (elem) {
                  /* eslint no-unused-expressions: "off" */

                  var parent = elem.parentNode;
                  if (parent && parent.parentNode) {
                    parent.parentNode.selectedIndex;
                  }
                  return null;
                },
                set: function (elem) {
                  /* eslint no-unused-expressions: "off" */

                  var parent = elem.parentNode;
                  if (parent) {
                    parent.selectedIndex;

                    if (parent.parentNode) {
                      parent.parentNode.selectedIndex;
                    }
                  }
                },
              };
            }

            jQuery.each(
              [
                "tabIndex",
                "readOnly",
                "maxLength",
                "cellSpacing",
                "cellPadding",
                "rowSpan",
                "colSpan",
                "useMap",
                "frameBorder",
                "contentEditable",
              ],
              function () {
                jQuery.propFix[this.toLowerCase()] = this;
              }
            );

            // Strip and collapse whitespace according to HTML spec
            // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
            function stripAndCollapse(value) {
              var tokens = value.match(rnothtmlwhite) || [];
              return tokens.join(" ");
            }

            function getClass(elem) {
              return (elem.getAttribute && elem.getAttribute("class")) || "";
            }

            function classesToArray(value) {
              if (Array.isArray(value)) {
                return value;
              }
              if (typeof value === "string") {
                return value.match(rnothtmlwhite) || [];
              }
              return [];
            }

            jQuery.fn.extend({
              addClass: function (value) {
                var classes,
                  elem,
                  cur,
                  curValue,
                  clazz,
                  j,
                  finalValue,
                  i = 0;

                if (isFunction(value)) {
                  return this.each(function (j) {
                    jQuery(this).addClass(value.call(this, j, getClass(this)));
                  });
                }

                classes = classesToArray(value);

                if (classes.length) {
                  while ((elem = this[i++])) {
                    curValue = getClass(elem);
                    cur =
                      elem.nodeType === 1 &&
                      " " + stripAndCollapse(curValue) + " ";

                    if (cur) {
                      j = 0;
                      while ((clazz = classes[j++])) {
                        if (cur.indexOf(" " + clazz + " ") < 0) {
                          cur += clazz + " ";
                        }
                      }

                      // Only assign if different to avoid unneeded rendering.
                      finalValue = stripAndCollapse(cur);
                      if (curValue !== finalValue) {
                        elem.setAttribute("class", finalValue);
                      }
                    }
                  }
                }

                return this;
              },

              removeClass: function (value) {
                var classes,
                  elem,
                  cur,
                  curValue,
                  clazz,
                  j,
                  finalValue,
                  i = 0;

                if (isFunction(value)) {
                  return this.each(function (j) {
                    jQuery(this).removeClass(
                      value.call(this, j, getClass(this))
                    );
                  });
                }

                if (!arguments.length) {
                  return this.attr("class", "");
                }

                classes = classesToArray(value);

                if (classes.length) {
                  while ((elem = this[i++])) {
                    curValue = getClass(elem);

                    // This expression is here for better compressibility (see addClass)
                    cur =
                      elem.nodeType === 1 &&
                      " " + stripAndCollapse(curValue) + " ";

                    if (cur) {
                      j = 0;
                      while ((clazz = classes[j++])) {
                        // Remove *all* instances
                        while (cur.indexOf(" " + clazz + " ") > -1) {
                          cur = cur.replace(" " + clazz + " ", " ");
                        }
                      }

                      // Only assign if different to avoid unneeded rendering.
                      finalValue = stripAndCollapse(cur);
                      if (curValue !== finalValue) {
                        elem.setAttribute("class", finalValue);
                      }
                    }
                  }
                }

                return this;
              },

              toggleClass: function (value, stateVal) {
                var type = typeof value,
                  isValidValue = type === "string" || Array.isArray(value);

                if (typeof stateVal === "boolean" && isValidValue) {
                  return stateVal
                    ? this.addClass(value)
                    : this.removeClass(value);
                }

                if (isFunction(value)) {
                  return this.each(function (i) {
                    jQuery(this).toggleClass(
                      value.call(this, i, getClass(this), stateVal),
                      stateVal
                    );
                  });
                }

                return this.each(function () {
                  var className, i, self, classNames;

                  if (isValidValue) {
                    // Toggle individual class names
                    i = 0;
                    self = jQuery(this);
                    classNames = classesToArray(value);

                    while ((className = classNames[i++])) {
                      // Check each className given, space separated list
                      if (self.hasClass(className)) {
                        self.removeClass(className);
                      } else {
                        self.addClass(className);
                      }
                    }

                    // Toggle whole class name
                  } else if (value === undefined || type === "boolean") {
                    className = getClass(this);
                    if (className) {
                      // Store className if set
                      dataPriv.set(this, "__className__", className);
                    }

                    // If the element has a class name or if we're passed `false`,
                    // then remove the whole classname (if there was one, the above saved it).
                    // Otherwise bring back whatever was previously saved (if anything),
                    // falling back to the empty string if nothing was stored.
                    if (this.setAttribute) {
                      this.setAttribute(
                        "class",
                        className || value === false
                          ? ""
                          : dataPriv.get(this, "__className__") || ""
                      );
                    }
                  }
                });
              },

              hasClass: function (selector) {
                var className,
                  elem,
                  i = 0;

                className = " " + selector + " ";
                while ((elem = this[i++])) {
                  if (
                    elem.nodeType === 1 &&
                    (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(
                      className
                    ) > -1
                  ) {
                    return true;
                  }
                }

                return false;
              },
            });

            var rreturn = /\r/g;

            jQuery.fn.extend({
              val: function (value) {
                var hooks,
                  ret,
                  valueIsFunction,
                  elem = this[0];

                if (!arguments.length) {
                  if (elem) {
                    hooks =
                      jQuery.valHooks[elem.type] ||
                      jQuery.valHooks[elem.nodeName.toLowerCase()];

                    if (
                      hooks &&
                      "get" in hooks &&
                      (ret = hooks.get(elem, "value")) !== undefined
                    ) {
                      return ret;
                    }

                    ret = elem.value;

                    // Handle most common string cases
                    if (typeof ret === "string") {
                      return ret.replace(rreturn, "");
                    }

                    // Handle cases where value is null/undef or number
                    return ret == null ? "" : ret;
                  }

                  return;
                }

                valueIsFunction = isFunction(value);

                return this.each(function (i) {
                  var val;

                  if (this.nodeType !== 1) {
                    return;
                  }

                  if (valueIsFunction) {
                    val = value.call(this, i, jQuery(this).val());
                  } else {
                    val = value;
                  }

                  // Treat null/undefined as ""; convert numbers to string
                  if (val == null) {
                    val = "";
                  } else if (typeof val === "number") {
                    val += "";
                  } else if (Array.isArray(val)) {
                    val = jQuery.map(val, function (value) {
                      return value == null ? "" : value + "";
                    });
                  }

                  hooks =
                    jQuery.valHooks[this.type] ||
                    jQuery.valHooks[this.nodeName.toLowerCase()];

                  // If set returns undefined, fall back to normal setting
                  if (
                    !hooks ||
                    !("set" in hooks) ||
                    hooks.set(this, val, "value") === undefined
                  ) {
                    this.value = val;
                  }
                });
              },
            });

            jQuery.extend({
              valHooks: {
                option: {
                  get: function (elem) {
                    var val = jQuery.find.attr(elem, "value");
                    return val != null
                      ? val
                      : // Support: IE <=10 - 11 only
                        // option.text throws exceptions (#14686, #14858)
                        // Strip and collapse whitespace
                        // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
                        stripAndCollapse(jQuery.text(elem));
                  },
                },
                select: {
                  get: function (elem) {
                    var value,
                      option,
                      i,
                      options = elem.options,
                      index = elem.selectedIndex,
                      one = elem.type === "select-one",
                      values = one ? null : [],
                      max = one ? index + 1 : options.length;

                    if (index < 0) {
                      i = max;
                    } else {
                      i = one ? index : 0;
                    }

                    // Loop through all the selected options
                    for (; i < max; i++) {
                      option = options[i];

                      // Support: IE <=9 only
                      // IE8-9 doesn't update selected after form reset (#2551)
                      if (
                        (option.selected || i === index) &&
                        // Don't return options that are disabled or in a disabled optgroup
                        !option.disabled &&
                        (!option.parentNode.disabled ||
                          !nodeName(option.parentNode, "optgroup"))
                      ) {
                        // Get the specific value for the option
                        value = jQuery(option).val();

                        // We don't need an array for one selects
                        if (one) {
                          return value;
                        }

                        // Multi-Selects return an array
                        values.push(value);
                      }
                    }

                    return values;
                  },

                  set: function (elem, value) {
                    var optionSet,
                      option,
                      options = elem.options,
                      values = jQuery.makeArray(value),
                      i = options.length;

                    while (i--) {
                      option = options[i];

                      /* eslint-disable no-cond-assign */

                      if (
                        (option.selected =
                          jQuery.inArray(
                            jQuery.valHooks.option.get(option),
                            values
                          ) > -1)
                      ) {
                        optionSet = true;
                      }

                      /* eslint-enable no-cond-assign */
                    }

                    // Force browsers to behave consistently when non-matching value is set
                    if (!optionSet) {
                      elem.selectedIndex = -1;
                    }
                    return values;
                  },
                },
              },
            });

            // Radios and checkboxes getter/setter
            jQuery.each(["radio", "checkbox"], function () {
              jQuery.valHooks[this] = {
                set: function (elem, value) {
                  if (Array.isArray(value)) {
                    return (elem.checked =
                      jQuery.inArray(jQuery(elem).val(), value) > -1);
                  }
                },
              };
              if (!support.checkOn) {
                jQuery.valHooks[this].get = function (elem) {
                  return elem.getAttribute("value") === null
                    ? "on"
                    : elem.value;
                };
              }
            });

            // Return jQuery for attributes-only inclusion

            support.focusin = "onfocusin" in window;

            var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
              stopPropagationCallback = function (e) {
                e.stopPropagation();
              };

            jQuery.extend(jQuery.event, {
              trigger: function (event, data, elem, onlyHandlers) {
                var i,
                  cur,
                  tmp,
                  bubbleType,
                  ontype,
                  handle,
                  special,
                  lastElement,
                  eventPath = [elem || document],
                  type = hasOwn.call(event, "type") ? event.type : event,
                  namespaces = hasOwn.call(event, "namespace")
                    ? event.namespace.split(".")
                    : [];

                cur = lastElement = tmp = elem = elem || document;

                // Don't do events on text and comment nodes
                if (elem.nodeType === 3 || elem.nodeType === 8) {
                  return;
                }

                // focus/blur morphs to focusin/out; ensure we're not firing them right now
                if (rfocusMorph.test(type + jQuery.event.triggered)) {
                  return;
                }

                if (type.indexOf(".") > -1) {
                  // Namespaced trigger; create a regexp to match event type in handle()
                  namespaces = type.split(".");
                  type = namespaces.shift();
                  namespaces.sort();
                }
                ontype = type.indexOf(":") < 0 && "on" + type;

                // Caller can pass in a jQuery.Event object, Object, or just an event type string
                event = event[jQuery.expando]
                  ? event
                  : new jQuery.Event(type, typeof event === "object" && event);

                // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
                event.isTrigger = onlyHandlers ? 2 : 3;
                event.namespace = namespaces.join(".");
                event.rnamespace = event.namespace
                  ? new RegExp(
                      "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)"
                    )
                  : null;

                // Clean up the event in case it is being reused
                event.result = undefined;
                if (!event.target) {
                  event.target = elem;
                }

                // Clone any incoming data and prepend the event, creating the handler arg list
                data = data == null ? [event] : jQuery.makeArray(data, [event]);

                // Allow special events to draw outside the lines
                special = jQuery.event.special[type] || {};
                if (
                  !onlyHandlers &&
                  special.trigger &&
                  special.trigger.apply(elem, data) === false
                ) {
                  return;
                }

                // Determine event propagation path in advance, per W3C events spec (#9951)
                // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
                if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {
                  bubbleType = special.delegateType || type;
                  if (!rfocusMorph.test(bubbleType + type)) {
                    cur = cur.parentNode;
                  }
                  for (; cur; cur = cur.parentNode) {
                    eventPath.push(cur);
                    tmp = cur;
                  }

                  // Only add window if we got to document (e.g., not plain obj or detached DOM)
                  if (tmp === (elem.ownerDocument || document)) {
                    eventPath.push(
                      tmp.defaultView || tmp.parentWindow || window
                    );
                  }
                }

                // Fire handlers on the event path
                i = 0;
                while (
                  (cur = eventPath[i++]) &&
                  !event.isPropagationStopped()
                ) {
                  lastElement = cur;
                  event.type = i > 1 ? bubbleType : special.bindType || type;

                  // jQuery handler
                  handle =
                    (dataPriv.get(cur, "events") || Object.create(null))[
                      event.type
                    ] && dataPriv.get(cur, "handle");
                  if (handle) {
                    handle.apply(cur, data);
                  }

                  // Native handler
                  handle = ontype && cur[ontype];
                  if (handle && handle.apply && acceptData(cur)) {
                    event.result = handle.apply(cur, data);
                    if (event.result === false) {
                      event.preventDefault();
                    }
                  }
                }
                event.type = type;

                // If nobody prevented the default action, do it now
                if (!onlyHandlers && !event.isDefaultPrevented()) {
                  if (
                    (!special._default ||
                      special._default.apply(eventPath.pop(), data) ===
                        false) &&
                    acceptData(elem)
                  ) {
                    // Call a native DOM method on the target with the same name as the event.
                    // Don't do default actions on window, that's where global variables be (#6170)
                    if (ontype && isFunction(elem[type]) && !isWindow(elem)) {
                      // Don't re-trigger an onFOO event when we call its FOO() method
                      tmp = elem[ontype];

                      if (tmp) {
                        elem[ontype] = null;
                      }

                      // Prevent re-triggering of the same event, since we already bubbled it above
                      jQuery.event.triggered = type;

                      if (event.isPropagationStopped()) {
                        lastElement.addEventListener(
                          type,
                          stopPropagationCallback
                        );
                      }

                      elem[type]();

                      if (event.isPropagationStopped()) {
                        lastElement.removeEventListener(
                          type,
                          stopPropagationCallback
                        );
                      }

                      jQuery.event.triggered = undefined;

                      if (tmp) {
                        elem[ontype] = tmp;
                      }
                    }
                  }
                }

                return event.result;
              },

              // Piggyback on a donor event to simulate a different one
              // Used only for `focus(in | out)` events
              simulate: function (type, elem, event) {
                var e = jQuery.extend(new jQuery.Event(), event, {
                  type: type,
                  isSimulated: true,
                });

                jQuery.event.trigger(e, null, elem);
              },
            });

            jQuery.fn.extend({
              trigger: function (type, data) {
                return this.each(function () {
                  jQuery.event.trigger(type, data, this);
                });
              },
              triggerHandler: function (type, data) {
                var elem = this[0];
                if (elem) {
                  return jQuery.event.trigger(type, data, elem, true);
                }
              },
            });

            // Support: Firefox <=44
            // Firefox doesn't have focus(in | out) events
            // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
            //
            // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
            // focus(in | out) events fire after focus & blur events,
            // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
            // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
            if (!support.focusin) {
              jQuery.each(
                { focus: "focusin", blur: "focusout" },
                function (orig, fix) {
                  // Attach a single capturing handler on the document while someone wants focusin/focusout
                  var handler = function (event) {
                    jQuery.event.simulate(
                      fix,
                      event.target,
                      jQuery.event.fix(event)
                    );
                  };

                  jQuery.event.special[fix] = {
                    setup: function () {
                      // Handle: regular nodes (via `this.ownerDocument`), window
                      // (via `this.document`) & document (via `this`).
                      var doc = this.ownerDocument || this.document || this,
                        attaches = dataPriv.access(doc, fix);

                      if (!attaches) {
                        doc.addEventListener(orig, handler, true);
                      }
                      dataPriv.access(doc, fix, (attaches || 0) + 1);
                    },
                    teardown: function () {
                      var doc = this.ownerDocument || this.document || this,
                        attaches = dataPriv.access(doc, fix) - 1;

                      if (!attaches) {
                        doc.removeEventListener(orig, handler, true);
                        dataPriv.remove(doc, fix);
                      } else {
                        dataPriv.access(doc, fix, attaches);
                      }
                    },
                  };
                }
              );
            }
            var location = window.location;

            var nonce = { guid: Date.now() };

            var rquery = /\?/;

            // Cross-browser xml parsing
            jQuery.parseXML = function (data) {
              var xml, parserErrorElem;
              if (!data || typeof data !== "string") {
                return null;
              }

              // Support: IE 9 - 11 only
              // IE throws on parseFromString with invalid input.
              try {
                xml = new window.DOMParser().parseFromString(data, "text/xml");
              } catch (e) {}

              parserErrorElem =
                xml && xml.getElementsByTagName("parsererror")[0];
              if (!xml || parserErrorElem) {
                jQuery.error(
                  "Invalid XML: " +
                    (parserErrorElem
                      ? jQuery
                          .map(parserErrorElem.childNodes, function (el) {
                            return el.textContent;
                          })
                          .join("\n")
                      : data)
                );
              }
              return xml;
            };

            var rbracket = /\[\]$/,
              rCRLF = /\r?\n/g,
              rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
              rsubmittable = /^(?:input|select|textarea|keygen)/i;

            function buildParams(prefix, obj, traditional, add) {
              var name;

              if (Array.isArray(obj)) {
                // Serialize array item.
                jQuery.each(obj, function (i, v) {
                  if (traditional || rbracket.test(prefix)) {
                    // Treat each array item as a scalar.
                    add(prefix, v);
                  } else {
                    // Item is non-scalar (array or object), encode its numeric index.
                    buildParams(
                      prefix +
                        "[" +
                        (typeof v === "object" && v != null ? i : "") +
                        "]",
                      v,
                      traditional,
                      add
                    );
                  }
                });
              } else if (!traditional && toType(obj) === "object") {
                // Serialize object item.
                for (name in obj) {
                  buildParams(
                    prefix + "[" + name + "]",
                    obj[name],
                    traditional,
                    add
                  );
                }
              } else {
                // Serialize scalar item.
                add(prefix, obj);
              }
            }

            // Serialize an array of form elements or a set of
            // key/values into a query string
            jQuery.param = function (a, traditional) {
              var prefix,
                s = [],
                add = function (key, valueOrFunction) {
                  // If value is a function, invoke it and use its return value
                  var value = isFunction(valueOrFunction)
                    ? valueOrFunction()
                    : valueOrFunction;

                  s[s.length] =
                    encodeURIComponent(key) +
                    "=" +
                    encodeURIComponent(value == null ? "" : value);
                };

              if (a == null) {
                return "";
              }

              // If an array was passed in, assume that it is an array of form elements.
              if (Array.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {
                // Serialize the form elements
                jQuery.each(a, function () {
                  add(this.name, this.value);
                });
              } else {
                // If traditional, encode the "old" way (the way 1.3.2 or older
                // did it), otherwise encode params recursively.
                for (prefix in a) {
                  buildParams(prefix, a[prefix], traditional, add);
                }
              }

              // Return the resulting serialization
              return s.join("&");
            };

            jQuery.fn.extend({
              serialize: function () {
                return jQuery.param(this.serializeArray());
              },
              serializeArray: function () {
                return this.map(function () {
                  // Can add propHook for "elements" to filter or add form elements
                  var elements = jQuery.prop(this, "elements");
                  return elements ? jQuery.makeArray(elements) : this;
                })
                  .filter(function () {
                    var type = this.type;

                    // Use .is( ":disabled" ) so that fieldset[disabled] works
                    return (
                      this.name &&
                      !jQuery(this).is(":disabled") &&
                      rsubmittable.test(this.nodeName) &&
                      !rsubmitterTypes.test(type) &&
                      (this.checked || !rcheckableType.test(type))
                    );
                  })
                  .map(function (_i, elem) {
                    var val = jQuery(this).val();

                    if (val == null) {
                      return null;
                    }

                    if (Array.isArray(val)) {
                      return jQuery.map(val, function (val) {
                        return {
                          name: elem.name,
                          value: val.replace(rCRLF, "\r\n"),
                        };
                      });
                    }

                    return {
                      name: elem.name,
                      value: val.replace(rCRLF, "\r\n"),
                    };
                  })
                  .get();
              },
            });

            var r20 = /%20/g,
              rhash = /#.*$/,
              rantiCache = /([?&])_=[^&]*/,
              rheaders = /^(.*?):[ \t]*([^\r\n]*)$/gm,
              // #7653, #8125, #8152: local protocol detection
              rlocalProtocol =
                /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
              rnoContent = /^(?:GET|HEAD)$/,
              rprotocol = /^\/\//,
              /* Prefilters
               * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
               * 2) These are called:
               *    - BEFORE asking for a transport
               *    - AFTER param serialization (s.data is a string if s.processData is true)
               * 3) key is the dataType
               * 4) the catchall symbol "*" can be used
               * 5) execution will start with transport dataType and THEN continue down to "*" if needed
               */
              prefilters = {},
              /* Transports bindings
               * 1) key is the dataType
               * 2) the catchall symbol "*" can be used
               * 3) selection will start with transport dataType and THEN go to "*" if needed
               */
              transports = {},
              // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
              allTypes = "*/".concat("*"),
              // Anchor tag for parsing the document origin
              originAnchor = document.createElement("a");

            originAnchor.href = location.href;

            // Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
            function addToPrefiltersOrTransports(structure) {
              // dataTypeExpression is optional and defaults to "*"
              return function (dataTypeExpression, func) {
                if (typeof dataTypeExpression !== "string") {
                  func = dataTypeExpression;
                  dataTypeExpression = "*";
                }

                var dataType,
                  i = 0,
                  dataTypes =
                    dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];

                if (isFunction(func)) {
                  // For each dataType in the dataTypeExpression
                  while ((dataType = dataTypes[i++])) {
                    // Prepend if requested
                    if (dataType[0] === "+") {
                      dataType = dataType.slice(1) || "*";
                      (structure[dataType] = structure[dataType] || []).unshift(
                        func
                      );

                      // Otherwise append
                    } else {
                      (structure[dataType] = structure[dataType] || []).push(
                        func
                      );
                    }
                  }
                }
              };
            }

            // Base inspection function for prefilters and transports
            function inspectPrefiltersOrTransports(
              structure,
              options,
              originalOptions,
              jqXHR
            ) {
              var inspected = {},
                seekingTransport = structure === transports;

              function inspect(dataType) {
                var selected;
                inspected[dataType] = true;
                jQuery.each(
                  structure[dataType] || [],
                  function (_, prefilterOrFactory) {
                    var dataTypeOrTransport = prefilterOrFactory(
                      options,
                      originalOptions,
                      jqXHR
                    );
                    if (
                      typeof dataTypeOrTransport === "string" &&
                      !seekingTransport &&
                      !inspected[dataTypeOrTransport]
                    ) {
                      options.dataTypes.unshift(dataTypeOrTransport);
                      inspect(dataTypeOrTransport);
                      return false;
                    } else if (seekingTransport) {
                      return !(selected = dataTypeOrTransport);
                    }
                  }
                );
                return selected;
              }

              return (
                inspect(options.dataTypes[0]) ||
                (!inspected["*"] && inspect("*"))
              );
            }

            // A special extend for ajax options
            // that takes "flat" options (not to be deep extended)
            // Fixes #9887
            function ajaxExtend(target, src) {
              var key,
                deep,
                flatOptions = jQuery.ajaxSettings.flatOptions || {};

              for (key in src) {
                if (src[key] !== undefined) {
                  (flatOptions[key] ? target : deep || (deep = {}))[key] =
                    src[key];
                }
              }
              if (deep) {
                jQuery.extend(true, target, deep);
              }

              return target;
            }

            /* Handles responses to an ajax request:
             * - finds the right dataType (mediates between content-type and expected dataType)
             * - returns the corresponding response
             */
            function ajaxHandleResponses(s, jqXHR, responses) {
              var ct,
                type,
                finalDataType,
                firstDataType,
                contents = s.contents,
                dataTypes = s.dataTypes;

              // Remove auto dataType and get content-type in the process
              while (dataTypes[0] === "*") {
                dataTypes.shift();
                if (ct === undefined) {
                  ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
                }
              }

              // Check if we're dealing with a known content-type
              if (ct) {
                for (type in contents) {
                  if (contents[type] && contents[type].test(ct)) {
                    dataTypes.unshift(type);
                    break;
                  }
                }
              }

              // Check to see if we have a response for the expected dataType
              if (dataTypes[0] in responses) {
                finalDataType = dataTypes[0];
              } else {
                // Try convertible dataTypes
                for (type in responses) {
                  if (
                    !dataTypes[0] ||
                    s.converters[type + " " + dataTypes[0]]
                  ) {
                    finalDataType = type;
                    break;
                  }
                  if (!firstDataType) {
                    firstDataType = type;
                  }
                }

                // Or just use first one
                finalDataType = finalDataType || firstDataType;
              }

              // If we found a dataType
              // We add the dataType to the list if needed
              // and return the corresponding response
              if (finalDataType) {
                if (finalDataType !== dataTypes[0]) {
                  dataTypes.unshift(finalDataType);
                }
                return responses[finalDataType];
              }
            }

            /* Chain conversions given the request and the original response
             * Also sets the responseXXX fields on the jqXHR instance
             */
            function ajaxConvert(s, response, jqXHR, isSuccess) {
              var conv2,
                current,
                conv,
                tmp,
                prev,
                converters = {},
                // Work with a copy of dataTypes in case we need to modify it for conversion
                dataTypes = s.dataTypes.slice();

              // Create converters map with lowercased keys
              if (dataTypes[1]) {
                for (conv in s.converters) {
                  converters[conv.toLowerCase()] = s.converters[conv];
                }
              }

              current = dataTypes.shift();

              // Convert to each sequential dataType
              while (current) {
                if (s.responseFields[current]) {
                  jqXHR[s.responseFields[current]] = response;
                }

                // Apply the dataFilter if provided
                if (!prev && isSuccess && s.dataFilter) {
                  response = s.dataFilter(response, s.dataType);
                }

                prev = current;
                current = dataTypes.shift();

                if (current) {
                  // There's only work to do if current dataType is non-auto
                  if (current === "*") {
                    current = prev;

                    // Convert response if prev dataType is non-auto and differs from current
                  } else if (prev !== "*" && prev !== current) {
                    // Seek a direct converter
                    conv =
                      converters[prev + " " + current] ||
                      converters["* " + current];

                    // If none found, seek a pair
                    if (!conv) {
                      for (conv2 in converters) {
                        // If conv2 outputs current
                        tmp = conv2.split(" ");
                        if (tmp[1] === current) {
                          // If prev can be converted to accepted input
                          conv =
                            converters[prev + " " + tmp[0]] ||
                            converters["* " + tmp[0]];
                          if (conv) {
                            // Condense equivalence converters
                            if (conv === true) {
                              conv = converters[conv2];

                              // Otherwise, insert the intermediate dataType
                            } else if (converters[conv2] !== true) {
                              current = tmp[0];
                              dataTypes.unshift(tmp[1]);
                            }
                            break;
                          }
                        }
                      }
                    }

                    // Apply converter (if not an equivalence)
                    if (conv !== true) {
                      // Unless errors are allowed to bubble, catch and return them
                      if (conv && s.throws) {
                        response = conv(response);
                      } else {
                        try {
                          response = conv(response);
                        } catch (e) {
                          return {
                            state: "parsererror",
                            error: conv
                              ? e
                              : "No conversion from " + prev + " to " + current,
                          };
                        }
                      }
                    }
                  }
                }
              }

              return { state: "success", data: response };
            }

            jQuery.extend({
              // Counter for holding the number of active queries
              active: 0,

              // Last-Modified header cache for next request
              lastModified: {},
              etag: {},

              ajaxSettings: {
                url: location.href,
                type: "GET",
                isLocal: rlocalProtocol.test(location.protocol),
                global: true,
                processData: true,
                async: true,
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",

                /*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

                accepts: {
                  "*": allTypes,
                  text: "text/plain",
                  html: "text/html",
                  xml: "application/xml, text/xml",
                  json: "application/json, text/javascript",
                },

                contents: {
                  xml: /\bxml\b/,
                  html: /\bhtml/,
                  json: /\bjson\b/,
                },

                responseFields: {
                  xml: "responseXML",
                  text: "responseText",
                  json: "responseJSON",
                },

                // Data converters
                // Keys separate source (or catchall "*") and destination types with a single space
                converters: {
                  // Convert anything to text
                  "* text": String,

                  // Text to html (true = no transformation)
                  "text html": true,

                  // Evaluate text as a json expression
                  "text json": JSON.parse,

                  // Parse text as xml
                  "text xml": jQuery.parseXML,
                },

                // For options that shouldn't be deep extended:
                // you can add your own custom options here if
                // and when you create one that shouldn't be
                // deep extended (see ajaxExtend)
                flatOptions: {
                  url: true,
                  context: true,
                },
              },

              // Creates a full fledged settings object into target
              // with both ajaxSettings and settings fields.
              // If target is omitted, writes into ajaxSettings.
              ajaxSetup: function (target, settings) {
                return settings
                  ? // Building a settings object
                    ajaxExtend(
                      ajaxExtend(target, jQuery.ajaxSettings),
                      settings
                    )
                  : // Extending ajaxSettings
                    ajaxExtend(jQuery.ajaxSettings, target);
              },

              ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
              ajaxTransport: addToPrefiltersOrTransports(transports),

              // Main method
              ajax: function (url, options) {
                // If url is an object, simulate pre-1.5 signature
                if (typeof url === "object") {
                  options = url;
                  url = undefined;
                }

                // Force options to be an object
                options = options || {};

                var transport,
                  // URL without anti-cache param
                  cacheURL,
                  // Response headers
                  responseHeadersString,
                  responseHeaders,
                  // timeout handle
                  timeoutTimer,
                  // Url cleanup var
                  urlAnchor,
                  // Request state (becomes false upon send and true upon completion)
                  completed,
                  // To know if global events are to be dispatched
                  fireGlobals,
                  // Loop variable
                  i,
                  // uncached part of the url
                  uncached,
                  // Create the final options object
                  s = jQuery.ajaxSetup({}, options),
                  // Callbacks context
                  callbackContext = s.context || s,
                  // Context for global events is callbackContext if it is a DOM node or jQuery collection
                  globalEventContext =
                    s.context &&
                    (callbackContext.nodeType || callbackContext.jquery)
                      ? jQuery(callbackContext)
                      : jQuery.event,
                  // Deferreds
                  deferred = jQuery.Deferred(),
                  completeDeferred = jQuery.Callbacks("once memory"),
                  // Status-dependent callbacks
                  statusCode = s.statusCode || {},
                  // Headers (they are sent all at once)
                  requestHeaders = {},
                  requestHeadersNames = {},
                  // Default abort message
                  strAbort = "canceled",
                  // Fake xhr
                  jqXHR = {
                    readyState: 0,

                    // Builds headers hashtable if needed
                    getResponseHeader: function (key) {
                      var match;
                      if (completed) {
                        if (!responseHeaders) {
                          responseHeaders = {};
                          while (
                            (match = rheaders.exec(responseHeadersString))
                          ) {
                            responseHeaders[match[1].toLowerCase() + " "] = (
                              responseHeaders[match[1].toLowerCase() + " "] ||
                              []
                            ).concat(match[2]);
                          }
                        }
                        match = responseHeaders[key.toLowerCase() + " "];
                      }
                      return match == null ? null : match.join(", ");
                    },

                    // Raw string
                    getAllResponseHeaders: function () {
                      return completed ? responseHeadersString : null;
                    },

                    // Caches the header
                    setRequestHeader: function (name, value) {
                      if (completed == null) {
                        name = requestHeadersNames[name.toLowerCase()] =
                          requestHeadersNames[name.toLowerCase()] || name;
                        requestHeaders[name] = value;
                      }
                      return this;
                    },

                    // Overrides response content-type header
                    overrideMimeType: function (type) {
                      if (completed == null) {
                        s.mimeType = type;
                      }
                      return this;
                    },

                    // Status-dependent callbacks
                    statusCode: function (map) {
                      var code;
                      if (map) {
                        if (completed) {
                          // Execute the appropriate callbacks
                          jqXHR.always(map[jqXHR.status]);
                        } else {
                          // Lazy-add the new callbacks in a way that preserves old ones
                          for (code in map) {
                            statusCode[code] = [statusCode[code], map[code]];
                          }
                        }
                      }
                      return this;
                    },

                    // Cancel the request
                    abort: function (statusText) {
                      var finalText = statusText || strAbort;
                      if (transport) {
                        transport.abort(finalText);
                      }
                      done(0, finalText);
                      return this;
                    },
                  };

                // Attach deferreds
                deferred.promise(jqXHR);

                // Add protocol if not provided (prefilters might expect it)
                // Handle falsy url in the settings object (#10093: consistency with old signature)
                // We also use the url parameter if available
                s.url = ((url || s.url || location.href) + "").replace(
                  rprotocol,
                  location.protocol + "//"
                );

                // Alias method option to type as per ticket #12004
                s.type = options.method || options.type || s.method || s.type;

                // Extract dataTypes list
                s.dataTypes = (s.dataType || "*")
                  .toLowerCase()
                  .match(rnothtmlwhite) || [""];

                // A cross-domain request is in order when the origin doesn't match the current origin.
                if (s.crossDomain == null) {
                  urlAnchor = document.createElement("a");

                  // Support: IE <=8 - 11, Edge 12 - 15
                  // IE throws exception on accessing the href property if url is malformed,
                  // e.g. http://example.com:80x/
                  try {
                    urlAnchor.href = s.url;

                    // Support: IE <=8 - 11 only
                    // Anchor's host property isn't correctly set when s.url is relative
                    urlAnchor.href = urlAnchor.href;
                    s.crossDomain =
                      originAnchor.protocol + "//" + originAnchor.host !==
                      urlAnchor.protocol + "//" + urlAnchor.host;
                  } catch (e) {
                    // If there is an error parsing the URL, assume it is crossDomain,
                    // it can be rejected by the transport if it is invalid
                    s.crossDomain = true;
                  }
                }

                // Convert data if not already a string
                if (s.data && s.processData && typeof s.data !== "string") {
                  s.data = jQuery.param(s.data, s.traditional);
                }

                // Apply prefilters
                inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);

                // If request was aborted inside a prefilter, stop there
                if (completed) {
                  return jqXHR;
                }

                // We can fire global events as of now if asked to
                // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
                fireGlobals = jQuery.event && s.global;

                // Watch for a new set of requests
                if (fireGlobals && jQuery.active++ === 0) {
                  jQuery.event.trigger("ajaxStart");
                }

                // Uppercase the type
                s.type = s.type.toUpperCase();

                // Determine if request has content
                s.hasContent = !rnoContent.test(s.type);

                // Save the URL in case we're toying with the If-Modified-Since
                // and/or If-None-Match header later on
                // Remove hash to simplify url manipulation
                cacheURL = s.url.replace(rhash, "");

                // More options handling for requests with no content
                if (!s.hasContent) {
                  // Remember the hash so we can put it back
                  uncached = s.url.slice(cacheURL.length);

                  // If data is available and should be processed, append data to url
                  if (s.data && (s.processData || typeof s.data === "string")) {
                    cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data;

                    // #9682: remove data so that it's not used in an eventual retry
                    delete s.data;
                  }

                  // Add or update anti-cache param if needed
                  if (s.cache === false) {
                    cacheURL = cacheURL.replace(rantiCache, "$1");
                    uncached =
                      (rquery.test(cacheURL) ? "&" : "?") +
                      "_=" +
                      nonce.guid++ +
                      uncached;
                  }

                  // Put hash and anti-cache on the URL that will be requested (gh-1732)
                  s.url = cacheURL + uncached;

                  // Change '%20' to '+' if this is encoded form body content (gh-2658)
                } else if (
                  s.data &&
                  s.processData &&
                  (s.contentType || "").indexOf(
                    "application/x-www-form-urlencoded"
                  ) === 0
                ) {
                  s.data = s.data.replace(r20, "+");
                }

                // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
                if (s.ifModified) {
                  if (jQuery.lastModified[cacheURL]) {
                    jqXHR.setRequestHeader(
                      "If-Modified-Since",
                      jQuery.lastModified[cacheURL]
                    );
                  }
                  if (jQuery.etag[cacheURL]) {
                    jqXHR.setRequestHeader(
                      "If-None-Match",
                      jQuery.etag[cacheURL]
                    );
                  }
                }

                // Set the correct header, if data is being sent
                if (
                  (s.data && s.hasContent && s.contentType !== false) ||
                  options.contentType
                ) {
                  jqXHR.setRequestHeader("Content-Type", s.contentType);
                }

                // Set the Accepts header for the server, depending on the dataType
                jqXHR.setRequestHeader(
                  "Accept",
                  s.dataTypes[0] && s.accepts[s.dataTypes[0]]
                    ? s.accepts[s.dataTypes[0]] +
                        (s.dataTypes[0] !== "*"
                          ? ", " + allTypes + "; q=0.01"
                          : "")
                    : s.accepts["*"]
                );

                // Check for headers option
                for (i in s.headers) {
                  jqXHR.setRequestHeader(i, s.headers[i]);
                }

                // Allow custom headers/mimetypes and early abort
                if (
                  s.beforeSend &&
                  (s.beforeSend.call(callbackContext, jqXHR, s) === false ||
                    completed)
                ) {
                  // Abort if not done already and return
                  return jqXHR.abort();
                }

                // Aborting is no longer a cancellation
                strAbort = "abort";

                // Install callbacks on deferreds
                completeDeferred.add(s.complete);
                jqXHR.done(s.success);
                jqXHR.fail(s.error);

                // Get transport
                transport = inspectPrefiltersOrTransports(
                  transports,
                  s,
                  options,
                  jqXHR
                );

                // If no transport, we auto-abort
                if (!transport) {
                  done(-1, "No Transport");
                } else {
                  jqXHR.readyState = 1;

                  // Send global event
                  if (fireGlobals) {
                    globalEventContext.trigger("ajaxSend", [jqXHR, s]);
                  }

                  // If request was aborted inside ajaxSend, stop there
                  if (completed) {
                    return jqXHR;
                  }

                  // Timeout
                  if (s.async && s.timeout > 0) {
                    timeoutTimer = window.setTimeout(function () {
                      jqXHR.abort("timeout");
                    }, s.timeout);
                  }

                  try {
                    completed = false;
                    transport.send(requestHeaders, done);
                  } catch (e) {
                    // Rethrow post-completion exceptions
                    if (completed) {
                      throw e;
                    }

                    // Propagate others as results
                    done(-1, e);
                  }
                }

                // Callback for when everything is done
                function done(status, nativeStatusText, responses, headers) {
                  var isSuccess,
                    success,
                    error,
                    response,
                    modified,
                    statusText = nativeStatusText;

                  // Ignore repeat invocations
                  if (completed) {
                    return;
                  }

                  completed = true;

                  // Clear timeout if it exists
                  if (timeoutTimer) {
                    window.clearTimeout(timeoutTimer);
                  }

                  // Dereference transport for early garbage collection
                  // (no matter how long the jqXHR object will be used)
                  transport = undefined;

                  // Cache response headers
                  responseHeadersString = headers || "";

                  // Set readyState
                  jqXHR.readyState = status > 0 ? 4 : 0;

                  // Determine if successful
                  isSuccess = (status >= 200 && status < 300) || status === 304;

                  // Get response data
                  if (responses) {
                    response = ajaxHandleResponses(s, jqXHR, responses);
                  }

                  // Use a noop converter for missing script but not if jsonp
                  if (
                    !isSuccess &&
                    jQuery.inArray("script", s.dataTypes) > -1 &&
                    jQuery.inArray("json", s.dataTypes) < 0
                  ) {
                    s.converters["text script"] = function () {};
                  }

                  // Convert no matter what (that way responseXXX fields are always set)
                  response = ajaxConvert(s, response, jqXHR, isSuccess);

                  // If successful, handle type chaining
                  if (isSuccess) {
                    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
                    if (s.ifModified) {
                      modified = jqXHR.getResponseHeader("Last-Modified");
                      if (modified) {
                        jQuery.lastModified[cacheURL] = modified;
                      }
                      modified = jqXHR.getResponseHeader("etag");
                      if (modified) {
                        jQuery.etag[cacheURL] = modified;
                      }
                    }

                    // if no content
                    if (status === 204 || s.type === "HEAD") {
                      statusText = "nocontent";

                      // if not modified
                    } else if (status === 304) {
                      statusText = "notmodified";

                      // If we have data, let's convert it
                    } else {
                      statusText = response.state;
                      success = response.data;
                      error = response.error;
                      isSuccess = !error;
                    }
                  } else {
                    // Extract error from statusText and normalize for non-aborts
                    error = statusText;
                    if (status || !statusText) {
                      statusText = "error";
                      if (status < 0) {
                        status = 0;
                      }
                    }
                  }

                  // Set data for the fake xhr object
                  jqXHR.status = status;
                  jqXHR.statusText = (nativeStatusText || statusText) + "";

                  // Success/Error
                  if (isSuccess) {
                    deferred.resolveWith(callbackContext, [
                      success,
                      statusText,
                      jqXHR,
                    ]);
                  } else {
                    deferred.rejectWith(callbackContext, [
                      jqXHR,
                      statusText,
                      error,
                    ]);
                  }

                  // Status-dependent callbacks
                  jqXHR.statusCode(statusCode);
                  statusCode = undefined;

                  if (fireGlobals) {
                    globalEventContext.trigger(
                      isSuccess ? "ajaxSuccess" : "ajaxError",
                      [jqXHR, s, isSuccess ? success : error]
                    );
                  }

                  // Complete
                  completeDeferred.fireWith(callbackContext, [
                    jqXHR,
                    statusText,
                  ]);

                  if (fireGlobals) {
                    globalEventContext.trigger("ajaxComplete", [jqXHR, s]);

                    // Handle the global AJAX counter
                    if (!--jQuery.active) {
                      jQuery.event.trigger("ajaxStop");
                    }
                  }
                }

                return jqXHR;
              },

              getJSON: function (url, data, callback) {
                return jQuery.get(url, data, callback, "json");
              },

              getScript: function (url, callback) {
                return jQuery.get(url, undefined, callback, "script");
              },
            });

            jQuery.each(["get", "post"], function (_i, method) {
              jQuery[method] = function (url, data, callback, type) {
                // Shift arguments if data argument was omitted
                if (isFunction(data)) {
                  type = type || callback;
                  callback = data;
                  data = undefined;
                }

                // The url can be an options object (which then must have .url)
                return jQuery.ajax(
                  jQuery.extend(
                    {
                      url: url,
                      type: method,
                      dataType: type,
                      data: data,
                      success: callback,
                    },
                    jQuery.isPlainObject(url) && url
                  )
                );
              };
            });

            jQuery.ajaxPrefilter(function (s) {
              var i;
              for (i in s.headers) {
                if (i.toLowerCase() === "content-type") {
                  s.contentType = s.headers[i] || "";
                }
              }
            });

            jQuery._evalUrl = function (url, options, doc) {
              return jQuery.ajax({
                url: url,

                // Make this explicit, since user can override this through ajaxSetup (#11264)
                type: "GET",
                dataType: "script",
                cache: true,
                async: false,
                global: false,

                // Only evaluate the response if it is successful (gh-4126)
                // dataFilter is not invoked for failure responses, so using it instead
                // of the default converter is kludgy but it works.
                converters: {
                  "text script": function () {},
                },
                dataFilter: function (response) {
                  jQuery.globalEval(response, options, doc);
                },
              });
            };

            jQuery.fn.extend({
              wrapAll: function (html) {
                var wrap;

                if (this[0]) {
                  if (isFunction(html)) {
                    html = html.call(this[0]);
                  }

                  // The elements to wrap the target around
                  wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);

                  if (this[0].parentNode) {
                    wrap.insertBefore(this[0]);
                  }

                  wrap
                    .map(function () {
                      var elem = this;

                      while (elem.firstElementChild) {
                        elem = elem.firstElementChild;
                      }

                      return elem;
                    })
                    .append(this);
                }

                return this;
              },

              wrapInner: function (html) {
                if (isFunction(html)) {
                  return this.each(function (i) {
                    jQuery(this).wrapInner(html.call(this, i));
                  });
                }

                return this.each(function () {
                  var self = jQuery(this),
                    contents = self.contents();

                  if (contents.length) {
                    contents.wrapAll(html);
                  } else {
                    self.append(html);
                  }
                });
              },

              wrap: function (html) {
                var htmlIsFunction = isFunction(html);

                return this.each(function (i) {
                  jQuery(this).wrapAll(
                    htmlIsFunction ? html.call(this, i) : html
                  );
                });
              },

              unwrap: function (selector) {
                this.parent(selector)
                  .not("body")
                  .each(function () {
                    jQuery(this).replaceWith(this.childNodes);
                  });
                return this;
              },
            });

            jQuery.expr.pseudos.hidden = function (elem) {
              return !jQuery.expr.pseudos.visible(elem);
            };
            jQuery.expr.pseudos.visible = function (elem) {
              return !!(
                elem.offsetWidth ||
                elem.offsetHeight ||
                elem.getClientRects().length
              );
            };

            jQuery.ajaxSettings.xhr = function () {
              try {
                return new window.XMLHttpRequest();
              } catch (e) {}
            };

            var xhrSuccessStatus = {
                // File protocol always yields status code 0, assume 200
                0: 200,

                // Support: IE <=9 only
                // #1450: sometimes IE returns 1223 when it should be 204
                1223: 204,
              },
              xhrSupported = jQuery.ajaxSettings.xhr();

            support.cors = !!xhrSupported && "withCredentials" in xhrSupported;
            support.ajax = xhrSupported = !!xhrSupported;

            jQuery.ajaxTransport(function (options) {
              var callback, errorCallback;

              // Cross domain only allowed if supported through XMLHttpRequest
              if (support.cors || (xhrSupported && !options.crossDomain)) {
                return {
                  send: function (headers, complete) {
                    var i,
                      xhr = options.xhr();

                    xhr.open(
                      options.type,
                      options.url,
                      options.async,
                      options.username,
                      options.password
                    );

                    // Apply custom fields if provided
                    if (options.xhrFields) {
                      for (i in options.xhrFields) {
                        xhr[i] = options.xhrFields[i];
                      }
                    }

                    // Override mime type if needed
                    if (options.mimeType && xhr.overrideMimeType) {
                      xhr.overrideMimeType(options.mimeType);
                    }

                    // X-Requested-With header
                    // For cross-domain requests, seeing as conditions for a preflight are
                    // akin to a jigsaw puzzle, we simply never set it to be sure.
                    // (it can always be set on a per-request basis or even using ajaxSetup)
                    // For same-domain requests, won't change header if already provided.
                    if (!options.crossDomain && !headers["X-Requested-With"]) {
                      headers["X-Requested-With"] = "XMLHttpRequest";
                    }

                    // Set headers
                    for (i in headers) {
                      xhr.setRequestHeader(i, headers[i]);
                    }

                    // Callback
                    callback = function (type) {
                      return function () {
                        if (callback) {
                          callback =
                            errorCallback =
                            xhr.onload =
                            xhr.onerror =
                            xhr.onabort =
                            xhr.ontimeout =
                            xhr.onreadystatechange =
                              null;

                          if (type === "abort") {
                            xhr.abort();
                          } else if (type === "error") {
                            // Support: IE <=9 only
                            // On a manual native abort, IE9 throws
                            // errors on any property access that is not readyState
                            if (typeof xhr.status !== "number") {
                              complete(0, "error");
                            } else {
                              complete(
                                // File: protocol always yields status 0; see #8605, #14207
                                xhr.status,
                                xhr.statusText
                              );
                            }
                          } else {
                            complete(
                              xhrSuccessStatus[xhr.status] || xhr.status,
                              xhr.statusText,

                              // Support: IE <=9 only
                              // IE9 has no XHR2 but throws on binary (trac-11426)
                              // For XHR2 non-text, let the caller handle it (gh-2498)
                              (xhr.responseType || "text") !== "text" ||
                                typeof xhr.responseText !== "string"
                                ? { binary: xhr.response }
                                : { text: xhr.responseText },
                              xhr.getAllResponseHeaders()
                            );
                          }
                        }
                      };
                    };

                    // Listen to events
                    xhr.onload = callback();
                    errorCallback =
                      xhr.onerror =
                      xhr.ontimeout =
                        callback("error");

                    // Support: IE 9 only
                    // Use onreadystatechange to replace onabort
                    // to handle uncaught aborts
                    if (xhr.onabort !== undefined) {
                      xhr.onabort = errorCallback;
                    } else {
                      xhr.onreadystatechange = function () {
                        // Check readyState before timeout as it changes
                        if (xhr.readyState === 4) {
                          // Allow onerror to be called first,
                          // but that will not handle a native abort
                          // Also, save errorCallback to a variable
                          // as xhr.onerror cannot be accessed
                          window.setTimeout(function () {
                            if (callback) {
                              errorCallback();
                            }
                          });
                        }
                      };
                    }

                    // Create the abort callback
                    callback = callback("abort");

                    try {
                      // Do send the request (this may raise an exception)
                      xhr.send((options.hasContent && options.data) || null);
                    } catch (e) {
                      // #14683: Only rethrow if this hasn't been notified as an error yet
                      if (callback) {
                        throw e;
                      }
                    }
                  },

                  abort: function () {
                    if (callback) {
                      callback();
                    }
                  },
                };
              }
            });

            // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
            jQuery.ajaxPrefilter(function (s) {
              if (s.crossDomain) {
                s.contents.script = false;
              }
            });

            // Install script dataType
            jQuery.ajaxSetup({
              accepts: {
                script:
                  "text/javascript, application/javascript, " +
                  "application/ecmascript, application/x-ecmascript",
              },
              contents: {
                script: /\b(?:java|ecma)script\b/,
              },
              converters: {
                "text script": function (text) {
                  jQuery.globalEval(text);
                  return text;
                },
              },
            });

            // Handle cache's special case and crossDomain
            jQuery.ajaxPrefilter("script", function (s) {
              if (s.cache === undefined) {
                s.cache = false;
              }
              if (s.crossDomain) {
                s.type = "GET";
              }
            });

            // Bind script tag hack transport
            jQuery.ajaxTransport("script", function (s) {
              // This transport only deals with cross domain or forced-by-attrs requests
              if (s.crossDomain || s.scriptAttrs) {
                var script, callback;
                return {
                  send: function (_, complete) {
                    script = jQuery("<script>")
                      .attr(s.scriptAttrs || {})
                      .prop({ charset: s.scriptCharset, src: s.url })
                      .on(
                        "load error",
                        (callback = function (evt) {
                          script.remove();
                          callback = null;
                          if (evt) {
                            complete(
                              evt.type === "error" ? 404 : 200,
                              evt.type
                            );
                          }
                        })
                      );

                    // Use native DOM manipulation to avoid our domManip AJAX trickery
                    document.head.appendChild(script[0]);
                  },
                  abort: function () {
                    if (callback) {
                      callback();
                    }
                  },
                };
              }
            });

            var oldCallbacks = [],
              rjsonp = /(=)\?(?=&|$)|\?\?/;

            // Default jsonp settings
            jQuery.ajaxSetup({
              jsonp: "callback",
              jsonpCallback: function () {
                var callback =
                  oldCallbacks.pop() || jQuery.expando + "_" + nonce.guid++;
                this[callback] = true;
                return callback;
              },
            });

            // Detect, normalize options and install callbacks for jsonp requests
            jQuery.ajaxPrefilter(
              "json jsonp",
              function (s, originalSettings, jqXHR) {
                var callbackName,
                  overwritten,
                  responseContainer,
                  jsonProp =
                    s.jsonp !== false &&
                    (rjsonp.test(s.url)
                      ? "url"
                      : typeof s.data === "string" &&
                        (s.contentType || "").indexOf(
                          "application/x-www-form-urlencoded"
                        ) === 0 &&
                        rjsonp.test(s.data) &&
                        "data");

                // Handle iff the expected data type is "jsonp" or we have a parameter to set
                if (jsonProp || s.dataTypes[0] === "jsonp") {
                  // Get callback name, remembering preexisting value associated with it
                  callbackName = s.jsonpCallback = isFunction(s.jsonpCallback)
                    ? s.jsonpCallback()
                    : s.jsonpCallback;

                  // Insert callback into url or form data
                  if (jsonProp) {
                    s[jsonProp] = s[jsonProp].replace(
                      rjsonp,
                      "$1" + callbackName
                    );
                  } else if (s.jsonp !== false) {
                    s.url +=
                      (rquery.test(s.url) ? "&" : "?") +
                      s.jsonp +
                      "=" +
                      callbackName;
                  }

                  // Use data converter to retrieve json after script execution
                  s.converters["script json"] = function () {
                    if (!responseContainer) {
                      jQuery.error(callbackName + " was not called");
                    }
                    return responseContainer[0];
                  };

                  // Force json dataType
                  s.dataTypes[0] = "json";

                  // Install callback
                  overwritten = window[callbackName];
                  window[callbackName] = function () {
                    responseContainer = arguments;
                  };

                  // Clean-up function (fires after converters)
                  jqXHR.always(function () {
                    // If previous value didn't exist - remove it
                    if (overwritten === undefined) {
                      jQuery(window).removeProp(callbackName);

                      // Otherwise restore preexisting value
                    } else {
                      window[callbackName] = overwritten;
                    }

                    // Save back as free
                    if (s[callbackName]) {
                      // Make sure that re-using the options doesn't screw things around
                      s.jsonpCallback = originalSettings.jsonpCallback;

                      // Save the callback name for future use
                      oldCallbacks.push(callbackName);
                    }

                    // Call if it was a function and we have a response
                    if (responseContainer && isFunction(overwritten)) {
                      overwritten(responseContainer[0]);
                    }

                    responseContainer = overwritten = undefined;
                  });

                  // Delegate to script
                  return "script";
                }
              }
            );

            // Support: Safari 8 only
            // In Safari 8 documents created via document.implementation.createHTMLDocument
            // collapse sibling forms: the second one becomes a child of the first one.
            // Because of that, this security measure has to be disabled in Safari 8.
            // https://bugs.webkit.org/show_bug.cgi?id=137337
            support.createHTMLDocument = (function () {
              var body = document.implementation.createHTMLDocument("").body;
              body.innerHTML = "<form></form><form></form>";
              return body.childNodes.length === 2;
            })();

            // Argument "data" should be string of html
            // context (optional): If specified, the fragment will be created in this context,
            // defaults to document
            // keepScripts (optional): If true, will include scripts passed in the html string
            jQuery.parseHTML = function (data, context, keepScripts) {
              if (typeof data !== "string") {
                return [];
              }
              if (typeof context === "boolean") {
                keepScripts = context;
                context = false;
              }

              var base, parsed, scripts;

              if (!context) {
                // Stop scripts or inline event handlers from being executed immediately
                // by using document.implementation
                if (support.createHTMLDocument) {
                  context = document.implementation.createHTMLDocument("");

                  // Set the base href for the created document
                  // so any parsed elements with URLs
                  // are based on the document's URL (gh-2965)
                  base = context.createElement("base");
                  base.href = document.location.href;
                  context.head.appendChild(base);
                } else {
                  context = document;
                }
              }

              parsed = rsingleTag.exec(data);
              scripts = !keepScripts && [];

              // Single tag
              if (parsed) {
                return [context.createElement(parsed[1])];
              }

              parsed = buildFragment([data], context, scripts);

              if (scripts && scripts.length) {
                jQuery(scripts).remove();
              }

              return jQuery.merge([], parsed.childNodes);
            };

            /**
             * Load a url into a page
             */
            jQuery.fn.load = function (url, params, callback) {
              var selector,
                type,
                response,
                self = this,
                off = url.indexOf(" ");

              if (off > -1) {
                selector = stripAndCollapse(url.slice(off));
                url = url.slice(0, off);
              }

              // If it's a function
              if (isFunction(params)) {
                // We assume that it's the callback
                callback = params;
                params = undefined;

                // Otherwise, build a param string
              } else if (params && typeof params === "object") {
                type = "POST";
              }

              // If we have elements to modify, make the request
              if (self.length > 0) {
                jQuery
                  .ajax({
                    url: url,

                    // If "type" variable is undefined, then "GET" method will be used.
                    // Make value of this field explicit since
                    // user can override it through ajaxSetup method
                    type: type || "GET",
                    dataType: "html",
                    data: params,
                  })
                  .done(function (responseText) {
                    // Save response for use in complete callback
                    response = arguments;

                    self.html(
                      selector
                        ? // If a selector was specified, locate the right elements in a dummy div
                          // Exclude scripts to avoid IE 'Permission Denied' errors
                          jQuery("<div>")
                            .append(jQuery.parseHTML(responseText))
                            .find(selector)
                        : // Otherwise use the full result
                          responseText
                    );

                    // If the request succeeds, this function gets "data", "status", "jqXHR"
                    // but they are ignored because response was set above.
                    // If it fails, this function gets "jqXHR", "status", "error"
                  })
                  .always(
                    callback &&
                      function (jqXHR, status) {
                        self.each(function () {
                          callback.apply(
                            this,
                            response || [jqXHR.responseText, status, jqXHR]
                          );
                        });
                      }
                  );
              }

              return this;
            };

            jQuery.expr.pseudos.animated = function (elem) {
              return jQuery.grep(jQuery.timers, function (fn) {
                return elem === fn.elem;
              }).length;
            };

            jQuery.offset = {
              setOffset: function (elem, options, i) {
                var curPosition,
                  curLeft,
                  curCSSTop,
                  curTop,
                  curOffset,
                  curCSSLeft,
                  calculatePosition,
                  position = jQuery.css(elem, "position"),
                  curElem = jQuery(elem),
                  props = {};

                // Set position first, in-case top/left are set even on static elem
                if (position === "static") {
                  elem.style.position = "relative";
                }

                curOffset = curElem.offset();
                curCSSTop = jQuery.css(elem, "top");
                curCSSLeft = jQuery.css(elem, "left");
                calculatePosition =
                  (position === "absolute" || position === "fixed") &&
                  (curCSSTop + curCSSLeft).indexOf("auto") > -1;

                // Need to be able to calculate position if either
                // top or left is auto and position is either absolute or fixed
                if (calculatePosition) {
                  curPosition = curElem.position();
                  curTop = curPosition.top;
                  curLeft = curPosition.left;
                } else {
                  curTop = parseFloat(curCSSTop) || 0;
                  curLeft = parseFloat(curCSSLeft) || 0;
                }

                if (isFunction(options)) {
                  // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
                  options = options.call(elem, i, jQuery.extend({}, curOffset));
                }

                if (options.top != null) {
                  props.top = options.top - curOffset.top + curTop;
                }
                if (options.left != null) {
                  props.left = options.left - curOffset.left + curLeft;
                }

                if ("using" in options) {
                  options.using.call(elem, props);
                } else {
                  curElem.css(props);
                }
              },
            };

            jQuery.fn.extend({
              // offset() relates an element's border box to the document origin
              offset: function (options) {
                // Preserve chaining for setter
                if (arguments.length) {
                  return options === undefined
                    ? this
                    : this.each(function (i) {
                        jQuery.offset.setOffset(this, options, i);
                      });
                }

                var rect,
                  win,
                  elem = this[0];

                if (!elem) {
                  return;
                }

                // Return zeros for disconnected and hidden (display: none) elements (gh-2310)
                // Support: IE <=11 only
                // Running getBoundingClientRect on a
                // disconnected node in IE throws an error
                if (!elem.getClientRects().length) {
                  return { top: 0, left: 0 };
                }

                // Get document-relative position by adding viewport scroll to viewport-relative gBCR
                rect = elem.getBoundingClientRect();
                win = elem.ownerDocument.defaultView;
                return {
                  top: rect.top + win.pageYOffset,
                  left: rect.left + win.pageXOffset,
                };
              },

              // position() relates an element's margin box to its offset parent's padding box
              // This corresponds to the behavior of CSS absolute positioning
              position: function () {
                if (!this[0]) {
                  return;
                }

                var offsetParent,
                  offset,
                  doc,
                  elem = this[0],
                  parentOffset = { top: 0, left: 0 };

                // position:fixed elements are offset from the viewport, which itself always has zero offset
                if (jQuery.css(elem, "position") === "fixed") {
                  // Assume position:fixed implies availability of getBoundingClientRect
                  offset = elem.getBoundingClientRect();
                } else {
                  offset = this.offset();

                  // Account for the *real* offset parent, which can be the document or its root element
                  // when a statically positioned element is identified
                  doc = elem.ownerDocument;
                  offsetParent = elem.offsetParent || doc.documentElement;
                  while (
                    offsetParent &&
                    (offsetParent === doc.body ||
                      offsetParent === doc.documentElement) &&
                    jQuery.css(offsetParent, "position") === "static"
                  ) {
                    offsetParent = offsetParent.parentNode;
                  }
                  if (
                    offsetParent &&
                    offsetParent !== elem &&
                    offsetParent.nodeType === 1
                  ) {
                    // Incorporate borders into its offset, since they are outside its content origin
                    parentOffset = jQuery(offsetParent).offset();
                    parentOffset.top += jQuery.css(
                      offsetParent,
                      "borderTopWidth",
                      true
                    );
                    parentOffset.left += jQuery.css(
                      offsetParent,
                      "borderLeftWidth",
                      true
                    );
                  }
                }

                // Subtract parent offsets and element margins
                return {
                  top:
                    offset.top -
                    parentOffset.top -
                    jQuery.css(elem, "marginTop", true),
                  left:
                    offset.left -
                    parentOffset.left -
                    jQuery.css(elem, "marginLeft", true),
                };
              },

              // This method will return documentElement in the following cases:
              // 1) For the element inside the iframe without offsetParent, this method will return
              //    documentElement of the parent window
              // 2) For the hidden or detached element
              // 3) For body or html element, i.e. in case of the html node - it will return itself
              //
              // but those exceptions were never presented as a real life use-cases
              // and might be considered as more preferable results.
              //
              // This logic, however, is not guaranteed and can change at any point in the future
              offsetParent: function () {
                return this.map(function () {
                  var offsetParent = this.offsetParent;

                  while (
                    offsetParent &&
                    jQuery.css(offsetParent, "position") === "static"
                  ) {
                    offsetParent = offsetParent.offsetParent;
                  }

                  return offsetParent || documentElement;
                });
              },
            });

            // Create scrollLeft and scrollTop methods
            jQuery.each(
              { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" },
              function (method, prop) {
                var top = "pageYOffset" === prop;

                jQuery.fn[method] = function (val) {
                  return access(
                    this,
                    function (elem, method, val) {
                      // Coalesce documents and windows
                      var win;
                      if (isWindow(elem)) {
                        win = elem;
                      } else if (elem.nodeType === 9) {
                        win = elem.defaultView;
                      }

                      if (val === undefined) {
                        return win ? win[prop] : elem[method];
                      }

                      if (win) {
                        win.scrollTo(
                          !top ? val : win.pageXOffset,
                          top ? val : win.pageYOffset
                        );
                      } else {
                        elem[method] = val;
                      }
                    },
                    method,
                    val,
                    arguments.length
                  );
                };
              }
            );

            // Support: Safari <=7 - 9.1, Chrome <=37 - 49
            // Add the top/left cssHooks using jQuery.fn.position
            // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
            // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
            // getComputedStyle returns percent when specified for top/left/bottom/right;
            // rather than make the css module depend on the offset module, just check for it here
            jQuery.each(["top", "left"], function (_i, prop) {
              jQuery.cssHooks[prop] = addGetHookIf(
                support.pixelPosition,
                function (elem, computed) {
                  if (computed) {
                    computed = curCSS(elem, prop);

                    // If curCSS returns percentage, fallback to offset
                    return rnumnonpx.test(computed)
                      ? jQuery(elem).position()[prop] + "px"
                      : computed;
                  }
                }
              );
            });

            // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
            jQuery.each(
              { Height: "height", Width: "width" },
              function (name, type) {
                jQuery.each(
                  {
                    padding: "inner" + name,
                    content: type,
                    "": "outer" + name,
                  },
                  function (defaultExtra, funcName) {
                    // Margin is only for outerHeight, outerWidth
                    jQuery.fn[funcName] = function (margin, value) {
                      var chainable =
                          arguments.length &&
                          (defaultExtra || typeof margin !== "boolean"),
                        extra =
                          defaultExtra ||
                          (margin === true || value === true
                            ? "margin"
                            : "border");

                      return access(
                        this,
                        function (elem, type, value) {
                          var doc;

                          if (isWindow(elem)) {
                            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
                            return funcName.indexOf("outer") === 0
                              ? elem["inner" + name]
                              : elem.document.documentElement["client" + name];
                          }

                          // Get document width or height
                          if (elem.nodeType === 9) {
                            doc = elem.documentElement;

                            // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
                            // whichever is greatest
                            return Math.max(
                              elem.body["scroll" + name],
                              doc["scroll" + name],
                              elem.body["offset" + name],
                              doc["offset" + name],
                              doc["client" + name]
                            );
                          }

                          return value === undefined
                            ? // Get width or height on the element, requesting but not forcing parseFloat
                              jQuery.css(elem, type, extra)
                            : // Set width or height on the element
                              jQuery.style(elem, type, value, extra);
                        },
                        type,
                        chainable ? margin : undefined,
                        chainable
                      );
                    };
                  }
                );
              }
            );

            jQuery.each(
              [
                "ajaxStart",
                "ajaxStop",
                "ajaxComplete",
                "ajaxError",
                "ajaxSuccess",
                "ajaxSend",
              ],
              function (_i, type) {
                jQuery.fn[type] = function (fn) {
                  return this.on(type, fn);
                };
              }
            );

            jQuery.fn.extend({
              bind: function (types, data, fn) {
                return this.on(types, null, data, fn);
              },
              unbind: function (types, fn) {
                return this.off(types, null, fn);
              },

              delegate: function (selector, types, data, fn) {
                return this.on(types, selector, data, fn);
              },
              undelegate: function (selector, types, fn) {
                // ( namespace ) or ( selector, types [, fn] )
                return arguments.length === 1
                  ? this.off(selector, "**")
                  : this.off(types, selector || "**", fn);
              },

              hover: function (fnOver, fnOut) {
                return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
              },
            });

            jQuery.each(
              (
                "blur focus focusin focusout resize scroll click dblclick " +
                "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
                "change select submit keydown keypress keyup contextmenu"
              ).split(" "),
              function (_i, name) {
                // Handle event binding
                jQuery.fn[name] = function (data, fn) {
                  return arguments.length > 0
                    ? this.on(name, null, data, fn)
                    : this.trigger(name);
                };
              }
            );

            // Support: Android <=4.0 only
            // Make sure we trim BOM and NBSP
            var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

            // Bind a function to a context, optionally partially applying any
            // arguments.
            // jQuery.proxy is deprecated to promote standards (specifically Function#bind)
            // However, it is not slated for removal any time soon
            jQuery.proxy = function (fn, context) {
              var tmp, args, proxy;

              if (typeof context === "string") {
                tmp = fn[context];
                context = fn;
                fn = tmp;
              }

              // Quick check to determine if target is callable, in the spec
              // this throws a TypeError, but we will just return undefined.
              if (!isFunction(fn)) {
                return undefined;
              }

              // Simulated bind
              args = slice.call(arguments, 2);
              proxy = function () {
                return fn.apply(
                  context || this,
                  args.concat(slice.call(arguments))
                );
              };

              // Set the guid of unique handler to the same of original handler, so it can be removed
              proxy.guid = fn.guid = fn.guid || jQuery.guid++;

              return proxy;
            };

            jQuery.holdReady = function (hold) {
              if (hold) {
                jQuery.readyWait++;
              } else {
                jQuery.ready(true);
              }
            };
            jQuery.isArray = Array.isArray;
            jQuery.parseJSON = JSON.parse;
            jQuery.nodeName = nodeName;
            jQuery.isFunction = isFunction;
            jQuery.isWindow = isWindow;
            jQuery.camelCase = camelCase;
            jQuery.type = toType;

            jQuery.now = Date.now;

            jQuery.isNumeric = function (obj) {
              // As of jQuery 3.0, isNumeric is limited to
              // strings and numbers (primitives or objects)
              // that can be coerced to finite numbers (gh-2662)
              var type = jQuery.type(obj);
              return (
                (type === "number" || type === "string") &&
                // parseFloat NaNs numeric-cast false positives ("")
                // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
                // subtraction forces infinities to NaN
                !isNaN(obj - parseFloat(obj))
              );
            };

            jQuery.trim = function (text) {
              return text == null ? "" : (text + "").replace(rtrim, "");
            };

            // Register as a named AMD module, since jQuery can be concatenated with other
            // files that may use define, but not via a proper concatenation script that
            // understands anonymous AMD modules. A named AMD is safest and most robust
            // way to register. Lowercase jquery is used because AMD module names are
            // derived from file names, and jQuery is normally delivered in a lowercase
            // file name. Do this after creating the global so that if an AMD module wants
            // to call noConflict to hide this version of jQuery, it will work.

            // Note that for maximum portability, libraries that are not jQuery should
            // declare themselves as anonymous modules, and avoid setting a global if an
            // AMD loader is present. jQuery is a special case. For more information, see
            // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

            if (true) {
              !((__WEBPACK_AMD_DEFINE_ARRAY__ = []),
              (__WEBPACK_AMD_DEFINE_RESULT__ = function () {
                return jQuery;
              }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
              __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
                (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
            }

            var // Map over jQuery in case of overwrite
              _jQuery = window.jQuery,
              // Map over the $ in case of overwrite
              _$ = window.$;

            jQuery.noConflict = function (deep) {
              if (window.$ === jQuery) {
                window.$ = _$;
              }

              if (deep && window.jQuery === jQuery) {
                window.jQuery = _jQuery;
              }

              return jQuery;
            };

            // Expose jQuery and $ identifiers, even in AMD
            // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
            // and CommonJS for browser emulators (#13566)
            if (typeof noGlobal === "undefined") {
              window.jQuery = window.$ = jQuery;
            }

            return jQuery;
          }
        );

        /***/
      },
      /* 119 */
      /***/ function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /*!
         * Knockout JavaScript library v3.5.1
         * (c) The Knockout.js team - http://knockoutjs.com/
         * License: MIT (http://www.opensource.org/licenses/mit-license.php)
         */

        (function () {
          (function (n) {
            var A = this || (0, eval)("this"),
              w = A.document,
              R = A.navigator,
              v = A.jQuery,
              H = A.JSON;
            v || "undefined" === typeof jQuery || (v = jQuery);
            (function (n) {
              true
                ? !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
                    exports,
                    __webpack_require__,
                  ]),
                  (__WEBPACK_AMD_DEFINE_FACTORY__ = n),
                  (__WEBPACK_AMD_DEFINE_RESULT__ =
                    typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function"
                      ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(
                          exports,
                          __WEBPACK_AMD_DEFINE_ARRAY__
                        )
                      : __WEBPACK_AMD_DEFINE_FACTORY__),
                  __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
                    (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
                : "object" === typeof exports && "object" === typeof module
                ? n(module.exports || exports)
                : n((A.ko = {}));
            })(function (S, T) {
              function K(a, c) {
                return null === a || typeof a in W ? a === c : !1;
              }
              function X(b, c) {
                var d;
                return function () {
                  d ||
                    (d = a.a.setTimeout(function () {
                      d = n;
                      b();
                    }, c));
                };
              }
              function Y(b, c) {
                var d;
                return function () {
                  clearTimeout(d);
                  d = a.a.setTimeout(b, c);
                };
              }
              function Z(a, c) {
                c && "change" !== c
                  ? "beforeChange" === c
                    ? this.pc(a)
                    : this.gb(a, c)
                  : this.qc(a);
              }
              function aa(a, c) {
                null !== c && c.s && c.s();
              }
              function ba(a, c) {
                var d = this.qd,
                  e = d[r];
                e.ra ||
                  (this.Qb && this.mb[c]
                    ? (d.uc(c, a, this.mb[c]), (this.mb[c] = null), --this.Qb)
                    : e.I[c] || d.uc(c, a, e.J ? { da: a } : d.$c(a)),
                  a.Ja && a.gd());
              }
              var a = "undefined" !== typeof S ? S : {};
              a.b = function (b, c) {
                for (var d = b.split("."), e = a, f = 0; f < d.length - 1; f++)
                  e = e[d[f]];
                e[d[d.length - 1]] = c;
              };
              a.L = function (a, c, d) {
                a[c] = d;
              };
              a.version = "3.5.1";
              a.b("version", a.version);
              a.options = {
                deferUpdates: !1,
                useOnlyNativeEvents: !1,
                foreachHidesDestroyed: !1,
              };
              a.a = (function () {
                function b(a, b) {
                  for (var c in a) f.call(a, c) && b(c, a[c]);
                }
                function c(a, b) {
                  if (b) for (var c in b) f.call(b, c) && (a[c] = b[c]);
                  return a;
                }
                function d(a, b) {
                  a.__proto__ = b;
                  return a;
                }
                function e(b, c, d, e) {
                  var l = b[c].match(q) || [];
                  a.a.D(d.match(q), function (b) {
                    a.a.Na(l, b, e);
                  });
                  b[c] = l.join(" ");
                }
                var f = Object.prototype.hasOwnProperty,
                  g = { __proto__: [] } instanceof Array,
                  h = "function" === typeof Symbol,
                  m = {},
                  k = {};
                m[
                  R && /Firefox\/2/i.test(R.userAgent)
                    ? "KeyboardEvent"
                    : "UIEvents"
                ] = ["keyup", "keydown", "keypress"];
                m.MouseEvents =
                  "click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave".split(
                    " "
                  );
                b(m, function (a, b) {
                  if (b.length)
                    for (var c = 0, d = b.length; c < d; c++) k[b[c]] = a;
                });
                var l = { propertychange: !0 },
                  p =
                    w &&
                    (function () {
                      for (
                        var a = 3,
                          b = w.createElement("div"),
                          c = b.getElementsByTagName("i");
                        (b.innerHTML =
                          "\x3c!--[if gt IE " +
                          ++a +
                          "]><i></i><![endif]--\x3e"),
                          c[0];

                      );
                      return 4 < a ? a : n;
                    })(),
                  q = /\S+/g,
                  t;
                return {
                  Jc: [
                    "authenticity_token",
                    /^__RequestVerificationToken(_.*)?$/,
                  ],
                  D: function (a, b, c) {
                    for (var d = 0, e = a.length; d < e; d++)
                      b.call(c, a[d], d, a);
                  },
                  A:
                    "function" == typeof Array.prototype.indexOf
                      ? function (a, b) {
                          return Array.prototype.indexOf.call(a, b);
                        }
                      : function (a, b) {
                          for (var c = 0, d = a.length; c < d; c++)
                            if (a[c] === b) return c;
                          return -1;
                        },
                  Lb: function (a, b, c) {
                    for (var d = 0, e = a.length; d < e; d++)
                      if (b.call(c, a[d], d, a)) return a[d];
                    return n;
                  },
                  Pa: function (b, c) {
                    var d = a.a.A(b, c);
                    0 < d ? b.splice(d, 1) : 0 === d && b.shift();
                  },
                  wc: function (b) {
                    var c = [];
                    b &&
                      a.a.D(b, function (b) {
                        0 > a.a.A(c, b) && c.push(b);
                      });
                    return c;
                  },
                  Mb: function (a, b, c) {
                    var d = [];
                    if (a)
                      for (var e = 0, l = a.length; e < l; e++)
                        d.push(b.call(c, a[e], e));
                    return d;
                  },
                  jb: function (a, b, c) {
                    var d = [];
                    if (a)
                      for (var e = 0, l = a.length; e < l; e++)
                        b.call(c, a[e], e) && d.push(a[e]);
                    return d;
                  },
                  Nb: function (a, b) {
                    if (b instanceof Array) a.push.apply(a, b);
                    else for (var c = 0, d = b.length; c < d; c++) a.push(b[c]);
                    return a;
                  },
                  Na: function (b, c, d) {
                    var e = a.a.A(a.a.bc(b), c);
                    0 > e ? d && b.push(c) : d || b.splice(e, 1);
                  },
                  Ba: g,
                  extend: c,
                  setPrototypeOf: d,
                  Ab: g ? d : c,
                  P: b,
                  Ga: function (a, b, c) {
                    if (!a) return a;
                    var d = {},
                      e;
                    for (e in a) f.call(a, e) && (d[e] = b.call(c, a[e], e, a));
                    return d;
                  },
                  Tb: function (b) {
                    for (; b.firstChild; ) a.removeNode(b.firstChild);
                  },
                  Yb: function (b) {
                    b = a.a.la(b);
                    for (
                      var c = ((b[0] && b[0].ownerDocument) || w).createElement(
                          "div"
                        ),
                        d = 0,
                        e = b.length;
                      d < e;
                      d++
                    )
                      c.appendChild(a.oa(b[d]));
                    return c;
                  },
                  Ca: function (b, c) {
                    for (var d = 0, e = b.length, l = []; d < e; d++) {
                      var k = b[d].cloneNode(!0);
                      l.push(c ? a.oa(k) : k);
                    }
                    return l;
                  },
                  va: function (b, c) {
                    a.a.Tb(b);
                    if (c)
                      for (var d = 0, e = c.length; d < e; d++)
                        b.appendChild(c[d]);
                  },
                  Xc: function (b, c) {
                    var d = b.nodeType ? [b] : b;
                    if (0 < d.length) {
                      for (
                        var e = d[0], l = e.parentNode, k = 0, f = c.length;
                        k < f;
                        k++
                      )
                        l.insertBefore(c[k], e);
                      k = 0;
                      for (f = d.length; k < f; k++) a.removeNode(d[k]);
                    }
                  },
                  Ua: function (a, b) {
                    if (a.length) {
                      for (
                        b = (8 === b.nodeType && b.parentNode) || b;
                        a.length && a[0].parentNode !== b;

                      )
                        a.splice(0, 1);
                      for (; 1 < a.length && a[a.length - 1].parentNode !== b; )
                        a.length--;
                      if (1 < a.length) {
                        var c = a[0],
                          d = a[a.length - 1];
                        for (a.length = 0; c !== d; )
                          a.push(c), (c = c.nextSibling);
                        a.push(d);
                      }
                    }
                    return a;
                  },
                  Zc: function (a, b) {
                    7 > p ? a.setAttribute("selected", b) : (a.selected = b);
                  },
                  Db: function (a) {
                    return null === a || a === n
                      ? ""
                      : a.trim
                      ? a.trim()
                      : a.toString().replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
                  },
                  Ud: function (a, b) {
                    a = a || "";
                    return b.length > a.length
                      ? !1
                      : a.substring(0, b.length) === b;
                  },
                  vd: function (a, b) {
                    if (a === b) return !0;
                    if (11 === a.nodeType) return !1;
                    if (b.contains)
                      return b.contains(1 !== a.nodeType ? a.parentNode : a);
                    if (b.compareDocumentPosition)
                      return 16 == (b.compareDocumentPosition(a) & 16);
                    for (; a && a != b; ) a = a.parentNode;
                    return !!a;
                  },
                  Sb: function (b) {
                    return a.a.vd(b, b.ownerDocument.documentElement);
                  },
                  kd: function (b) {
                    return !!a.a.Lb(b, a.a.Sb);
                  },
                  R: function (a) {
                    return a && a.tagName && a.tagName.toLowerCase();
                  },
                  Ac: function (b) {
                    return a.onError
                      ? function () {
                          try {
                            return b.apply(this, arguments);
                          } catch (c) {
                            throw (a.onError && a.onError(c), c);
                          }
                        }
                      : b;
                  },
                  setTimeout: function (b, c) {
                    return setTimeout(a.a.Ac(b), c);
                  },
                  Gc: function (b) {
                    setTimeout(function () {
                      a.onError && a.onError(b);
                      throw b;
                    }, 0);
                  },
                  B: function (b, c, d) {
                    var e = a.a.Ac(d);
                    d = l[c];
                    if (a.options.useOnlyNativeEvents || d || !v)
                      if (d || "function" != typeof b.addEventListener)
                        if ("undefined" != typeof b.attachEvent) {
                          var k = function (a) {
                              e.call(b, a);
                            },
                            f = "on" + c;
                          b.attachEvent(f, k);
                          a.a.K.za(b, function () {
                            b.detachEvent(f, k);
                          });
                        } else
                          throw Error(
                            "Browser doesn't support addEventListener or attachEvent"
                          );
                      else b.addEventListener(c, e, !1);
                    else
                      t || (t = "function" == typeof v(b).on ? "on" : "bind"),
                        v(b)[t](c, e);
                  },
                  Fb: function (b, c) {
                    if (!b || !b.nodeType)
                      throw Error(
                        "element must be a DOM node when calling triggerEvent"
                      );
                    var d;
                    "input" === a.a.R(b) && b.type && "click" == c.toLowerCase()
                      ? ((d = b.type), (d = "checkbox" == d || "radio" == d))
                      : (d = !1);
                    if (a.options.useOnlyNativeEvents || !v || d)
                      if ("function" == typeof w.createEvent)
                        if ("function" == typeof b.dispatchEvent)
                          (d = w.createEvent(k[c] || "HTMLEvents")),
                            d.initEvent(
                              c,
                              !0,
                              !0,
                              A,
                              0,
                              0,
                              0,
                              0,
                              0,
                              !1,
                              !1,
                              !1,
                              !1,
                              0,
                              b
                            ),
                            b.dispatchEvent(d);
                        else
                          throw Error(
                            "The supplied element doesn't support dispatchEvent"
                          );
                      else if (d && b.click) b.click();
                      else if ("undefined" != typeof b.fireEvent)
                        b.fireEvent("on" + c);
                      else
                        throw Error(
                          "Browser doesn't support triggering events"
                        );
                    else v(b).trigger(c);
                  },
                  f: function (b) {
                    return a.O(b) ? b() : b;
                  },
                  bc: function (b) {
                    return a.O(b) ? b.v() : b;
                  },
                  Eb: function (b, c, d) {
                    var l;
                    c &&
                      ("object" === typeof b.classList
                        ? ((l = b.classList[d ? "add" : "remove"]),
                          a.a.D(c.match(q), function (a) {
                            l.call(b.classList, a);
                          }))
                        : "string" === typeof b.className.baseVal
                        ? e(b.className, "baseVal", c, d)
                        : e(b, "className", c, d));
                  },
                  Bb: function (b, c) {
                    var d = a.a.f(c);
                    if (null === d || d === n) d = "";
                    var e = a.h.firstChild(b);
                    !e || 3 != e.nodeType || a.h.nextSibling(e)
                      ? a.h.va(b, [b.ownerDocument.createTextNode(d)])
                      : (e.data = d);
                    a.a.Ad(b);
                  },
                  Yc: function (a, b) {
                    a.name = b;
                    if (7 >= p)
                      try {
                        var c = a.name.replace(/[&<>'"]/g, function (a) {
                          return "&#" + a.charCodeAt(0) + ";";
                        });
                        a.mergeAttributes(
                          w.createElement("<input name='" + c + "'/>"),
                          !1
                        );
                      } catch (d) {}
                  },
                  Ad: function (a) {
                    9 <= p &&
                      ((a = 1 == a.nodeType ? a : a.parentNode),
                      a.style && (a.style.zoom = a.style.zoom));
                  },
                  wd: function (a) {
                    if (p) {
                      var b = a.style.width;
                      a.style.width = 0;
                      a.style.width = b;
                    }
                  },
                  Pd: function (b, c) {
                    b = a.a.f(b);
                    c = a.a.f(c);
                    for (var d = [], e = b; e <= c; e++) d.push(e);
                    return d;
                  },
                  la: function (a) {
                    for (var b = [], c = 0, d = a.length; c < d; c++)
                      b.push(a[c]);
                    return b;
                  },
                  Da: function (a) {
                    return h ? Symbol(a) : a;
                  },
                  Zd: 6 === p,
                  $d: 7 === p,
                  W: p,
                  Lc: function (b, c) {
                    for (
                      var d = a.a
                          .la(b.getElementsByTagName("input"))
                          .concat(a.a.la(b.getElementsByTagName("textarea"))),
                        e =
                          "string" == typeof c
                            ? function (a) {
                                return a.name === c;
                              }
                            : function (a) {
                                return c.test(a.name);
                              },
                        l = [],
                        k = d.length - 1;
                      0 <= k;
                      k--
                    )
                      e(d[k]) && l.push(d[k]);
                    return l;
                  },
                  Nd: function (b) {
                    return "string" == typeof b && (b = a.a.Db(b))
                      ? H && H.parse
                        ? H.parse(b)
                        : new Function("return " + b)()
                      : null;
                  },
                  hc: function (b, c, d) {
                    if (!H || !H.stringify)
                      throw Error(
                        "Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js"
                      );
                    return H.stringify(a.a.f(b), c, d);
                  },
                  Od: function (c, d, e) {
                    e = e || {};
                    var l = e.params || {},
                      k = e.includeFields || this.Jc,
                      f = c;
                    if ("object" == typeof c && "form" === a.a.R(c))
                      for (var f = c.action, h = k.length - 1; 0 <= h; h--)
                        for (
                          var g = a.a.Lc(c, k[h]), m = g.length - 1;
                          0 <= m;
                          m--
                        )
                          l[g[m].name] = g[m].value;
                    d = a.a.f(d);
                    var p = w.createElement("form");
                    p.style.display = "none";
                    p.action = f;
                    p.method = "post";
                    for (var q in d)
                      (c = w.createElement("input")),
                        (c.type = "hidden"),
                        (c.name = q),
                        (c.value = a.a.hc(a.a.f(d[q]))),
                        p.appendChild(c);
                    b(l, function (a, b) {
                      var c = w.createElement("input");
                      c.type = "hidden";
                      c.name = a;
                      c.value = b;
                      p.appendChild(c);
                    });
                    w.body.appendChild(p);
                    e.submitter ? e.submitter(p) : p.submit();
                    setTimeout(function () {
                      p.parentNode.removeChild(p);
                    }, 0);
                  },
                };
              })();
              a.b("utils", a.a);
              a.b("utils.arrayForEach", a.a.D);
              a.b("utils.arrayFirst", a.a.Lb);
              a.b("utils.arrayFilter", a.a.jb);
              a.b("utils.arrayGetDistinctValues", a.a.wc);
              a.b("utils.arrayIndexOf", a.a.A);
              a.b("utils.arrayMap", a.a.Mb);
              a.b("utils.arrayPushAll", a.a.Nb);
              a.b("utils.arrayRemoveItem", a.a.Pa);
              a.b("utils.cloneNodes", a.a.Ca);
              a.b("utils.createSymbolOrString", a.a.Da);
              a.b("utils.extend", a.a.extend);
              a.b("utils.fieldsIncludedWithJsonPost", a.a.Jc);
              a.b("utils.getFormFields", a.a.Lc);
              a.b("utils.objectMap", a.a.Ga);
              a.b("utils.peekObservable", a.a.bc);
              a.b("utils.postJson", a.a.Od);
              a.b("utils.parseJson", a.a.Nd);
              a.b("utils.registerEventHandler", a.a.B);
              a.b("utils.stringifyJson", a.a.hc);
              a.b("utils.range", a.a.Pd);
              a.b("utils.toggleDomNodeCssClass", a.a.Eb);
              a.b("utils.triggerEvent", a.a.Fb);
              a.b("utils.unwrapObservable", a.a.f);
              a.b("utils.objectForEach", a.a.P);
              a.b("utils.addOrRemoveItem", a.a.Na);
              a.b("utils.setTextContent", a.a.Bb);
              a.b("unwrap", a.a.f);
              Function.prototype.bind ||
                (Function.prototype.bind = function (a) {
                  var c = this;
                  if (1 === arguments.length)
                    return function () {
                      return c.apply(a, arguments);
                    };
                  var d = Array.prototype.slice.call(arguments, 1);
                  return function () {
                    var e = d.slice(0);
                    e.push.apply(e, arguments);
                    return c.apply(a, e);
                  };
                });
              a.a.g = new (function () {
                var b = 0,
                  c = "__ko__" + new Date().getTime(),
                  d = {},
                  e,
                  f;
                a.a.W
                  ? ((e = function (a, e) {
                      var f = a[c];
                      if (!f || "null" === f || !d[f]) {
                        if (!e) return n;
                        f = a[c] = "ko" + b++;
                        d[f] = {};
                      }
                      return d[f];
                    }),
                    (f = function (a) {
                      var b = a[c];
                      return b ? (delete d[b], (a[c] = null), !0) : !1;
                    }))
                  : ((e = function (a, b) {
                      var d = a[c];
                      !d && b && (d = a[c] = {});
                      return d;
                    }),
                    (f = function (a) {
                      return a[c] ? (delete a[c], !0) : !1;
                    }));
                return {
                  get: function (a, b) {
                    var c = e(a, !1);
                    return c && c[b];
                  },
                  set: function (a, b, c) {
                    (a = e(a, c !== n)) && (a[b] = c);
                  },
                  Ub: function (a, b, c) {
                    a = e(a, !0);
                    return a[b] || (a[b] = c);
                  },
                  clear: f,
                  Z: function () {
                    return b++ + c;
                  },
                };
              })();
              a.b("utils.domData", a.a.g);
              a.b("utils.domData.clear", a.a.g.clear);
              a.a.K = new (function () {
                function b(b, c) {
                  var d = a.a.g.get(b, e);
                  d === n && c && ((d = []), a.a.g.set(b, e, d));
                  return d;
                }
                function c(c) {
                  var e = b(c, !1);
                  if (e)
                    for (var e = e.slice(0), k = 0; k < e.length; k++) e[k](c);
                  a.a.g.clear(c);
                  a.a.K.cleanExternalData(c);
                  g[c.nodeType] && d(c.childNodes, !0);
                }
                function d(b, d) {
                  for (var e = [], l, f = 0; f < b.length; f++)
                    if (!d || 8 === b[f].nodeType)
                      if ((c((e[e.length] = l = b[f])), b[f] !== l))
                        for (; f-- && -1 == a.a.A(e, b[f]); );
                }
                var e = a.a.g.Z(),
                  f = { 1: !0, 8: !0, 9: !0 },
                  g = { 1: !0, 9: !0 };
                return {
                  za: function (a, c) {
                    if ("function" != typeof c)
                      throw Error("Callback must be a function");
                    b(a, !0).push(c);
                  },
                  yb: function (c, d) {
                    var f = b(c, !1);
                    f && (a.a.Pa(f, d), 0 == f.length && a.a.g.set(c, e, n));
                  },
                  oa: function (b) {
                    a.u.G(function () {
                      f[b.nodeType] &&
                        (c(b), g[b.nodeType] && d(b.getElementsByTagName("*")));
                    });
                    return b;
                  },
                  removeNode: function (b) {
                    a.oa(b);
                    b.parentNode && b.parentNode.removeChild(b);
                  },
                  cleanExternalData: function (a) {
                    v && "function" == typeof v.cleanData && v.cleanData([a]);
                  },
                };
              })();
              a.oa = a.a.K.oa;
              a.removeNode = a.a.K.removeNode;
              a.b("cleanNode", a.oa);
              a.b("removeNode", a.removeNode);
              a.b("utils.domNodeDisposal", a.a.K);
              a.b("utils.domNodeDisposal.addDisposeCallback", a.a.K.za);
              a.b("utils.domNodeDisposal.removeDisposeCallback", a.a.K.yb);
              (function () {
                var b = [0, "", ""],
                  c = [1, "<table>", "</table>"],
                  d = [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                  e = [1, "<select multiple='multiple'>", "</select>"],
                  f = {
                    thead: c,
                    tbody: c,
                    tfoot: c,
                    tr: [2, "<table><tbody>", "</tbody></table>"],
                    td: d,
                    th: d,
                    option: e,
                    optgroup: e,
                  },
                  g = 8 >= a.a.W;
                a.a.ua = function (c, d) {
                  var e;
                  if (v)
                    if (v.parseHTML) e = v.parseHTML(c, d) || [];
                    else {
                      if ((e = v.clean([c], d)) && e[0]) {
                        for (
                          var l = e[0];
                          l.parentNode && 11 !== l.parentNode.nodeType;

                        )
                          l = l.parentNode;
                        l.parentNode && l.parentNode.removeChild(l);
                      }
                    }
                  else {
                    (e = d) || (e = w);
                    var l = e.parentWindow || e.defaultView || A,
                      p = a.a.Db(c).toLowerCase(),
                      q = e.createElement("div"),
                      t;
                    t =
                      ((p = p.match(
                        /^(?:\x3c!--.*?--\x3e\s*?)*?<([a-z]+)[\s>]/
                      )) &&
                        f[p[1]]) ||
                      b;
                    p = t[0];
                    t = "ignored<div>" + t[1] + c + t[2] + "</div>";
                    "function" == typeof l.innerShiv
                      ? q.appendChild(l.innerShiv(t))
                      : (g && e.body.appendChild(q),
                        (q.innerHTML = t),
                        g && q.parentNode.removeChild(q));
                    for (; p--; ) q = q.lastChild;
                    e = a.a.la(q.lastChild.childNodes);
                  }
                  return e;
                };
                a.a.Md = function (b, c) {
                  var d = a.a.ua(b, c);
                  return (d.length && d[0].parentElement) || a.a.Yb(d);
                };
                a.a.fc = function (b, c) {
                  a.a.Tb(b);
                  c = a.a.f(c);
                  if (null !== c && c !== n)
                    if (("string" != typeof c && (c = c.toString()), v))
                      v(b).html(c);
                    else
                      for (
                        var d = a.a.ua(c, b.ownerDocument), e = 0;
                        e < d.length;
                        e++
                      )
                        b.appendChild(d[e]);
                };
              })();
              a.b("utils.parseHtmlFragment", a.a.ua);
              a.b("utils.setHtml", a.a.fc);
              a.aa = (function () {
                function b(c, e) {
                  if (c)
                    if (8 == c.nodeType) {
                      var f = a.aa.Uc(c.nodeValue);
                      null != f && e.push({ ud: c, Kd: f });
                    } else if (1 == c.nodeType)
                      for (
                        var f = 0, g = c.childNodes, h = g.length;
                        f < h;
                        f++
                      )
                        b(g[f], e);
                }
                var c = {};
                return {
                  Xb: function (a) {
                    if ("function" != typeof a)
                      throw Error(
                        "You can only pass a function to ko.memoization.memoize()"
                      );
                    var b =
                      ((4294967296 * (1 + Math.random())) | 0)
                        .toString(16)
                        .substring(1) +
                      ((4294967296 * (1 + Math.random())) | 0)
                        .toString(16)
                        .substring(1);
                    c[b] = a;
                    return "\x3c!--[ko_memo:" + b + "]--\x3e";
                  },
                  bd: function (a, b) {
                    var f = c[a];
                    if (f === n)
                      throw Error(
                        "Couldn't find any memo with ID " +
                          a +
                          ". Perhaps it's already been unmemoized."
                      );
                    try {
                      return f.apply(null, b || []), !0;
                    } finally {
                      delete c[a];
                    }
                  },
                  cd: function (c, e) {
                    var f = [];
                    b(c, f);
                    for (var g = 0, h = f.length; g < h; g++) {
                      var m = f[g].ud,
                        k = [m];
                      e && a.a.Nb(k, e);
                      a.aa.bd(f[g].Kd, k);
                      m.nodeValue = "";
                      m.parentNode && m.parentNode.removeChild(m);
                    }
                  },
                  Uc: function (a) {
                    return (a = a.match(/^\[ko_memo\:(.*?)\]$/)) ? a[1] : null;
                  },
                };
              })();
              a.b("memoization", a.aa);
              a.b("memoization.memoize", a.aa.Xb);
              a.b("memoization.unmemoize", a.aa.bd);
              a.b("memoization.parseMemoText", a.aa.Uc);
              a.b("memoization.unmemoizeDomNodeAndDescendants", a.aa.cd);
              a.na = (function () {
                function b() {
                  if (f)
                    for (var b = f, c = 0, d; h < f; )
                      if ((d = e[h++])) {
                        if (h > b) {
                          if (5e3 <= ++c) {
                            h = f;
                            a.a.Gc(
                              Error(
                                "'Too much recursion' after processing " +
                                  c +
                                  " task groups."
                              )
                            );
                            break;
                          }
                          b = f;
                        }
                        try {
                          d();
                        } catch (p) {
                          a.a.Gc(p);
                        }
                      }
                }
                function c() {
                  b();
                  h = f = e.length = 0;
                }
                var d,
                  e = [],
                  f = 0,
                  g = 1,
                  h = 0;
                A.MutationObserver
                  ? (d = (function (a) {
                      var b = w.createElement("div");
                      new MutationObserver(a).observe(b, { attributes: !0 });
                      return function () {
                        b.classList.toggle("foo");
                      };
                    })(c))
                  : (d =
                      w && "onreadystatechange" in w.createElement("script")
                        ? function (a) {
                            var b = w.createElement("script");
                            b.onreadystatechange = function () {
                              b.onreadystatechange = null;
                              w.documentElement.removeChild(b);
                              b = null;
                              a();
                            };
                            w.documentElement.appendChild(b);
                          }
                        : function (a) {
                            setTimeout(a, 0);
                          });
                return {
                  scheduler: d,
                  zb: function (b) {
                    f || a.na.scheduler(c);
                    e[f++] = b;
                    return g++;
                  },
                  cancel: function (a) {
                    a = a - (g - f);
                    a >= h && a < f && (e[a] = null);
                  },
                  resetForTesting: function () {
                    var a = f - h;
                    h = f = e.length = 0;
                    return a;
                  },
                  Sd: b,
                };
              })();
              a.b("tasks", a.na);
              a.b("tasks.schedule", a.na.zb);
              a.b("tasks.runEarly", a.na.Sd);
              a.Ta = {
                throttle: function (b, c) {
                  b.throttleEvaluation = c;
                  var d = null;
                  return a.$({
                    read: b,
                    write: function (e) {
                      clearTimeout(d);
                      d = a.a.setTimeout(function () {
                        b(e);
                      }, c);
                    },
                  });
                },
                rateLimit: function (a, c) {
                  var d, e, f;
                  "number" == typeof c
                    ? (d = c)
                    : ((d = c.timeout), (e = c.method));
                  a.Hb = !1;
                  f =
                    "function" == typeof e
                      ? e
                      : "notifyWhenChangesStop" == e
                      ? Y
                      : X;
                  a.ub(function (a) {
                    return f(a, d, c);
                  });
                },
                deferred: function (b, c) {
                  if (!0 !== c)
                    throw Error(
                      "The 'deferred' extender only accepts the value 'true', because it is not supported to turn deferral off once enabled."
                    );
                  b.Hb ||
                    ((b.Hb = !0),
                    b.ub(function (c) {
                      var e,
                        f = !1;
                      return function () {
                        if (!f) {
                          a.na.cancel(e);
                          e = a.na.zb(c);
                          try {
                            (f = !0), b.notifySubscribers(n, "dirty");
                          } finally {
                            f = !1;
                          }
                        }
                      };
                    }));
                },
                notify: function (a, c) {
                  a.equalityComparer = "always" == c ? null : K;
                },
              };
              var W = { undefined: 1, boolean: 1, number: 1, string: 1 };
              a.b("extenders", a.Ta);
              a.ic = function (b, c, d) {
                this.da = b;
                this.lc = c;
                this.mc = d;
                this.Ib = !1;
                this.fb = this.Jb = null;
                a.L(this, "dispose", this.s);
                a.L(this, "disposeWhenNodeIsRemoved", this.l);
              };
              a.ic.prototype.s = function () {
                this.Ib ||
                  (this.fb && a.a.K.yb(this.Jb, this.fb),
                  (this.Ib = !0),
                  this.mc(),
                  (this.da = this.lc = this.mc = this.Jb = this.fb = null));
              };
              a.ic.prototype.l = function (b) {
                this.Jb = b;
                a.a.K.za(b, (this.fb = this.s.bind(this)));
              };
              a.T = function () {
                a.a.Ab(this, D);
                D.qb(this);
              };
              var D = {
                qb: function (a) {
                  a.U = { change: [] };
                  a.sc = 1;
                },
                subscribe: function (b, c, d) {
                  var e = this;
                  d = d || "change";
                  var f = new a.ic(e, c ? b.bind(c) : b, function () {
                    a.a.Pa(e.U[d], f);
                    e.hb && e.hb(d);
                  });
                  e.Qa && e.Qa(d);
                  e.U[d] || (e.U[d] = []);
                  e.U[d].push(f);
                  return f;
                },
                notifySubscribers: function (b, c) {
                  c = c || "change";
                  "change" === c && this.Gb();
                  if (this.Wa(c)) {
                    var d = ("change" === c && this.ed) || this.U[c].slice(0);
                    try {
                      a.u.xc();
                      for (var e = 0, f; (f = d[e]); ++e) f.Ib || f.lc(b);
                    } finally {
                      a.u.end();
                    }
                  }
                },
                ob: function () {
                  return this.sc;
                },
                Dd: function (a) {
                  return this.ob() !== a;
                },
                Gb: function () {
                  ++this.sc;
                },
                ub: function (b) {
                  var c = this,
                    d = a.O(c),
                    e,
                    f,
                    g,
                    h,
                    m;
                  c.gb ||
                    ((c.gb = c.notifySubscribers), (c.notifySubscribers = Z));
                  var k = b(function () {
                    c.Ja = !1;
                    d && h === c && (h = c.nc ? c.nc() : c());
                    var a = f || (m && c.sb(g, h));
                    m = f = e = !1;
                    a && c.gb((g = h));
                  });
                  c.qc = function (a, b) {
                    (b && c.Ja) || (m = !b);
                    c.ed = c.U.change.slice(0);
                    c.Ja = e = !0;
                    h = a;
                    k();
                  };
                  c.pc = function (a) {
                    e || ((g = a), c.gb(a, "beforeChange"));
                  };
                  c.rc = function () {
                    m = !0;
                  };
                  c.gd = function () {
                    c.sb(g, c.v(!0)) && (f = !0);
                  };
                },
                Wa: function (a) {
                  return this.U[a] && this.U[a].length;
                },
                Bd: function (b) {
                  if (b) return (this.U[b] && this.U[b].length) || 0;
                  var c = 0;
                  a.a.P(this.U, function (a, b) {
                    "dirty" !== a && (c += b.length);
                  });
                  return c;
                },
                sb: function (a, c) {
                  return !this.equalityComparer || !this.equalityComparer(a, c);
                },
                toString: function () {
                  return "[object Object]";
                },
                extend: function (b) {
                  var c = this;
                  b &&
                    a.a.P(b, function (b, e) {
                      var f = a.Ta[b];
                      "function" == typeof f && (c = f(c, e) || c);
                    });
                  return c;
                },
              };
              a.L(D, "init", D.qb);
              a.L(D, "subscribe", D.subscribe);
              a.L(D, "extend", D.extend);
              a.L(D, "getSubscriptionsCount", D.Bd);
              a.a.Ba && a.a.setPrototypeOf(D, Function.prototype);
              a.T.fn = D;
              a.Qc = function (a) {
                return (
                  null != a &&
                  "function" == typeof a.subscribe &&
                  "function" == typeof a.notifySubscribers
                );
              };
              a.b("subscribable", a.T);
              a.b("isSubscribable", a.Qc);
              a.S = a.u = (function () {
                function b(a) {
                  d.push(e);
                  e = a;
                }
                function c() {
                  e = d.pop();
                }
                var d = [],
                  e,
                  f = 0;
                return {
                  xc: b,
                  end: c,
                  cc: function (b) {
                    if (e) {
                      if (!a.Qc(b))
                        throw Error(
                          "Only subscribable things can act as dependencies"
                        );
                      e.od.call(e.pd, b, b.fd || (b.fd = ++f));
                    }
                  },
                  G: function (a, d, e) {
                    try {
                      return b(), a.apply(d, e || []);
                    } finally {
                      c();
                    }
                  },
                  qa: function () {
                    if (e) return e.o.qa();
                  },
                  Va: function () {
                    if (e) return e.o.Va();
                  },
                  Ya: function () {
                    if (e) return e.Ya;
                  },
                  o: function () {
                    if (e) return e.o;
                  },
                };
              })();
              a.b("computedContext", a.S);
              a.b("computedContext.getDependenciesCount", a.S.qa);
              a.b("computedContext.getDependencies", a.S.Va);
              a.b("computedContext.isInitial", a.S.Ya);
              a.b("computedContext.registerDependency", a.S.cc);
              a.b("ignoreDependencies", (a.Yd = a.u.G));
              var I = a.a.Da("_latestValue");
              a.ta = function (b) {
                function c() {
                  if (0 < arguments.length)
                    return (
                      c.sb(c[I], arguments[0]) &&
                        (c.ya(), (c[I] = arguments[0]), c.xa()),
                      this
                    );
                  a.u.cc(c);
                  return c[I];
                }
                c[I] = b;
                a.a.Ba || a.a.extend(c, a.T.fn);
                a.T.fn.qb(c);
                a.a.Ab(c, F);
                a.options.deferUpdates && a.Ta.deferred(c, !0);
                return c;
              };
              var F = {
                equalityComparer: K,
                v: function () {
                  return this[I];
                },
                xa: function () {
                  this.notifySubscribers(this[I], "spectate");
                  this.notifySubscribers(this[I]);
                },
                ya: function () {
                  this.notifySubscribers(this[I], "beforeChange");
                },
              };
              a.a.Ba && a.a.setPrototypeOf(F, a.T.fn);
              var G = (a.ta.Ma = "__ko_proto__");
              F[G] = a.ta;
              a.O = function (b) {
                if (
                  (b = "function" == typeof b && b[G]) &&
                  b !== F[G] &&
                  b !== a.o.fn[G]
                )
                  throw Error(
                    "Invalid object that looks like an observable; possibly from another Knockout instance"
                  );
                return !!b;
              };
              a.Za = function (b) {
                return (
                  "function" == typeof b &&
                  (b[G] === F[G] || (b[G] === a.o.fn[G] && b.Nc))
                );
              };
              a.b("observable", a.ta);
              a.b("isObservable", a.O);
              a.b("isWriteableObservable", a.Za);
              a.b("isWritableObservable", a.Za);
              a.b("observable.fn", F);
              a.L(F, "peek", F.v);
              a.L(F, "valueHasMutated", F.xa);
              a.L(F, "valueWillMutate", F.ya);
              a.Ha = function (b) {
                b = b || [];
                if ("object" != typeof b || !("length" in b))
                  throw Error(
                    "The argument passed when initializing an observable array must be an array, or null, or undefined."
                  );
                b = a.ta(b);
                a.a.Ab(b, a.Ha.fn);
                return b.extend({ trackArrayChanges: !0 });
              };
              a.Ha.fn = {
                remove: function (b) {
                  for (
                    var c = this.v(),
                      d = [],
                      e =
                        "function" != typeof b || a.O(b)
                          ? function (a) {
                              return a === b;
                            }
                          : b,
                      f = 0;
                    f < c.length;
                    f++
                  ) {
                    var g = c[f];
                    if (e(g)) {
                      0 === d.length && this.ya();
                      if (c[f] !== g)
                        throw Error(
                          "Array modified during remove; cannot remove item"
                        );
                      d.push(g);
                      c.splice(f, 1);
                      f--;
                    }
                  }
                  d.length && this.xa();
                  return d;
                },
                removeAll: function (b) {
                  if (b === n) {
                    var c = this.v(),
                      d = c.slice(0);
                    this.ya();
                    c.splice(0, c.length);
                    this.xa();
                    return d;
                  }
                  return b
                    ? this.remove(function (c) {
                        return 0 <= a.a.A(b, c);
                      })
                    : [];
                },
                destroy: function (b) {
                  var c = this.v(),
                    d =
                      "function" != typeof b || a.O(b)
                        ? function (a) {
                            return a === b;
                          }
                        : b;
                  this.ya();
                  for (var e = c.length - 1; 0 <= e; e--) {
                    var f = c[e];
                    d(f) && (f._destroy = !0);
                  }
                  this.xa();
                },
                destroyAll: function (b) {
                  return b === n
                    ? this.destroy(function () {
                        return !0;
                      })
                    : b
                    ? this.destroy(function (c) {
                        return 0 <= a.a.A(b, c);
                      })
                    : [];
                },
                indexOf: function (b) {
                  var c = this();
                  return a.a.A(c, b);
                },
                replace: function (a, c) {
                  var d = this.indexOf(a);
                  0 <= d && (this.ya(), (this.v()[d] = c), this.xa());
                },
                sorted: function (a) {
                  var c = this().slice(0);
                  return a ? c.sort(a) : c.sort();
                },
                reversed: function () {
                  return this().slice(0).reverse();
                },
              };
              a.a.Ba && a.a.setPrototypeOf(a.Ha.fn, a.ta.fn);
              a.a.D(
                "pop push reverse shift sort splice unshift".split(" "),
                function (b) {
                  a.Ha.fn[b] = function () {
                    var a = this.v();
                    this.ya();
                    this.zc(a, b, arguments);
                    var d = a[b].apply(a, arguments);
                    this.xa();
                    return d === a ? this : d;
                  };
                }
              );
              a.a.D(["slice"], function (b) {
                a.Ha.fn[b] = function () {
                  var a = this();
                  return a[b].apply(a, arguments);
                };
              });
              a.Pc = function (b) {
                return (
                  a.O(b) &&
                  "function" == typeof b.remove &&
                  "function" == typeof b.push
                );
              };
              a.b("observableArray", a.Ha);
              a.b("isObservableArray", a.Pc);
              a.Ta.trackArrayChanges = function (b, c) {
                function d() {
                  function c() {
                    if (m) {
                      var d = [].concat(b.v() || []),
                        e;
                      if (b.Wa("arrayChange")) {
                        if (!f || 1 < m) f = a.a.Pb(k, d, b.Ob);
                        e = f;
                      }
                      k = d;
                      f = null;
                      m = 0;
                      e && e.length && b.notifySubscribers(e, "arrayChange");
                    }
                  }
                  e
                    ? c()
                    : ((e = !0),
                      (h = b.subscribe(
                        function () {
                          ++m;
                        },
                        null,
                        "spectate"
                      )),
                      (k = [].concat(b.v() || [])),
                      (f = null),
                      (g = b.subscribe(c)));
                }
                b.Ob = {};
                c && "object" == typeof c && a.a.extend(b.Ob, c);
                b.Ob.sparse = !0;
                if (!b.zc) {
                  var e = !1,
                    f = null,
                    g,
                    h,
                    m = 0,
                    k,
                    l = b.Qa,
                    p = b.hb;
                  b.Qa = function (a) {
                    l && l.call(b, a);
                    "arrayChange" === a && d();
                  };
                  b.hb = function (a) {
                    p && p.call(b, a);
                    "arrayChange" !== a ||
                      b.Wa("arrayChange") ||
                      (g && g.s(),
                      h && h.s(),
                      (h = g = null),
                      (e = !1),
                      (k = n));
                  };
                  b.zc = function (b, c, d) {
                    function l(a, b, c) {
                      return (k[k.length] = { status: a, value: b, index: c });
                    }
                    if (e && !m) {
                      var k = [],
                        p = b.length,
                        g = d.length,
                        h = 0;
                      switch (c) {
                        case "push":
                          h = p;
                        case "unshift":
                          for (c = 0; c < g; c++) l("added", d[c], h + c);
                          break;
                        case "pop":
                          h = p - 1;
                        case "shift":
                          p && l("deleted", b[h], h);
                          break;
                        case "splice":
                          c = Math.min(
                            Math.max(0, 0 > d[0] ? p + d[0] : d[0]),
                            p
                          );
                          for (
                            var p = 1 === g ? p : Math.min(c + (d[1] || 0), p),
                              g = c + g - 2,
                              h = Math.max(p, g),
                              U = [],
                              L = [],
                              n = 2;
                            c < h;
                            ++c, ++n
                          )
                            c < p && L.push(l("deleted", b[c], c)),
                              c < g && U.push(l("added", d[n], c));
                          a.a.Kc(L, U);
                          break;
                        default:
                          return;
                      }
                      f = k;
                    }
                  };
                }
              };
              var r = a.a.Da("_state");
              a.o = a.$ = function (b, c, d) {
                function e() {
                  if (0 < arguments.length) {
                    if ("function" === typeof f) f.apply(g.nb, arguments);
                    else
                      throw Error(
                        "Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters."
                      );
                    return this;
                  }
                  g.ra || a.u.cc(e);
                  (g.ka || (g.J && e.Xa())) && e.ha();
                  return g.X;
                }
                "object" === typeof b
                  ? (d = b)
                  : ((d = d || {}), b && (d.read = b));
                if ("function" != typeof d.read)
                  throw Error(
                    "Pass a function that returns the value of the ko.computed"
                  );
                var f = d.write,
                  g = {
                    X: n,
                    sa: !0,
                    ka: !0,
                    rb: !1,
                    jc: !1,
                    ra: !1,
                    wb: !1,
                    J: !1,
                    Wc: d.read,
                    nb: c || d.owner,
                    l: d.disposeWhenNodeIsRemoved || d.l || null,
                    Sa: d.disposeWhen || d.Sa,
                    Rb: null,
                    I: {},
                    V: 0,
                    Ic: null,
                  };
                e[r] = g;
                e.Nc = "function" === typeof f;
                a.a.Ba || a.a.extend(e, a.T.fn);
                a.T.fn.qb(e);
                a.a.Ab(e, C);
                d.pure
                  ? ((g.wb = !0), (g.J = !0), a.a.extend(e, da))
                  : d.deferEvaluation && a.a.extend(e, ea);
                a.options.deferUpdates && a.Ta.deferred(e, !0);
                g.l && ((g.jc = !0), g.l.nodeType || (g.l = null));
                g.J || d.deferEvaluation || e.ha();
                g.l &&
                  e.ja() &&
                  a.a.K.za(
                    g.l,
                    (g.Rb = function () {
                      e.s();
                    })
                  );
                return e;
              };
              var C = {
                  equalityComparer: K,
                  qa: function () {
                    return this[r].V;
                  },
                  Va: function () {
                    var b = [];
                    a.a.P(this[r].I, function (a, d) {
                      b[d.Ka] = d.da;
                    });
                    return b;
                  },
                  Vb: function (b) {
                    if (!this[r].V) return !1;
                    var c = this.Va();
                    return -1 !== a.a.A(c, b)
                      ? !0
                      : !!a.a.Lb(c, function (a) {
                          return a.Vb && a.Vb(b);
                        });
                  },
                  uc: function (a, c, d) {
                    if (this[r].wb && c === this)
                      throw Error(
                        "A 'pure' computed must not be called recursively"
                      );
                    this[r].I[a] = d;
                    d.Ka = this[r].V++;
                    d.La = c.ob();
                  },
                  Xa: function () {
                    var a,
                      c,
                      d = this[r].I;
                    for (a in d)
                      if (
                        Object.prototype.hasOwnProperty.call(d, a) &&
                        ((c = d[a]), (this.Ia && c.da.Ja) || c.da.Dd(c.La))
                      )
                        return !0;
                  },
                  Jd: function () {
                    this.Ia && !this[r].rb && this.Ia(!1);
                  },
                  ja: function () {
                    var a = this[r];
                    return a.ka || 0 < a.V;
                  },
                  Rd: function () {
                    this.Ja ? this[r].ka && (this[r].sa = !0) : this.Hc();
                  },
                  $c: function (a) {
                    if (a.Hb) {
                      var c = a.subscribe(this.Jd, this, "dirty"),
                        d = a.subscribe(this.Rd, this);
                      return {
                        da: a,
                        s: function () {
                          c.s();
                          d.s();
                        },
                      };
                    }
                    return a.subscribe(this.Hc, this);
                  },
                  Hc: function () {
                    var b = this,
                      c = b.throttleEvaluation;
                    c && 0 <= c
                      ? (clearTimeout(this[r].Ic),
                        (this[r].Ic = a.a.setTimeout(function () {
                          b.ha(!0);
                        }, c)))
                      : b.Ia
                      ? b.Ia(!0)
                      : b.ha(!0);
                  },
                  ha: function (b) {
                    var c = this[r],
                      d = c.Sa,
                      e = !1;
                    if (!c.rb && !c.ra) {
                      if ((c.l && !a.a.Sb(c.l)) || (d && d())) {
                        if (!c.jc) {
                          this.s();
                          return;
                        }
                      } else c.jc = !1;
                      c.rb = !0;
                      try {
                        e = this.zd(b);
                      } finally {
                        c.rb = !1;
                      }
                      return e;
                    }
                  },
                  zd: function (b) {
                    var c = this[r],
                      d = !1,
                      e = c.wb ? n : !c.V,
                      d = { qd: this, mb: c.I, Qb: c.V };
                    a.u.xc({ pd: d, od: ba, o: this, Ya: e });
                    c.I = {};
                    c.V = 0;
                    var f = this.yd(c, d);
                    c.V ? (d = this.sb(c.X, f)) : (this.s(), (d = !0));
                    d &&
                      (c.J
                        ? this.Gb()
                        : this.notifySubscribers(c.X, "beforeChange"),
                      (c.X = f),
                      this.notifySubscribers(c.X, "spectate"),
                      !c.J && b && this.notifySubscribers(c.X),
                      this.rc && this.rc());
                    e && this.notifySubscribers(c.X, "awake");
                    return d;
                  },
                  yd: function (b, c) {
                    try {
                      var d = b.Wc;
                      return b.nb ? d.call(b.nb) : d();
                    } finally {
                      a.u.end(),
                        c.Qb && !b.J && a.a.P(c.mb, aa),
                        (b.sa = b.ka = !1);
                    }
                  },
                  v: function (a) {
                    var c = this[r];
                    ((c.ka && (a || !c.V)) || (c.J && this.Xa())) && this.ha();
                    return c.X;
                  },
                  ub: function (b) {
                    a.T.fn.ub.call(this, b);
                    this.nc = function () {
                      this[r].J || (this[r].sa ? this.ha() : (this[r].ka = !1));
                      return this[r].X;
                    };
                    this.Ia = function (a) {
                      this.pc(this[r].X);
                      this[r].ka = !0;
                      a && (this[r].sa = !0);
                      this.qc(this, !a);
                    };
                  },
                  s: function () {
                    var b = this[r];
                    !b.J &&
                      b.I &&
                      a.a.P(b.I, function (a, b) {
                        b.s && b.s();
                      });
                    b.l && b.Rb && a.a.K.yb(b.l, b.Rb);
                    b.I = n;
                    b.V = 0;
                    b.ra = !0;
                    b.sa = !1;
                    b.ka = !1;
                    b.J = !1;
                    b.l = n;
                    b.Sa = n;
                    b.Wc = n;
                    this.Nc || (b.nb = n);
                  },
                },
                da = {
                  Qa: function (b) {
                    var c = this,
                      d = c[r];
                    if (!d.ra && d.J && "change" == b) {
                      d.J = !1;
                      if (d.sa || c.Xa())
                        (d.I = null), (d.V = 0), c.ha() && c.Gb();
                      else {
                        var e = [];
                        a.a.P(d.I, function (a, b) {
                          e[b.Ka] = a;
                        });
                        a.a.D(e, function (a, b) {
                          var e = d.I[a],
                            m = c.$c(e.da);
                          m.Ka = b;
                          m.La = e.La;
                          d.I[a] = m;
                        });
                        c.Xa() && c.ha() && c.Gb();
                      }
                      d.ra || c.notifySubscribers(d.X, "awake");
                    }
                  },
                  hb: function (b) {
                    var c = this[r];
                    c.ra ||
                      "change" != b ||
                      this.Wa("change") ||
                      (a.a.P(c.I, function (a, b) {
                        b.s &&
                          ((c.I[a] = { da: b.da, Ka: b.Ka, La: b.La }), b.s());
                      }),
                      (c.J = !0),
                      this.notifySubscribers(n, "asleep"));
                  },
                  ob: function () {
                    var b = this[r];
                    b.J && (b.sa || this.Xa()) && this.ha();
                    return a.T.fn.ob.call(this);
                  },
                },
                ea = {
                  Qa: function (a) {
                    ("change" != a && "beforeChange" != a) || this.v();
                  },
                };
              a.a.Ba && a.a.setPrototypeOf(C, a.T.fn);
              var N = a.ta.Ma;
              C[N] = a.o;
              a.Oc = function (a) {
                return "function" == typeof a && a[N] === C[N];
              };
              a.Fd = function (b) {
                return a.Oc(b) && b[r] && b[r].wb;
              };
              a.b("computed", a.o);
              a.b("dependentObservable", a.o);
              a.b("isComputed", a.Oc);
              a.b("isPureComputed", a.Fd);
              a.b("computed.fn", C);
              a.L(C, "peek", C.v);
              a.L(C, "dispose", C.s);
              a.L(C, "isActive", C.ja);
              a.L(C, "getDependenciesCount", C.qa);
              a.L(C, "getDependencies", C.Va);
              a.xb = function (b, c) {
                if ("function" === typeof b) return a.o(b, c, { pure: !0 });
                b = a.a.extend({}, b);
                b.pure = !0;
                return a.o(b, c);
              };
              a.b("pureComputed", a.xb);
              (function () {
                function b(a, f, g) {
                  g = g || new d();
                  a = f(a);
                  if (
                    "object" != typeof a ||
                    null === a ||
                    a === n ||
                    a instanceof RegExp ||
                    a instanceof Date ||
                    a instanceof String ||
                    a instanceof Number ||
                    a instanceof Boolean
                  )
                    return a;
                  var h = a instanceof Array ? [] : {};
                  g.save(a, h);
                  c(a, function (c) {
                    var d = f(a[c]);
                    switch (typeof d) {
                      case "boolean":
                      case "number":
                      case "string":
                      case "function":
                        h[c] = d;
                        break;
                      case "object":
                      case "undefined":
                        var l = g.get(d);
                        h[c] = l !== n ? l : b(d, f, g);
                    }
                  });
                  return h;
                }
                function c(a, b) {
                  if (a instanceof Array) {
                    for (var c = 0; c < a.length; c++) b(c);
                    "function" == typeof a.toJSON && b("toJSON");
                  } else for (c in a) b(c);
                }
                function d() {
                  this.keys = [];
                  this.values = [];
                }
                a.ad = function (c) {
                  if (0 == arguments.length)
                    throw Error(
                      "When calling ko.toJS, pass the object you want to convert."
                    );
                  return b(c, function (b) {
                    for (var c = 0; a.O(b) && 10 > c; c++) b = b();
                    return b;
                  });
                };
                a.toJSON = function (b, c, d) {
                  b = a.ad(b);
                  return a.a.hc(b, c, d);
                };
                d.prototype = {
                  constructor: d,
                  save: function (b, c) {
                    var d = a.a.A(this.keys, b);
                    0 <= d
                      ? (this.values[d] = c)
                      : (this.keys.push(b), this.values.push(c));
                  },
                  get: function (b) {
                    b = a.a.A(this.keys, b);
                    return 0 <= b ? this.values[b] : n;
                  },
                };
              })();
              a.b("toJS", a.ad);
              a.b("toJSON", a.toJSON);
              a.Wd = function (b, c, d) {
                function e(c) {
                  var e = a.xb(b, d).extend({ ma: "always" }),
                    h = e.subscribe(function (a) {
                      a && (h.s(), c(a));
                    });
                  e.notifySubscribers(e.v());
                  return h;
                }
                return "function" !== typeof Promise || c
                  ? e(c.bind(d))
                  : new Promise(e);
              };
              a.b("when", a.Wd);
              (function () {
                a.w = {
                  M: function (b) {
                    switch (a.a.R(b)) {
                      case "option":
                        return !0 === b.__ko__hasDomDataOptionValue__
                          ? a.a.g.get(b, a.c.options.$b)
                          : 7 >= a.a.W
                          ? b.getAttributeNode("value") &&
                            b.getAttributeNode("value").specified
                            ? b.value
                            : b.text
                          : b.value;
                      case "select":
                        return 0 <= b.selectedIndex
                          ? a.w.M(b.options[b.selectedIndex])
                          : n;
                      default:
                        return b.value;
                    }
                  },
                  cb: function (b, c, d) {
                    switch (a.a.R(b)) {
                      case "option":
                        "string" === typeof c
                          ? (a.a.g.set(b, a.c.options.$b, n),
                            "__ko__hasDomDataOptionValue__" in b &&
                              delete b.__ko__hasDomDataOptionValue__,
                            (b.value = c))
                          : (a.a.g.set(b, a.c.options.$b, c),
                            (b.__ko__hasDomDataOptionValue__ = !0),
                            (b.value = "number" === typeof c ? c : ""));
                        break;
                      case "select":
                        if ("" === c || null === c) c = n;
                        for (
                          var e = -1, f = 0, g = b.options.length, h;
                          f < g;
                          ++f
                        )
                          if (
                            ((h = a.w.M(b.options[f])),
                            h == c || ("" === h && c === n))
                          ) {
                            e = f;
                            break;
                          }
                        if (d || 0 <= e || (c === n && 1 < b.size))
                          (b.selectedIndex = e),
                            6 === a.a.W &&
                              a.a.setTimeout(function () {
                                b.selectedIndex = e;
                              }, 0);
                        break;
                      default:
                        if (null === c || c === n) c = "";
                        b.value = c;
                    }
                  },
                };
              })();
              a.b("selectExtensions", a.w);
              a.b("selectExtensions.readValue", a.w.M);
              a.b("selectExtensions.writeValue", a.w.cb);
              a.m = (function () {
                function b(b) {
                  b = a.a.Db(b);
                  123 === b.charCodeAt(0) && (b = b.slice(1, -1));
                  b += "\n,";
                  var c = [],
                    d = b.match(e),
                    p,
                    q = [],
                    h = 0;
                  if (1 < d.length) {
                    for (var x = 0, B; (B = d[x]); ++x) {
                      var u = B.charCodeAt(0);
                      if (44 === u) {
                        if (0 >= h) {
                          c.push(
                            p && q.length
                              ? { key: p, value: q.join("") }
                              : { unknown: p || q.join("") }
                          );
                          p = h = 0;
                          q = [];
                          continue;
                        }
                      } else if (58 === u) {
                        if (!h && !p && 1 === q.length) {
                          p = q.pop();
                          continue;
                        }
                      } else if (
                        47 === u &&
                        1 < B.length &&
                        (47 === B.charCodeAt(1) || 42 === B.charCodeAt(1))
                      )
                        continue;
                      else
                        47 === u && x && 1 < B.length
                          ? (u = d[x - 1].match(f)) &&
                            !g[u[0]] &&
                            ((b = b.substr(b.indexOf(B) + 1)),
                            (d = b.match(e)),
                            (x = -1),
                            (B = "/"))
                          : 40 === u || 123 === u || 91 === u
                          ? ++h
                          : 41 === u || 125 === u || 93 === u
                          ? --h
                          : p ||
                            q.length ||
                            (34 !== u && 39 !== u) ||
                            (B = B.slice(1, -1));
                      q.push(B);
                    }
                    if (0 < h)
                      throw Error(
                        "Unbalanced parentheses, braces, or brackets"
                      );
                  }
                  return c;
                }
                var c = ["true", "false", "null", "undefined"],
                  d = /^(?:[$_a-z][$\w]*|(.+)(\.\s*[$_a-z][$\w]*|\[.+\]))$/i,
                  e = RegExp(
                    "\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|`(?:\\\\.|[^`])*`|/\\*(?:[^*]|\\*+[^*/])*\\*+/|//.*\n|/(?:\\\\.|[^/])+/w*|[^\\s:,/][^,\"'`{}()/:[\\]]*[^\\s,\"'`{}()/:[\\]]|[^\\s]",
                    "g"
                  ),
                  f = /[\])"'A-Za-z0-9_$]+$/,
                  g = { in: 1, return: 1, typeof: 1 },
                  h = {};
                return {
                  Ra: [],
                  wa: h,
                  ac: b,
                  vb: function (e, f) {
                    function l(b, e) {
                      var f;
                      if (!x) {
                        var k = a.getBindingHandler(b);
                        if (k && k.preprocess && !(e = k.preprocess(e, b, l)))
                          return;
                        if ((k = h[b]))
                          (f = e),
                            0 <= a.a.A(c, f)
                              ? (f = !1)
                              : ((k = f.match(d)),
                                (f =
                                  null === k
                                    ? !1
                                    : k[1]
                                    ? "Object(" + k[1] + ")" + k[2]
                                    : f)),
                            (k = f);
                        k &&
                          q.push(
                            "'" +
                              ("string" == typeof h[b] ? h[b] : b) +
                              "':function(_z){" +
                              f +
                              "=_z}"
                          );
                      }
                      g && (e = "function(){return " + e + " }");
                      p.push("'" + b + "':" + e);
                    }
                    f = f || {};
                    var p = [],
                      q = [],
                      g = f.valueAccessors,
                      x = f.bindingParams,
                      B = "string" === typeof e ? b(e) : e;
                    a.a.D(B, function (a) {
                      l(a.key || a.unknown, a.value);
                    });
                    q.length &&
                      l("_ko_property_writers", "{" + q.join(",") + " }");
                    return p.join(",");
                  },
                  Id: function (a, b) {
                    for (var c = 0; c < a.length; c++)
                      if (a[c].key == b) return !0;
                    return !1;
                  },
                  eb: function (b, c, d, e, f) {
                    if (b && a.O(b)) !a.Za(b) || (f && b.v() === e) || b(e);
                    else if ((b = c.get("_ko_property_writers")) && b[d])
                      b[d](e);
                  },
                };
              })();
              a.b("expressionRewriting", a.m);
              a.b("expressionRewriting.bindingRewriteValidators", a.m.Ra);
              a.b("expressionRewriting.parseObjectLiteral", a.m.ac);
              a.b("expressionRewriting.preProcessBindings", a.m.vb);
              a.b("expressionRewriting._twoWayBindings", a.m.wa);
              a.b("jsonExpressionRewriting", a.m);
              a.b(
                "jsonExpressionRewriting.insertPropertyAccessorsIntoJson",
                a.m.vb
              );
              (function () {
                function b(a) {
                  return 8 == a.nodeType && g.test(f ? a.text : a.nodeValue);
                }
                function c(a) {
                  return 8 == a.nodeType && h.test(f ? a.text : a.nodeValue);
                }
                function d(d, e) {
                  for (var f = d, h = 1, g = []; (f = f.nextSibling); ) {
                    if (c(f) && (a.a.g.set(f, k, !0), h--, 0 === h)) return g;
                    g.push(f);
                    b(f) && h++;
                  }
                  if (!e)
                    throw Error(
                      "Cannot find closing comment tag to match: " + d.nodeValue
                    );
                  return null;
                }
                function e(a, b) {
                  var c = d(a, b);
                  return c
                    ? 0 < c.length
                      ? c[c.length - 1].nextSibling
                      : a.nextSibling
                    : null;
                }
                var f =
                    w && "\x3c!--test--\x3e" === w.createComment("test").text,
                  g = f
                    ? /^\x3c!--\s*ko(?:\s+([\s\S]+))?\s*--\x3e$/
                    : /^\s*ko(?:\s+([\s\S]+))?\s*$/,
                  h = f ? /^\x3c!--\s*\/ko\s*--\x3e$/ : /^\s*\/ko\s*$/,
                  m = { ul: !0, ol: !0 },
                  k = "__ko_matchedEndComment__";
                a.h = {
                  ea: {},
                  childNodes: function (a) {
                    return b(a) ? d(a) : a.childNodes;
                  },
                  Ea: function (c) {
                    if (b(c)) {
                      c = a.h.childNodes(c);
                      for (var d = 0, e = c.length; d < e; d++)
                        a.removeNode(c[d]);
                    } else a.a.Tb(c);
                  },
                  va: function (c, d) {
                    if (b(c)) {
                      a.h.Ea(c);
                      for (
                        var e = c.nextSibling, f = 0, k = d.length;
                        f < k;
                        f++
                      )
                        e.parentNode.insertBefore(d[f], e);
                    } else a.a.va(c, d);
                  },
                  Vc: function (a, c) {
                    var d;
                    b(a)
                      ? ((d = a.nextSibling), (a = a.parentNode))
                      : (d = a.firstChild);
                    d ? c !== d && a.insertBefore(c, d) : a.appendChild(c);
                  },
                  Wb: function (c, d, e) {
                    e
                      ? ((e = e.nextSibling),
                        b(c) && (c = c.parentNode),
                        e ? d !== e && c.insertBefore(d, e) : c.appendChild(d))
                      : a.h.Vc(c, d);
                  },
                  firstChild: function (a) {
                    if (b(a))
                      return !a.nextSibling || c(a.nextSibling)
                        ? null
                        : a.nextSibling;
                    if (a.firstChild && c(a.firstChild))
                      throw Error(
                        "Found invalid end comment, as the first child of " + a
                      );
                    return a.firstChild;
                  },
                  nextSibling: function (d) {
                    b(d) && (d = e(d));
                    if (d.nextSibling && c(d.nextSibling)) {
                      var f = d.nextSibling;
                      if (c(f) && !a.a.g.get(f, k))
                        throw Error(
                          "Found end comment without a matching opening comment, as child of " +
                            d
                        );
                      return null;
                    }
                    return d.nextSibling;
                  },
                  Cd: b,
                  Vd: function (a) {
                    return (a = (f ? a.text : a.nodeValue).match(g))
                      ? a[1]
                      : null;
                  },
                  Sc: function (d) {
                    if (m[a.a.R(d)]) {
                      var f = d.firstChild;
                      if (f) {
                        do
                          if (1 === f.nodeType) {
                            var k;
                            k = f.firstChild;
                            var h = null;
                            if (k) {
                              do
                                if (h) h.push(k);
                                else if (b(k)) {
                                  var g = e(k, !0);
                                  g ? (k = g) : (h = [k]);
                                } else c(k) && (h = [k]);
                              while ((k = k.nextSibling));
                            }
                            if ((k = h))
                              for (h = f.nextSibling, g = 0; g < k.length; g++)
                                h
                                  ? d.insertBefore(k[g], h)
                                  : d.appendChild(k[g]);
                          }
                        while ((f = f.nextSibling));
                      }
                    }
                  },
                };
              })();
              a.b("virtualElements", a.h);
              a.b("virtualElements.allowedBindings", a.h.ea);
              a.b("virtualElements.emptyNode", a.h.Ea);
              a.b("virtualElements.insertAfter", a.h.Wb);
              a.b("virtualElements.prepend", a.h.Vc);
              a.b("virtualElements.setDomNodeChildren", a.h.va);
              (function () {
                a.ga = function () {
                  this.nd = {};
                };
                a.a.extend(a.ga.prototype, {
                  nodeHasBindings: function (b) {
                    switch (b.nodeType) {
                      case 1:
                        return (
                          null != b.getAttribute("data-bind") ||
                          a.j.getComponentNameForNode(b)
                        );
                      case 8:
                        return a.h.Cd(b);
                      default:
                        return !1;
                    }
                  },
                  getBindings: function (b, c) {
                    var d = this.getBindingsString(b, c),
                      d = d ? this.parseBindingsString(d, c, b) : null;
                    return a.j.tc(d, b, c, !1);
                  },
                  getBindingAccessors: function (b, c) {
                    var d = this.getBindingsString(b, c),
                      d = d
                        ? this.parseBindingsString(d, c, b, {
                            valueAccessors: !0,
                          })
                        : null;
                    return a.j.tc(d, b, c, !0);
                  },
                  getBindingsString: function (b) {
                    switch (b.nodeType) {
                      case 1:
                        return b.getAttribute("data-bind");
                      case 8:
                        return a.h.Vd(b);
                      default:
                        return null;
                    }
                  },
                  parseBindingsString: function (b, c, d, e) {
                    try {
                      var f = this.nd,
                        g = b + ((e && e.valueAccessors) || ""),
                        h;
                      if (!(h = f[g])) {
                        var m,
                          k =
                            "with($context){with($data||{}){return{" +
                            a.m.vb(b, e) +
                            "}}}";
                        m = new Function("$context", "$element", k);
                        h = f[g] = m;
                      }
                      return h(c, d);
                    } catch (l) {
                      throw (
                        ((l.message =
                          "Unable to parse bindings.\nBindings value: " +
                          b +
                          "\nMessage: " +
                          l.message),
                        l)
                      );
                    }
                  },
                });
                a.ga.instance = new a.ga();
              })();
              a.b("bindingProvider", a.ga);
              (function () {
                function b(b) {
                  var c = (b = a.a.g.get(b, z)) && b.N;
                  c && ((b.N = null), c.Tc());
                }
                function c(c, d, e) {
                  this.node = c;
                  this.yc = d;
                  this.kb = [];
                  this.H = !1;
                  d.N || a.a.K.za(c, b);
                  e && e.N && (e.N.kb.push(c), (this.Kb = e));
                }
                function d(a) {
                  return function () {
                    return a;
                  };
                }
                function e(a) {
                  return a();
                }
                function f(b) {
                  return a.a.Ga(a.u.G(b), function (a, c) {
                    return function () {
                      return b()[c];
                    };
                  });
                }
                function g(b, c, e) {
                  return "function" === typeof b
                    ? f(b.bind(null, c, e))
                    : a.a.Ga(b, d);
                }
                function h(a, b) {
                  return f(this.getBindings.bind(this, a, b));
                }
                function m(b, c) {
                  var d = a.h.firstChild(c);
                  if (d) {
                    var e,
                      f = a.ga.instance,
                      l = f.preprocessNode;
                    if (l) {
                      for (; (e = d); ) (d = a.h.nextSibling(e)), l.call(f, e);
                      d = a.h.firstChild(c);
                    }
                    for (; (e = d); ) (d = a.h.nextSibling(e)), k(b, e);
                  }
                  a.i.ma(c, a.i.H);
                }
                function k(b, c) {
                  var d = b,
                    e = 1 === c.nodeType;
                  e && a.h.Sc(c);
                  if (e || a.ga.instance.nodeHasBindings(c))
                    d = p(c, null, b).bindingContextForDescendants;
                  d && !u[a.a.R(c)] && m(d, c);
                }
                function l(b) {
                  var c = [],
                    d = {},
                    e = [];
                  a.a.P(b, function ca(f) {
                    if (!d[f]) {
                      var k = a.getBindingHandler(f);
                      k &&
                        (k.after &&
                          (e.push(f),
                          a.a.D(k.after, function (c) {
                            if (b[c]) {
                              if (-1 !== a.a.A(e, c))
                                throw Error(
                                  "Cannot combine the following bindings, because they have a cyclic dependency: " +
                                    e.join(", ")
                                );
                              ca(c);
                            }
                          }),
                          e.length--),
                        c.push({ key: f, Mc: k }));
                      d[f] = !0;
                    }
                  });
                  return c;
                }
                function p(b, c, d) {
                  var f = a.a.g.Ub(b, z, {}),
                    k = f.hd;
                  if (!c) {
                    if (k)
                      throw Error(
                        "You cannot apply bindings multiple times to the same element."
                      );
                    f.hd = !0;
                  }
                  k || (f.context = d);
                  f.Zb || (f.Zb = {});
                  var g;
                  if (c && "function" !== typeof c) g = c;
                  else {
                    var p = a.ga.instance,
                      q = p.getBindingAccessors || h,
                      m = a.$(
                        function () {
                          if ((g = c ? c(d, b) : q.call(p, b, d))) {
                            if (d[t]) d[t]();
                            if (d[B]) d[B]();
                          }
                          return g;
                        },
                        null,
                        { l: b }
                      );
                    (g && m.ja()) || (m = null);
                  }
                  var x = d,
                    u;
                  if (g) {
                    var J = function () {
                        return a.a.Ga(m ? m() : g, e);
                      },
                      r = m
                        ? function (a) {
                            return function () {
                              return e(m()[a]);
                            };
                          }
                        : function (a) {
                            return g[a];
                          };
                    J.get = function (a) {
                      return g[a] && e(r(a));
                    };
                    J.has = function (a) {
                      return a in g;
                    };
                    a.i.H in g &&
                      a.i.subscribe(b, a.i.H, function () {
                        var c = (0, g[a.i.H])();
                        if (c) {
                          var d = a.h.childNodes(b);
                          d.length && c(d, a.Ec(d[0]));
                        }
                      });
                    a.i.pa in g &&
                      ((x = a.i.Cb(b, d)),
                      a.i.subscribe(b, a.i.pa, function () {
                        var c = (0, g[a.i.pa])();
                        c && a.h.firstChild(b) && c(b);
                      }));
                    f = l(g);
                    a.a.D(f, function (c) {
                      var d = c.Mc.init,
                        e = c.Mc.update,
                        f = c.key;
                      if (8 === b.nodeType && !a.h.ea[f])
                        throw Error(
                          "The binding '" +
                            f +
                            "' cannot be used with virtual elements"
                        );
                      try {
                        "function" == typeof d &&
                          a.u.G(function () {
                            var a = d(b, r(f), J, x.$data, x);
                            if (a && a.controlsDescendantBindings) {
                              if (u !== n)
                                throw Error(
                                  "Multiple bindings (" +
                                    u +
                                    " and " +
                                    f +
                                    ") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element."
                                );
                              u = f;
                            }
                          }),
                          "function" == typeof e &&
                            a.$(
                              function () {
                                e(b, r(f), J, x.$data, x);
                              },
                              null,
                              { l: b }
                            );
                      } catch (k) {
                        throw (
                          ((k.message =
                            'Unable to process binding "' +
                            f +
                            ": " +
                            g[f] +
                            '"\nMessage: ' +
                            k.message),
                          k)
                        );
                      }
                    });
                  }
                  f = u === n;
                  return {
                    shouldBindDescendants: f,
                    bindingContextForDescendants: f && x,
                  };
                }
                function q(b, c) {
                  return b && b instanceof a.fa ? b : new a.fa(b, n, n, c);
                }
                var t = a.a.Da("_subscribable"),
                  x = a.a.Da("_ancestorBindingInfo"),
                  B = a.a.Da("_dataDependency");
                a.c = {};
                var u = { script: !0, textarea: !0, template: !0 };
                a.getBindingHandler = function (b) {
                  return a.c[b];
                };
                var J = {};
                a.fa = function (b, c, d, e, f) {
                  function k() {
                    var b = p ? h() : h,
                      f = a.a.f(b);
                    c
                      ? (a.a.extend(l, c), x in c && (l[x] = c[x]))
                      : ((l.$parents = []), (l.$root = f), (l.ko = a));
                    l[t] = q;
                    g ? (f = l.$data) : ((l.$rawData = b), (l.$data = f));
                    d && (l[d] = f);
                    e && e(l, c, f);
                    if (c && c[t] && !a.S.o().Vb(c[t])) c[t]();
                    m && (l[B] = m);
                    return l.$data;
                  }
                  var l = this,
                    g = b === J,
                    h = g ? n : b,
                    p = "function" == typeof h && !a.O(h),
                    q,
                    m = f && f.dataDependency;
                  f && f.exportDependencies
                    ? k()
                    : ((q = a.xb(k)),
                      q.v(),
                      q.ja() ? (q.equalityComparer = null) : (l[t] = n));
                };
                a.fa.prototype.createChildContext = function (b, c, d, e) {
                  !e &&
                    c &&
                    "object" == typeof c &&
                    ((e = c), (c = e.as), (d = e.extend));
                  if (c && e && e.noChildContext) {
                    var f = "function" == typeof b && !a.O(b);
                    return new a.fa(
                      J,
                      this,
                      null,
                      function (a) {
                        d && d(a);
                        a[c] = f ? b() : b;
                      },
                      e
                    );
                  }
                  return new a.fa(
                    b,
                    this,
                    c,
                    function (a, b) {
                      a.$parentContext = b;
                      a.$parent = b.$data;
                      a.$parents = (b.$parents || []).slice(0);
                      a.$parents.unshift(a.$parent);
                      d && d(a);
                    },
                    e
                  );
                };
                a.fa.prototype.extend = function (b, c) {
                  return new a.fa(
                    J,
                    this,
                    null,
                    function (c) {
                      a.a.extend(c, "function" == typeof b ? b(c) : b);
                    },
                    c
                  );
                };
                var z = a.a.g.Z();
                c.prototype.Tc = function () {
                  this.Kb && this.Kb.N && this.Kb.N.sd(this.node);
                };
                c.prototype.sd = function (b) {
                  a.a.Pa(this.kb, b);
                  !this.kb.length && this.H && this.Cc();
                };
                c.prototype.Cc = function () {
                  this.H = !0;
                  this.yc.N &&
                    !this.kb.length &&
                    ((this.yc.N = null),
                    a.a.K.yb(this.node, b),
                    a.i.ma(this.node, a.i.pa),
                    this.Tc());
                };
                a.i = {
                  H: "childrenComplete",
                  pa: "descendantsComplete",
                  subscribe: function (b, c, d, e, f) {
                    var k = a.a.g.Ub(b, z, {});
                    k.Fa || (k.Fa = new a.T());
                    f && f.notifyImmediately && k.Zb[c] && a.u.G(d, e, [b]);
                    return k.Fa.subscribe(d, e, c);
                  },
                  ma: function (b, c) {
                    var d = a.a.g.get(b, z);
                    if (
                      d &&
                      ((d.Zb[c] = !0),
                      d.Fa && d.Fa.notifySubscribers(b, c),
                      c == a.i.H)
                    )
                      if (d.N) d.N.Cc();
                      else if (d.N === n && d.Fa && d.Fa.Wa(a.i.pa))
                        throw Error(
                          "descendantsComplete event not supported for bindings on this node"
                        );
                  },
                  Cb: function (b, d) {
                    var e = a.a.g.Ub(b, z, {});
                    e.N || (e.N = new c(b, e, d[x]));
                    return d[x] == e
                      ? d
                      : d.extend(function (a) {
                          a[x] = e;
                        });
                  },
                };
                a.Td = function (b) {
                  return (b = a.a.g.get(b, z)) && b.context;
                };
                a.ib = function (b, c, d) {
                  1 === b.nodeType && a.h.Sc(b);
                  return p(b, c, q(d));
                };
                a.ld = function (b, c, d) {
                  d = q(d);
                  return a.ib(b, g(c, d, b), d);
                };
                a.Oa = function (a, b) {
                  (1 !== b.nodeType && 8 !== b.nodeType) || m(q(a), b);
                };
                a.vc = function (a, b, c) {
                  !v && A.jQuery && (v = A.jQuery);
                  if (2 > arguments.length) {
                    if (((b = w.body), !b))
                      throw Error(
                        "ko.applyBindings: could not find document.body; has the document been loaded?"
                      );
                  } else if (!b || (1 !== b.nodeType && 8 !== b.nodeType))
                    throw Error(
                      "ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node"
                    );
                  k(q(a, c), b);
                };
                a.Dc = function (b) {
                  return !b || (1 !== b.nodeType && 8 !== b.nodeType)
                    ? n
                    : a.Td(b);
                };
                a.Ec = function (b) {
                  return (b = a.Dc(b)) ? b.$data : n;
                };
                a.b("bindingHandlers", a.c);
                a.b("bindingEvent", a.i);
                a.b("bindingEvent.subscribe", a.i.subscribe);
                a.b("bindingEvent.startPossiblyAsyncContentBinding", a.i.Cb);
                a.b("applyBindings", a.vc);
                a.b("applyBindingsToDescendants", a.Oa);
                a.b("applyBindingAccessorsToNode", a.ib);
                a.b("applyBindingsToNode", a.ld);
                a.b("contextFor", a.Dc);
                a.b("dataFor", a.Ec);
              })();
              (function (b) {
                function c(c, e) {
                  var k = Object.prototype.hasOwnProperty.call(f, c) ? f[c] : b,
                    l;
                  k
                    ? k.subscribe(e)
                    : ((k = f[c] = new a.T()),
                      k.subscribe(e),
                      d(c, function (b, d) {
                        var e = !(!d || !d.synchronous);
                        g[c] = { definition: b, Gd: e };
                        delete f[c];
                        l || e
                          ? k.notifySubscribers(b)
                          : a.na.zb(function () {
                              k.notifySubscribers(b);
                            });
                      }),
                      (l = !0));
                }
                function d(a, b) {
                  e("getConfig", [a], function (c) {
                    c
                      ? e("loadComponent", [a, c], function (a) {
                          b(a, c);
                        })
                      : b(null, null);
                  });
                }
                function e(c, d, f, l) {
                  l || (l = a.j.loaders.slice(0));
                  var g = l.shift();
                  if (g) {
                    var q = g[c];
                    if (q) {
                      var t = !1;
                      if (
                        q.apply(
                          g,
                          d.concat(function (a) {
                            t ? f(null) : null !== a ? f(a) : e(c, d, f, l);
                          })
                        ) !== b &&
                        ((t = !0), !g.suppressLoaderExceptions)
                      )
                        throw Error(
                          "Component loaders must supply values by invoking the callback, not by returning values synchronously."
                        );
                    } else e(c, d, f, l);
                  } else f(null);
                }
                var f = {},
                  g = {};
                a.j = {
                  get: function (d, e) {
                    var f = Object.prototype.hasOwnProperty.call(g, d)
                      ? g[d]
                      : b;
                    f
                      ? f.Gd
                        ? a.u.G(function () {
                            e(f.definition);
                          })
                        : a.na.zb(function () {
                            e(f.definition);
                          })
                      : c(d, e);
                  },
                  Bc: function (a) {
                    delete g[a];
                  },
                  oc: e,
                };
                a.j.loaders = [];
                a.b("components", a.j);
                a.b("components.get", a.j.get);
                a.b("components.clearCachedDefinition", a.j.Bc);
              })();
              (function () {
                function b(b, c, d, e) {
                  function g() {
                    0 === --B && e(h);
                  }
                  var h = {},
                    B = 2,
                    u = d.template;
                  d = d.viewModel;
                  u
                    ? f(c, u, function (c) {
                        a.j.oc("loadTemplate", [b, c], function (a) {
                          h.template = a;
                          g();
                        });
                      })
                    : g();
                  d
                    ? f(c, d, function (c) {
                        a.j.oc("loadViewModel", [b, c], function (a) {
                          h[m] = a;
                          g();
                        });
                      })
                    : g();
                }
                function c(a, b, d) {
                  if ("function" === typeof b)
                    d(function (a) {
                      return new b(a);
                    });
                  else if ("function" === typeof b[m]) d(b[m]);
                  else if ("instance" in b) {
                    var e = b.instance;
                    d(function () {
                      return e;
                    });
                  } else
                    "viewModel" in b
                      ? c(a, b.viewModel, d)
                      : a("Unknown viewModel value: " + b);
                }
                function d(b) {
                  switch (a.a.R(b)) {
                    case "script":
                      return a.a.ua(b.text);
                    case "textarea":
                      return a.a.ua(b.value);
                    case "template":
                      if (e(b.content)) return a.a.Ca(b.content.childNodes);
                  }
                  return a.a.Ca(b.childNodes);
                }
                function e(a) {
                  return A.DocumentFragment
                    ? a instanceof DocumentFragment
                    : a && 11 === a.nodeType;
                }
                function f(a, b, c) {
                  "string" === typeof b.require
                    ? T || A.require
                      ? (T || A.require)([b.require], function (a) {
                          a &&
                            "object" === typeof a &&
                            a.Xd &&
                            a["default"] &&
                            (a = a["default"]);
                          c(a);
                        })
                      : a("Uses require, but no AMD loader is present")
                    : c(b);
                }
                function g(a) {
                  return function (b) {
                    throw Error("Component '" + a + "': " + b);
                  };
                }
                var h = {};
                a.j.register = function (b, c) {
                  if (!c) throw Error("Invalid configuration for " + b);
                  if (a.j.tb(b))
                    throw Error("Component " + b + " is already registered");
                  h[b] = c;
                };
                a.j.tb = function (a) {
                  return Object.prototype.hasOwnProperty.call(h, a);
                };
                a.j.unregister = function (b) {
                  delete h[b];
                  a.j.Bc(b);
                };
                a.j.Fc = {
                  getConfig: function (b, c) {
                    c(a.j.tb(b) ? h[b] : null);
                  },
                  loadComponent: function (a, c, d) {
                    var e = g(a);
                    f(e, c, function (c) {
                      b(a, e, c, d);
                    });
                  },
                  loadTemplate: function (b, c, f) {
                    b = g(b);
                    if ("string" === typeof c) f(a.a.ua(c));
                    else if (c instanceof Array) f(c);
                    else if (e(c)) f(a.a.la(c.childNodes));
                    else if (c.element)
                      if (
                        ((c = c.element),
                        A.HTMLElement
                          ? c instanceof HTMLElement
                          : c && c.tagName && 1 === c.nodeType)
                      )
                        f(d(c));
                      else if ("string" === typeof c) {
                        var h = w.getElementById(c);
                        h ? f(d(h)) : b("Cannot find element with ID " + c);
                      } else b("Unknown element type: " + c);
                    else b("Unknown template value: " + c);
                  },
                  loadViewModel: function (a, b, d) {
                    c(g(a), b, d);
                  },
                };
                var m = "createViewModel";
                a.b("components.register", a.j.register);
                a.b("components.isRegistered", a.j.tb);
                a.b("components.unregister", a.j.unregister);
                a.b("components.defaultLoader", a.j.Fc);
                a.j.loaders.push(a.j.Fc);
                a.j.dd = h;
              })();
              (function () {
                function b(b, e) {
                  var f = b.getAttribute("params");
                  if (f) {
                    var f = c.parseBindingsString(f, e, b, {
                        valueAccessors: !0,
                        bindingParams: !0,
                      }),
                      f = a.a.Ga(f, function (c) {
                        return a.o(c, null, { l: b });
                      }),
                      g = a.a.Ga(f, function (c) {
                        var e = c.v();
                        return c.ja()
                          ? a.o({
                              read: function () {
                                return a.a.f(c());
                              },
                              write:
                                a.Za(e) &&
                                function (a) {
                                  c()(a);
                                },
                              l: b,
                            })
                          : e;
                      });
                    Object.prototype.hasOwnProperty.call(g, "$raw") ||
                      (g.$raw = f);
                    return g;
                  }
                  return { $raw: {} };
                }
                a.j.getComponentNameForNode = function (b) {
                  var c = a.a.R(b);
                  if (
                    a.j.tb(c) &&
                    (-1 != c.indexOf("-") ||
                      "[object HTMLUnknownElement]" == "" + b ||
                      (8 >= a.a.W && b.tagName === c))
                  )
                    return c;
                };
                a.j.tc = function (c, e, f, g) {
                  if (1 === e.nodeType) {
                    var h = a.j.getComponentNameForNode(e);
                    if (h) {
                      c = c || {};
                      if (c.component)
                        throw Error(
                          'Cannot use the "component" binding on a custom element matching a component'
                        );
                      var m = { name: h, params: b(e, f) };
                      c.component = g
                        ? function () {
                            return m;
                          }
                        : m;
                    }
                  }
                  return c;
                };
                var c = new a.ga();
                9 > a.a.W &&
                  ((a.j.register = (function (a) {
                    return function (b) {
                      return a.apply(this, arguments);
                    };
                  })(a.j.register)),
                  (w.createDocumentFragment = (function (b) {
                    return function () {
                      var c = b(),
                        f = a.j.dd,
                        g;
                      for (g in f);
                      return c;
                    };
                  })(w.createDocumentFragment)));
              })();
              (function () {
                function b(b, c, d) {
                  c = c.template;
                  if (!c) throw Error("Component '" + b + "' has no template");
                  b = a.a.Ca(c);
                  a.h.va(d, b);
                }
                function c(a, b, c) {
                  var d = a.createViewModel;
                  return d ? d.call(a, b, c) : b;
                }
                var d = 0;
                a.c.component = {
                  init: function (e, f, g, h, m) {
                    function k() {
                      var a = l && l.dispose;
                      "function" === typeof a && a.call(l);
                      q && q.s();
                      p = l = q = null;
                    }
                    var l,
                      p,
                      q,
                      t = a.a.la(a.h.childNodes(e));
                    a.h.Ea(e);
                    a.a.K.za(e, k);
                    a.o(
                      function () {
                        var g = a.a.f(f()),
                          h,
                          u;
                        "string" === typeof g
                          ? (h = g)
                          : ((h = a.a.f(g.name)), (u = a.a.f(g.params)));
                        if (!h) throw Error("No component name specified");
                        var n = a.i.Cb(e, m),
                          z = (p = ++d);
                        a.j.get(h, function (d) {
                          if (p === z) {
                            k();
                            if (!d)
                              throw Error("Unknown component '" + h + "'");
                            b(h, d, e);
                            var f = c(d, u, { element: e, templateNodes: t });
                            d = n.createChildContext(f, {
                              extend: function (a) {
                                a.$component = f;
                                a.$componentTemplateNodes = t;
                              },
                            });
                            f &&
                              f.koDescendantsComplete &&
                              (q = a.i.subscribe(
                                e,
                                a.i.pa,
                                f.koDescendantsComplete,
                                f
                              ));
                            l = f;
                            a.Oa(d, e);
                          }
                        });
                      },
                      null,
                      { l: e }
                    );
                    return { controlsDescendantBindings: !0 };
                  },
                };
                a.h.ea.component = !0;
              })();
              var V = { class: "className", for: "htmlFor" };
              a.c.attr = {
                update: function (b, c) {
                  var d = a.a.f(c()) || {};
                  a.a.P(d, function (c, d) {
                    d = a.a.f(d);
                    var g = c.indexOf(":"),
                      g =
                        "lookupNamespaceURI" in b &&
                        0 < g &&
                        b.lookupNamespaceURI(c.substr(0, g)),
                      h = !1 === d || null === d || d === n;
                    h
                      ? g
                        ? b.removeAttributeNS(g, c)
                        : b.removeAttribute(c)
                      : (d = d.toString());
                    8 >= a.a.W && c in V
                      ? ((c = V[c]), h ? b.removeAttribute(c) : (b[c] = d))
                      : h ||
                        (g ? b.setAttributeNS(g, c, d) : b.setAttribute(c, d));
                    "name" === c && a.a.Yc(b, h ? "" : d);
                  });
                },
              };
              (function () {
                a.c.checked = {
                  after: ["value", "attr"],
                  init: function (b, c, d) {
                    function e() {
                      var e = b.checked,
                        f = g();
                      if (!a.S.Ya() && (e || (!m && !a.S.qa()))) {
                        var k = a.u.G(c);
                        if (l) {
                          var q = p ? k.v() : k,
                            z = t;
                          t = f;
                          z !== f
                            ? e && (a.a.Na(q, f, !0), a.a.Na(q, z, !1))
                            : a.a.Na(q, f, e);
                          p && a.Za(k) && k(q);
                        } else
                          h && (f === n ? (f = e) : e || (f = n)),
                            a.m.eb(k, d, "checked", f, !0);
                      }
                    }
                    function f() {
                      var d = a.a.f(c()),
                        e = g();
                      l
                        ? ((b.checked = 0 <= a.a.A(d, e)), (t = e))
                        : (b.checked = h && e === n ? !!d : g() === d);
                    }
                    var g = a.xb(function () {
                        if (d.has("checkedValue"))
                          return a.a.f(d.get("checkedValue"));
                        if (q)
                          return d.has("value")
                            ? a.a.f(d.get("value"))
                            : b.value;
                      }),
                      h = "checkbox" == b.type,
                      m = "radio" == b.type;
                    if (h || m) {
                      var k = c(),
                        l = h && a.a.f(k) instanceof Array,
                        p = !(l && k.push && k.splice),
                        q = m || l,
                        t = l ? g() : n;
                      m &&
                        !b.name &&
                        a.c.uniqueName.init(b, function () {
                          return !0;
                        });
                      a.o(e, null, { l: b });
                      a.a.B(b, "click", e);
                      a.o(f, null, { l: b });
                      k = n;
                    }
                  },
                };
                a.m.wa.checked = !0;
                a.c.checkedValue = {
                  update: function (b, c) {
                    b.value = a.a.f(c());
                  },
                };
              })();
              a.c["class"] = {
                update: function (b, c) {
                  var d = a.a.Db(a.a.f(c()));
                  a.a.Eb(b, b.__ko__cssValue, !1);
                  b.__ko__cssValue = d;
                  a.a.Eb(b, d, !0);
                },
              };
              a.c.css = {
                update: function (b, c) {
                  var d = a.a.f(c());
                  null !== d && "object" == typeof d
                    ? a.a.P(d, function (c, d) {
                        d = a.a.f(d);
                        a.a.Eb(b, c, d);
                      })
                    : a.c["class"].update(b, c);
                },
              };
              a.c.enable = {
                update: function (b, c) {
                  var d = a.a.f(c());
                  d && b.disabled
                    ? b.removeAttribute("disabled")
                    : d || b.disabled || (b.disabled = !0);
                },
              };
              a.c.disable = {
                update: function (b, c) {
                  a.c.enable.update(b, function () {
                    return !a.a.f(c());
                  });
                },
              };
              a.c.event = {
                init: function (b, c, d, e, f) {
                  var g = c() || {};
                  a.a.P(g, function (g) {
                    "string" == typeof g &&
                      a.a.B(b, g, function (b) {
                        var k,
                          l = c()[g];
                        if (l) {
                          try {
                            var p = a.a.la(arguments);
                            e = f.$data;
                            p.unshift(e);
                            k = l.apply(e, p);
                          } finally {
                            !0 !== k &&
                              (b.preventDefault
                                ? b.preventDefault()
                                : (b.returnValue = !1));
                          }
                          !1 === d.get(g + "Bubble") &&
                            ((b.cancelBubble = !0),
                            b.stopPropagation && b.stopPropagation());
                        }
                      });
                  });
                },
              };
              a.c.foreach = {
                Rc: function (b) {
                  return function () {
                    var c = b(),
                      d = a.a.bc(c);
                    if (!d || "number" == typeof d.length)
                      return { foreach: c, templateEngine: a.ba.Ma };
                    a.a.f(c);
                    return {
                      foreach: d.data,
                      as: d.as,
                      noChildContext: d.noChildContext,
                      includeDestroyed: d.includeDestroyed,
                      afterAdd: d.afterAdd,
                      beforeRemove: d.beforeRemove,
                      afterRender: d.afterRender,
                      beforeMove: d.beforeMove,
                      afterMove: d.afterMove,
                      templateEngine: a.ba.Ma,
                    };
                  };
                },
                init: function (b, c) {
                  return a.c.template.init(b, a.c.foreach.Rc(c));
                },
                update: function (b, c, d, e, f) {
                  return a.c.template.update(b, a.c.foreach.Rc(c), d, e, f);
                },
              };
              a.m.Ra.foreach = !1;
              a.h.ea.foreach = !0;
              a.c.hasfocus = {
                init: function (b, c, d) {
                  function e(e) {
                    b.__ko_hasfocusUpdating = !0;
                    var f = b.ownerDocument;
                    if ("activeElement" in f) {
                      var g;
                      try {
                        g = f.activeElement;
                      } catch (l) {
                        g = f.body;
                      }
                      e = g === b;
                    }
                    f = c();
                    a.m.eb(f, d, "hasfocus", e, !0);
                    b.__ko_hasfocusLastValue = e;
                    b.__ko_hasfocusUpdating = !1;
                  }
                  var f = e.bind(null, !0),
                    g = e.bind(null, !1);
                  a.a.B(b, "focus", f);
                  a.a.B(b, "focusin", f);
                  a.a.B(b, "blur", g);
                  a.a.B(b, "focusout", g);
                  b.__ko_hasfocusLastValue = !1;
                },
                update: function (b, c) {
                  var d = !!a.a.f(c());
                  b.__ko_hasfocusUpdating ||
                    b.__ko_hasfocusLastValue === d ||
                    (d ? b.focus() : b.blur(),
                    !d &&
                      b.__ko_hasfocusLastValue &&
                      b.ownerDocument.body.focus(),
                    a.u.G(a.a.Fb, null, [b, d ? "focusin" : "focusout"]));
                },
              };
              a.m.wa.hasfocus = !0;
              a.c.hasFocus = a.c.hasfocus;
              a.m.wa.hasFocus = "hasfocus";
              a.c.html = {
                init: function () {
                  return { controlsDescendantBindings: !0 };
                },
                update: function (b, c) {
                  a.a.fc(b, c());
                },
              };
              (function () {
                function b(b, d, e) {
                  a.c[b] = {
                    init: function (b, c, h, m, k) {
                      var l,
                        p,
                        q = {},
                        t,
                        x,
                        n;
                      if (d) {
                        m = h.get("as");
                        var u = h.get("noChildContext");
                        n = !(m && u);
                        q = { as: m, noChildContext: u, exportDependencies: n };
                      }
                      x =
                        (t = "render" == h.get("completeOn")) || h.has(a.i.pa);
                      a.o(
                        function () {
                          var h = a.a.f(c()),
                            m = !e !== !h,
                            u = !p,
                            r;
                          if (n || m !== l) {
                            x && (k = a.i.Cb(b, k));
                            if (m) {
                              if (!d || n) q.dataDependency = a.S.o();
                              r = d
                                ? k.createChildContext(
                                    "function" == typeof h ? h : c,
                                    q
                                  )
                                : a.S.qa()
                                ? k.extend(null, q)
                                : k;
                            }
                            u &&
                              a.S.qa() &&
                              (p = a.a.Ca(a.h.childNodes(b), !0));
                            m
                              ? (u || a.h.va(b, a.a.Ca(p)), a.Oa(r, b))
                              : (a.h.Ea(b), t || a.i.ma(b, a.i.H));
                            l = m;
                          }
                        },
                        null,
                        { l: b }
                      );
                      return { controlsDescendantBindings: !0 };
                    },
                  };
                  a.m.Ra[b] = !1;
                  a.h.ea[b] = !0;
                }
                b("if");
                b("ifnot", !1, !0);
                b("with", !0);
              })();
              a.c.let = {
                init: function (b, c, d, e, f) {
                  c = f.extend(c);
                  a.Oa(c, b);
                  return { controlsDescendantBindings: !0 };
                },
              };
              a.h.ea.let = !0;
              var Q = {};
              a.c.options = {
                init: function (b) {
                  if ("select" !== a.a.R(b))
                    throw Error(
                      "options binding applies only to SELECT elements"
                    );
                  for (; 0 < b.length; ) b.remove(0);
                  return { controlsDescendantBindings: !0 };
                },
                update: function (b, c, d) {
                  function e() {
                    return a.a.jb(b.options, function (a) {
                      return a.selected;
                    });
                  }
                  function f(a, b, c) {
                    var d = typeof b;
                    return "function" == d ? b(a) : "string" == d ? a[b] : c;
                  }
                  function g(c, d) {
                    if (x && l) a.i.ma(b, a.i.H);
                    else if (t.length) {
                      var e = 0 <= a.a.A(t, a.w.M(d[0]));
                      a.a.Zc(d[0], e);
                      x && !e && a.u.G(a.a.Fb, null, [b, "change"]);
                    }
                  }
                  var h = b.multiple,
                    m = 0 != b.length && h ? b.scrollTop : null,
                    k = a.a.f(c()),
                    l = d.get("valueAllowUnset") && d.has("value"),
                    p = d.get("optionsIncludeDestroyed");
                  c = {};
                  var q,
                    t = [];
                  l ||
                    (h
                      ? (t = a.a.Mb(e(), a.w.M))
                      : 0 <= b.selectedIndex &&
                        t.push(a.w.M(b.options[b.selectedIndex])));
                  k &&
                    ("undefined" == typeof k.length && (k = [k]),
                    (q = a.a.jb(k, function (b) {
                      return p || b === n || null === b || !a.a.f(b._destroy);
                    })),
                    d.has("optionsCaption") &&
                      ((k = a.a.f(d.get("optionsCaption"))),
                      null !== k && k !== n && q.unshift(Q)));
                  var x = !1;
                  c.beforeRemove = function (a) {
                    b.removeChild(a);
                  };
                  k = g;
                  d.has("optionsAfterRender") &&
                    "function" == typeof d.get("optionsAfterRender") &&
                    (k = function (b, c) {
                      g(0, c);
                      a.u.G(d.get("optionsAfterRender"), null, [
                        c[0],
                        b !== Q ? b : n,
                      ]);
                    });
                  a.a.ec(
                    b,
                    q,
                    function (c, e, g) {
                      g.length &&
                        ((t = !l && g[0].selected ? [a.w.M(g[0])] : []),
                        (x = !0));
                      e = b.ownerDocument.createElement("option");
                      c === Q
                        ? (a.a.Bb(e, d.get("optionsCaption")), a.w.cb(e, n))
                        : ((g = f(c, d.get("optionsValue"), c)),
                          a.w.cb(e, a.a.f(g)),
                          (c = f(c, d.get("optionsText"), g)),
                          a.a.Bb(e, c));
                      return [e];
                    },
                    c,
                    k
                  );
                  if (!l) {
                    var B;
                    h
                      ? (B = t.length && e().length < t.length)
                      : (B =
                          t.length && 0 <= b.selectedIndex
                            ? a.w.M(b.options[b.selectedIndex]) !== t[0]
                            : t.length || 0 <= b.selectedIndex);
                    B && a.u.G(a.a.Fb, null, [b, "change"]);
                  }
                  (l || a.S.Ya()) && a.i.ma(b, a.i.H);
                  a.a.wd(b);
                  m && 20 < Math.abs(m - b.scrollTop) && (b.scrollTop = m);
                },
              };
              a.c.options.$b = a.a.g.Z();
              a.c.selectedOptions = {
                init: function (b, c, d) {
                  function e() {
                    var e = c(),
                      f = [];
                    a.a.D(b.getElementsByTagName("option"), function (b) {
                      b.selected && f.push(a.w.M(b));
                    });
                    a.m.eb(e, d, "selectedOptions", f);
                  }
                  function f() {
                    var d = a.a.f(c()),
                      e = b.scrollTop;
                    d &&
                      "number" == typeof d.length &&
                      a.a.D(b.getElementsByTagName("option"), function (b) {
                        var c = 0 <= a.a.A(d, a.w.M(b));
                        b.selected != c && a.a.Zc(b, c);
                      });
                    b.scrollTop = e;
                  }
                  if ("select" != a.a.R(b))
                    throw Error(
                      "selectedOptions binding applies only to SELECT elements"
                    );
                  var g;
                  a.i.subscribe(
                    b,
                    a.i.H,
                    function () {
                      g
                        ? e()
                        : (a.a.B(b, "change", e), (g = a.o(f, null, { l: b })));
                    },
                    null,
                    { notifyImmediately: !0 }
                  );
                },
                update: function () {},
              };
              a.m.wa.selectedOptions = !0;
              a.c.style = {
                update: function (b, c) {
                  var d = a.a.f(c() || {});
                  a.a.P(d, function (c, d) {
                    d = a.a.f(d);
                    if (null === d || d === n || !1 === d) d = "";
                    if (v) v(b).css(c, d);
                    else if (/^--/.test(c)) b.style.setProperty(c, d);
                    else {
                      c = c.replace(/-(\w)/g, function (a, b) {
                        return b.toUpperCase();
                      });
                      var g = b.style[c];
                      b.style[c] = d;
                      d === g ||
                        b.style[c] != g ||
                        isNaN(d) ||
                        (b.style[c] = d + "px");
                    }
                  });
                },
              };
              a.c.submit = {
                init: function (b, c, d, e, f) {
                  if ("function" != typeof c())
                    throw Error(
                      "The value for a submit binding must be a function"
                    );
                  a.a.B(b, "submit", function (a) {
                    var d,
                      e = c();
                    try {
                      d = e.call(f.$data, b);
                    } finally {
                      !0 !== d &&
                        (a.preventDefault
                          ? a.preventDefault()
                          : (a.returnValue = !1));
                    }
                  });
                },
              };
              a.c.text = {
                init: function () {
                  return { controlsDescendantBindings: !0 };
                },
                update: function (b, c) {
                  a.a.Bb(b, c());
                },
              };
              a.h.ea.text = !0;
              (function () {
                if (A && A.navigator) {
                  var b = function (a) {
                      if (a) return parseFloat(a[1]);
                    },
                    c = A.navigator.userAgent,
                    d,
                    e,
                    f,
                    g,
                    h;
                  (d =
                    A.opera &&
                    A.opera.version &&
                    parseInt(A.opera.version())) ||
                    (h = b(c.match(/Edge\/([^ ]+)$/))) ||
                    b(c.match(/Chrome\/([^ ]+)/)) ||
                    (e = b(c.match(/Version\/([^ ]+) Safari/))) ||
                    (f = b(c.match(/Firefox\/([^ ]+)/))) ||
                    (g = a.a.W || b(c.match(/MSIE ([^ ]+)/))) ||
                    (g = b(c.match(/rv:([^ )]+)/)));
                }
                if (8 <= g && 10 > g)
                  var m = a.a.g.Z(),
                    k = a.a.g.Z(),
                    l = function (b) {
                      var c = this.activeElement;
                      (c = c && a.a.g.get(c, k)) && c(b);
                    },
                    p = function (b, c) {
                      var d = b.ownerDocument;
                      a.a.g.get(d, m) ||
                        (a.a.g.set(d, m, !0), a.a.B(d, "selectionchange", l));
                      a.a.g.set(b, k, c);
                    };
                a.c.textInput = {
                  init: function (b, c, k) {
                    function l(c, d) {
                      a.a.B(b, c, d);
                    }
                    function m() {
                      var d = a.a.f(c());
                      if (null === d || d === n) d = "";
                      L !== n && d === L
                        ? a.a.setTimeout(m, 4)
                        : b.value !== d &&
                          ((y = !0), (b.value = d), (y = !1), (v = b.value));
                    }
                    function r() {
                      w || ((L = b.value), (w = a.a.setTimeout(z, 4)));
                    }
                    function z() {
                      clearTimeout(w);
                      L = w = n;
                      var d = b.value;
                      v !== d && ((v = d), a.m.eb(c(), k, "textInput", d));
                    }
                    var v = b.value,
                      w,
                      L,
                      A = 9 == a.a.W ? r : z,
                      y = !1;
                    g && l("keypress", z);
                    11 > g &&
                      l("propertychange", function (a) {
                        y || "value" !== a.propertyName || A(a);
                      });
                    8 == g && (l("keyup", z), l("keydown", z));
                    p && (p(b, A), l("dragend", r));
                    (!g || 9 <= g) && l("input", A);
                    5 > e && "textarea" === a.a.R(b)
                      ? (l("keydown", r), l("paste", r), l("cut", r))
                      : 11 > d
                      ? l("keydown", r)
                      : 4 > f
                      ? (l("DOMAutoComplete", z),
                        l("dragdrop", z),
                        l("drop", z))
                      : h && "number" === b.type && l("keydown", r);
                    l("change", z);
                    l("blur", z);
                    a.o(m, null, { l: b });
                  },
                };
                a.m.wa.textInput = !0;
                a.c.textinput = {
                  preprocess: function (a, b, c) {
                    c("textInput", a);
                  },
                };
              })();
              a.c.uniqueName = {
                init: function (b, c) {
                  if (c()) {
                    var d = "ko_unique_" + ++a.c.uniqueName.rd;
                    a.a.Yc(b, d);
                  }
                },
              };
              a.c.uniqueName.rd = 0;
              a.c.using = {
                init: function (b, c, d, e, f) {
                  var g;
                  d.has("as") &&
                    (g = {
                      as: d.get("as"),
                      noChildContext: d.get("noChildContext"),
                    });
                  c = f.createChildContext(c, g);
                  a.Oa(c, b);
                  return { controlsDescendantBindings: !0 };
                },
              };
              a.h.ea.using = !0;
              a.c.value = {
                init: function (b, c, d) {
                  var e = a.a.R(b),
                    f = "input" == e;
                  if (!f || ("checkbox" != b.type && "radio" != b.type)) {
                    var g = [],
                      h = d.get("valueUpdate"),
                      m = !1,
                      k = null;
                    h &&
                      ("string" == typeof h ? (g = [h]) : (g = a.a.wc(h)),
                      a.a.Pa(g, "change"));
                    var l = function () {
                      k = null;
                      m = !1;
                      var e = c(),
                        f = a.w.M(b);
                      a.m.eb(e, d, "value", f);
                    };
                    !a.a.W ||
                      !f ||
                      "text" != b.type ||
                      "off" == b.autocomplete ||
                      (b.form && "off" == b.form.autocomplete) ||
                      -1 != a.a.A(g, "propertychange") ||
                      (a.a.B(b, "propertychange", function () {
                        m = !0;
                      }),
                      a.a.B(b, "focus", function () {
                        m = !1;
                      }),
                      a.a.B(b, "blur", function () {
                        m && l();
                      }));
                    a.a.D(g, function (c) {
                      var d = l;
                      a.a.Ud(c, "after") &&
                        ((d = function () {
                          k = a.w.M(b);
                          a.a.setTimeout(l, 0);
                        }),
                        (c = c.substring(5)));
                      a.a.B(b, c, d);
                    });
                    var p;
                    p =
                      f && "file" == b.type
                        ? function () {
                            var d = a.a.f(c());
                            null === d || d === n || "" === d
                              ? (b.value = "")
                              : a.u.G(l);
                          }
                        : function () {
                            var f = a.a.f(c()),
                              g = a.w.M(b);
                            if (null !== k && f === k) a.a.setTimeout(p, 0);
                            else if (f !== g || g === n)
                              "select" === e
                                ? ((g = d.get("valueAllowUnset")),
                                  a.w.cb(b, f, g),
                                  g || f === a.w.M(b) || a.u.G(l))
                                : a.w.cb(b, f);
                          };
                    if ("select" === e) {
                      var q;
                      a.i.subscribe(
                        b,
                        a.i.H,
                        function () {
                          q
                            ? d.get("valueAllowUnset")
                              ? p()
                              : l()
                            : (a.a.B(b, "change", l),
                              (q = a.o(p, null, { l: b })));
                        },
                        null,
                        { notifyImmediately: !0 }
                      );
                    } else a.a.B(b, "change", l), a.o(p, null, { l: b });
                  } else a.ib(b, { checkedValue: c });
                },
                update: function () {},
              };
              a.m.wa.value = !0;
              a.c.visible = {
                update: function (b, c) {
                  var d = a.a.f(c()),
                    e = "none" != b.style.display;
                  d && !e
                    ? (b.style.display = "")
                    : !d && e && (b.style.display = "none");
                },
              };
              a.c.hidden = {
                update: function (b, c) {
                  a.c.visible.update(b, function () {
                    return !a.a.f(c());
                  });
                },
              };
              (function (b) {
                a.c[b] = {
                  init: function (c, d, e, f, g) {
                    return a.c.event.init.call(
                      this,
                      c,
                      function () {
                        var a = {};
                        a[b] = d();
                        return a;
                      },
                      e,
                      f,
                      g
                    );
                  },
                };
              })("click");
              a.ca = function () {};
              a.ca.prototype.renderTemplateSource = function () {
                throw Error("Override renderTemplateSource");
              };
              a.ca.prototype.createJavaScriptEvaluatorBlock = function () {
                throw Error("Override createJavaScriptEvaluatorBlock");
              };
              a.ca.prototype.makeTemplateSource = function (b, c) {
                if ("string" == typeof b) {
                  c = c || w;
                  var d = c.getElementById(b);
                  if (!d) throw Error("Cannot find template with ID " + b);
                  return new a.C.F(d);
                }
                if (1 == b.nodeType || 8 == b.nodeType) return new a.C.ia(b);
                throw Error("Unknown template type: " + b);
              };
              a.ca.prototype.renderTemplate = function (a, c, d, e) {
                a = this.makeTemplateSource(a, e);
                return this.renderTemplateSource(a, c, d, e);
              };
              a.ca.prototype.isTemplateRewritten = function (a, c) {
                return !1 === this.allowTemplateRewriting
                  ? !0
                  : this.makeTemplateSource(a, c).data("isRewritten");
              };
              a.ca.prototype.rewriteTemplate = function (a, c, d) {
                a = this.makeTemplateSource(a, d);
                c = c(a.text());
                a.text(c);
                a.data("isRewritten", !0);
              };
              a.b("templateEngine", a.ca);
              a.kc = (function () {
                function b(b, c, d, h) {
                  b = a.m.ac(b);
                  for (var m = a.m.Ra, k = 0; k < b.length; k++) {
                    var l = b[k].key;
                    if (Object.prototype.hasOwnProperty.call(m, l)) {
                      var p = m[l];
                      if ("function" === typeof p) {
                        if ((l = p(b[k].value))) throw Error(l);
                      } else if (!p)
                        throw Error(
                          "This template engine does not support the '" +
                            l +
                            "' binding within its templates"
                        );
                    }
                  }
                  d =
                    "ko.__tr_ambtns(function($context,$element){return(function(){return{ " +
                    a.m.vb(b, { valueAccessors: !0 }) +
                    " } })()},'" +
                    d.toLowerCase() +
                    "')";
                  return h.createJavaScriptEvaluatorBlock(d) + c;
                }
                var c =
                    /(<([a-z]+\d*)(?:\s+(?!data-bind\s*=\s*)[a-z0-9\-]+(?:=(?:\"[^\"]*\"|\'[^\']*\'|[^>]*))?)*\s+)data-bind\s*=\s*(["'])([\s\S]*?)\3/gi,
                  d = /\x3c!--\s*ko\b\s*([\s\S]*?)\s*--\x3e/g;
                return {
                  xd: function (b, c, d) {
                    c.isTemplateRewritten(b, d) ||
                      c.rewriteTemplate(
                        b,
                        function (b) {
                          return a.kc.Ld(b, c);
                        },
                        d
                      );
                  },
                  Ld: function (a, f) {
                    return a
                      .replace(c, function (a, c, d, e, l) {
                        return b(l, c, d, f);
                      })
                      .replace(d, function (a, c) {
                        return b(c, "\x3c!-- ko --\x3e", "#comment", f);
                      });
                  },
                  md: function (b, c) {
                    return a.aa.Xb(function (d, h) {
                      var m = d.nextSibling;
                      m && m.nodeName.toLowerCase() === c && a.ib(m, b, h);
                    });
                  },
                };
              })();
              a.b("__tr_ambtns", a.kc.md);
              (function () {
                a.C = {};
                a.C.F = function (b) {
                  if ((this.F = b)) {
                    var c = a.a.R(b);
                    this.ab =
                      "script" === c
                        ? 1
                        : "textarea" === c
                        ? 2
                        : "template" == c &&
                          b.content &&
                          11 === b.content.nodeType
                        ? 3
                        : 4;
                  }
                };
                a.C.F.prototype.text = function () {
                  var b =
                    1 === this.ab
                      ? "text"
                      : 2 === this.ab
                      ? "value"
                      : "innerHTML";
                  if (0 == arguments.length) return this.F[b];
                  var c = arguments[0];
                  "innerHTML" === b ? a.a.fc(this.F, c) : (this.F[b] = c);
                };
                var b = a.a.g.Z() + "_";
                a.C.F.prototype.data = function (c) {
                  if (1 === arguments.length) return a.a.g.get(this.F, b + c);
                  a.a.g.set(this.F, b + c, arguments[1]);
                };
                var c = a.a.g.Z();
                a.C.F.prototype.nodes = function () {
                  var b = this.F;
                  if (0 == arguments.length) {
                    var e = a.a.g.get(b, c) || {},
                      f =
                        e.lb ||
                        (3 === this.ab ? b.content : 4 === this.ab ? b : n);
                    if (!f || e.jd) {
                      var g = this.text();
                      g &&
                        g !== e.bb &&
                        ((f = a.a.Md(g, b.ownerDocument)),
                        a.a.g.set(b, c, { lb: f, bb: g, jd: !0 }));
                    }
                    return f;
                  }
                  e = arguments[0];
                  this.ab !== n && this.text("");
                  a.a.g.set(b, c, { lb: e });
                };
                a.C.ia = function (a) {
                  this.F = a;
                };
                a.C.ia.prototype = new a.C.F();
                a.C.ia.prototype.constructor = a.C.ia;
                a.C.ia.prototype.text = function () {
                  if (0 == arguments.length) {
                    var b = a.a.g.get(this.F, c) || {};
                    b.bb === n && b.lb && (b.bb = b.lb.innerHTML);
                    return b.bb;
                  }
                  a.a.g.set(this.F, c, { bb: arguments[0] });
                };
                a.b("templateSources", a.C);
                a.b("templateSources.domElement", a.C.F);
                a.b("templateSources.anonymousTemplate", a.C.ia);
              })();
              (function () {
                function b(b, c, d) {
                  var e;
                  for (c = a.h.nextSibling(c); b && (e = b) !== c; )
                    (b = a.h.nextSibling(e)), d(e, b);
                }
                function c(c, d) {
                  if (c.length) {
                    var e = c[0],
                      f = c[c.length - 1],
                      g = e.parentNode,
                      h = a.ga.instance,
                      m = h.preprocessNode;
                    if (m) {
                      b(e, f, function (a, b) {
                        var c = a.previousSibling,
                          d = m.call(h, a);
                        d &&
                          (a === e && (e = d[0] || b),
                          a === f && (f = d[d.length - 1] || c));
                      });
                      c.length = 0;
                      if (!e) return;
                      e === f ? c.push(e) : (c.push(e, f), a.a.Ua(c, g));
                    }
                    b(e, f, function (b) {
                      (1 !== b.nodeType && 8 !== b.nodeType) || a.vc(d, b);
                    });
                    b(e, f, function (b) {
                      (1 !== b.nodeType && 8 !== b.nodeType) || a.aa.cd(b, [d]);
                    });
                    a.a.Ua(c, g);
                  }
                }
                function d(a) {
                  return a.nodeType ? a : 0 < a.length ? a[0] : null;
                }
                function e(b, e, f, h, m) {
                  m = m || {};
                  var n = ((b && d(b)) || f || {}).ownerDocument,
                    B = m.templateEngine || g;
                  a.kc.xd(f, B, n);
                  f = B.renderTemplate(f, h, m, n);
                  if (
                    "number" != typeof f.length ||
                    (0 < f.length && "number" != typeof f[0].nodeType)
                  )
                    throw Error(
                      "Template engine must return an array of DOM nodes"
                    );
                  n = !1;
                  switch (e) {
                    case "replaceChildren":
                      a.h.va(b, f);
                      n = !0;
                      break;
                    case "replaceNode":
                      a.a.Xc(b, f);
                      n = !0;
                      break;
                    case "ignoreTargetNode":
                      break;
                    default:
                      throw Error("Unknown renderMode: " + e);
                  }
                  n &&
                    (c(f, h),
                    m.afterRender &&
                      a.u.G(m.afterRender, null, [f, h[m.as || "$data"]]),
                    "replaceChildren" == e && a.i.ma(b, a.i.H));
                  return f;
                }
                function f(b, c, d) {
                  return a.O(b) ? b() : "function" === typeof b ? b(c, d) : b;
                }
                var g;
                a.gc = function (b) {
                  if (b != n && !(b instanceof a.ca))
                    throw Error(
                      "templateEngine must inherit from ko.templateEngine"
                    );
                  g = b;
                };
                a.dc = function (b, c, h, m, t) {
                  h = h || {};
                  if ((h.templateEngine || g) == n)
                    throw Error(
                      "Set a template engine before calling renderTemplate"
                    );
                  t = t || "replaceChildren";
                  if (m) {
                    var x = d(m);
                    return a.$(
                      function () {
                        var g =
                            c && c instanceof a.fa
                              ? c
                              : new a.fa(c, null, null, null, {
                                  exportDependencies: !0,
                                }),
                          n = f(b, g.$data, g),
                          g = e(m, t, n, g, h);
                        "replaceNode" == t && ((m = g), (x = d(m)));
                      },
                      null,
                      {
                        Sa: function () {
                          return !x || !a.a.Sb(x);
                        },
                        l: x && "replaceNode" == t ? x.parentNode : x,
                      }
                    );
                  }
                  return a.aa.Xb(function (d) {
                    a.dc(b, c, h, d, "replaceNode");
                  });
                };
                a.Qd = function (b, d, g, h, m) {
                  function x(b, c) {
                    a.u.G(a.a.ec, null, [h, b, u, g, r, c]);
                    a.i.ma(h, a.i.H);
                  }
                  function r(a, b) {
                    c(b, v);
                    g.afterRender && g.afterRender(b, a);
                    v = null;
                  }
                  function u(a, c) {
                    v = m.createChildContext(a, {
                      as: z,
                      noChildContext: g.noChildContext,
                      extend: function (a) {
                        a.$index = c;
                        z && (a[z + "Index"] = c);
                      },
                    });
                    var d = f(b, a, v);
                    return e(h, "ignoreTargetNode", d, v, g);
                  }
                  var v,
                    z = g.as,
                    w =
                      !1 === g.includeDestroyed ||
                      (a.options.foreachHidesDestroyed && !g.includeDestroyed);
                  if (w || g.beforeRemove || !a.Pc(d))
                    return a.$(
                      function () {
                        var b = a.a.f(d) || [];
                        "undefined" == typeof b.length && (b = [b]);
                        w &&
                          (b = a.a.jb(b, function (b) {
                            return b === n || null === b || !a.a.f(b._destroy);
                          }));
                        x(b);
                      },
                      null,
                      { l: h }
                    );
                  x(d.v());
                  var A = d.subscribe(
                    function (a) {
                      x(d(), a);
                    },
                    null,
                    "arrayChange"
                  );
                  A.l(h);
                  return A;
                };
                var h = a.a.g.Z(),
                  m = a.a.g.Z();
                a.c.template = {
                  init: function (b, c) {
                    var d = a.a.f(c());
                    if ("string" == typeof d || "name" in d) a.h.Ea(b);
                    else if ("nodes" in d) {
                      d = d.nodes || [];
                      if (a.O(d))
                        throw Error(
                          'The "nodes" option must be a plain, non-observable array.'
                        );
                      var e = d[0] && d[0].parentNode;
                      (e && a.a.g.get(e, m)) ||
                        ((e = a.a.Yb(d)), a.a.g.set(e, m, !0));
                      new a.C.ia(b).nodes(e);
                    } else if (((d = a.h.childNodes(b)), 0 < d.length))
                      (e = a.a.Yb(d)), new a.C.ia(b).nodes(e);
                    else
                      throw Error(
                        "Anonymous template defined, but no template content was provided"
                      );
                    return { controlsDescendantBindings: !0 };
                  },
                  update: function (b, c, d, e, f) {
                    var g = c();
                    c = a.a.f(g);
                    d = !0;
                    e = null;
                    "string" == typeof c
                      ? (c = {})
                      : ((g = "name" in c ? c.name : b),
                        "if" in c && (d = a.a.f(c["if"])),
                        d && "ifnot" in c && (d = !a.a.f(c.ifnot)),
                        d && !g && (d = !1));
                    "foreach" in c
                      ? (e = a.Qd(g, (d && c.foreach) || [], c, b, f))
                      : d
                      ? ((d = f),
                        "data" in c &&
                          (d = f.createChildContext(c.data, {
                            as: c.as,
                            noChildContext: c.noChildContext,
                            exportDependencies: !0,
                          })),
                        (e = a.dc(g, d, c, b)))
                      : a.h.Ea(b);
                    f = e;
                    (c = a.a.g.get(b, h)) && "function" == typeof c.s && c.s();
                    a.a.g.set(b, h, !f || (f.ja && !f.ja()) ? n : f);
                  },
                };
                a.m.Ra.template = function (b) {
                  b = a.m.ac(b);
                  return (1 == b.length && b[0].unknown) || a.m.Id(b, "name")
                    ? null
                    : "This template engine does not support anonymous templates nested within its templates";
                };
                a.h.ea.template = !0;
              })();
              a.b("setTemplateEngine", a.gc);
              a.b("renderTemplate", a.dc);
              a.a.Kc = function (a, c, d) {
                if (a.length && c.length) {
                  var e, f, g, h, m;
                  for (e = f = 0; (!d || e < d) && (h = a[f]); ++f) {
                    for (g = 0; (m = c[g]); ++g)
                      if (h.value === m.value) {
                        h.moved = m.index;
                        m.moved = h.index;
                        c.splice(g, 1);
                        e = g = 0;
                        break;
                      }
                    e += g;
                  }
                }
              };
              a.a.Pb = (function () {
                function b(b, d, e, f, g) {
                  var h = Math.min,
                    m = Math.max,
                    k = [],
                    l,
                    p = b.length,
                    q,
                    n = d.length,
                    r = n - p || 1,
                    v = p + n + 1,
                    u,
                    w,
                    z;
                  for (l = 0; l <= p; l++)
                    for (
                      w = u, k.push((u = [])), z = h(n, l + r), q = m(0, l - 1);
                      q <= z;
                      q++
                    )
                      u[q] = q
                        ? l
                          ? b[l - 1] === d[q - 1]
                            ? w[q - 1]
                            : h(w[q] || v, u[q - 1] || v) + 1
                          : q + 1
                        : l + 1;
                  h = [];
                  m = [];
                  r = [];
                  l = p;
                  for (q = n; l || q; )
                    (n = k[l][q] - 1),
                      q && n === k[l][q - 1]
                        ? m.push(
                            (h[h.length] = {
                              status: e,
                              value: d[--q],
                              index: q,
                            })
                          )
                        : l && n === k[l - 1][q]
                        ? r.push(
                            (h[h.length] = {
                              status: f,
                              value: b[--l],
                              index: l,
                            })
                          )
                        : (--q,
                          --l,
                          g.sparse ||
                            h.push({ status: "retained", value: d[q] }));
                  a.a.Kc(r, m, !g.dontLimitMoves && 10 * p);
                  return h.reverse();
                }
                return function (a, d, e) {
                  e = "boolean" === typeof e ? { dontLimitMoves: e } : e || {};
                  a = a || [];
                  d = d || [];
                  return a.length < d.length
                    ? b(a, d, "added", "deleted", e)
                    : b(d, a, "deleted", "added", e);
                };
              })();
              a.b("utils.compareArrays", a.a.Pb);
              (function () {
                function b(b, c, d, h, m) {
                  var k = [],
                    l = a.$(
                      function () {
                        var l = c(d, m, a.a.Ua(k, b)) || [];
                        0 < k.length &&
                          (a.a.Xc(k, l), h && a.u.G(h, null, [d, l, m]));
                        k.length = 0;
                        a.a.Nb(k, l);
                      },
                      null,
                      {
                        l: b,
                        Sa: function () {
                          return !a.a.kd(k);
                        },
                      }
                    );
                  return { Y: k, $: l.ja() ? l : n };
                }
                var c = a.a.g.Z(),
                  d = a.a.g.Z();
                a.a.ec = function (e, f, g, h, m, k) {
                  function l(b) {
                    y = { Aa: b, pb: a.ta(w++) };
                    v.push(y);
                    r || F.push(y);
                  }
                  function p(b) {
                    y = t[b];
                    w !== y.pb.v() && D.push(y);
                    y.pb(w++);
                    a.a.Ua(y.Y, e);
                    v.push(y);
                  }
                  function q(b, c) {
                    if (b)
                      for (var d = 0, e = c.length; d < e; d++)
                        a.a.D(c[d].Y, function (a) {
                          b(a, d, c[d].Aa);
                        });
                  }
                  f = f || [];
                  "undefined" == typeof f.length && (f = [f]);
                  h = h || {};
                  var t = a.a.g.get(e, c),
                    r = !t,
                    v = [],
                    u = 0,
                    w = 0,
                    z = [],
                    A = [],
                    C = [],
                    D = [],
                    F = [],
                    y,
                    I = 0;
                  if (r) a.a.D(f, l);
                  else {
                    if (!k || (t && t._countWaitingForRemove)) {
                      var E = a.a.Mb(t, function (a) {
                        return a.Aa;
                      });
                      k = a.a.Pb(E, f, {
                        dontLimitMoves: h.dontLimitMoves,
                        sparse: !0,
                      });
                    }
                    for (var E = 0, G, H, K; (G = k[E]); E++)
                      switch (((H = G.moved), (K = G.index), G.status)) {
                        case "deleted":
                          for (; u < K; ) p(u++);
                          H === n &&
                            ((y = t[u]),
                            y.$ && (y.$.s(), (y.$ = n)),
                            a.a.Ua(y.Y, e).length &&
                              (h.beforeRemove &&
                                (v.push(y),
                                I++,
                                y.Aa === d ? (y = null) : C.push(y)),
                              y && z.push.apply(z, y.Y)));
                          u++;
                          break;
                        case "added":
                          for (; w < K; ) p(u++);
                          H !== n ? (A.push(v.length), p(H)) : l(G.value);
                      }
                    for (; w < f.length; ) p(u++);
                    v._countWaitingForRemove = I;
                  }
                  a.a.g.set(e, c, v);
                  q(h.beforeMove, D);
                  a.a.D(z, h.beforeRemove ? a.oa : a.removeNode);
                  var M, O, P;
                  try {
                    P = e.ownerDocument.activeElement;
                  } catch (N) {}
                  if (A.length)
                    for (; (E = A.shift()) != n; ) {
                      y = v[E];
                      for (M = n; E; )
                        if ((O = v[--E].Y) && O.length) {
                          M = O[O.length - 1];
                          break;
                        }
                      for (f = 0; (u = y.Y[f]); M = u, f++) a.h.Wb(e, u, M);
                    }
                  for (E = 0; (y = v[E]); E++) {
                    y.Y || a.a.extend(y, b(e, g, y.Aa, m, y.pb));
                    for (f = 0; (u = y.Y[f]); M = u, f++) a.h.Wb(e, u, M);
                    !y.Ed &&
                      m &&
                      (m(y.Aa, y.Y, y.pb),
                      (y.Ed = !0),
                      (M = y.Y[y.Y.length - 1]));
                  }
                  P && e.ownerDocument.activeElement != P && P.focus();
                  q(h.beforeRemove, C);
                  for (E = 0; E < C.length; ++E) C[E].Aa = d;
                  q(h.afterMove, D);
                  q(h.afterAdd, F);
                };
              })();
              a.b("utils.setDomNodeChildrenFromArrayMapping", a.a.ec);
              a.ba = function () {
                this.allowTemplateRewriting = !1;
              };
              a.ba.prototype = new a.ca();
              a.ba.prototype.constructor = a.ba;
              a.ba.prototype.renderTemplateSource = function (b, c, d, e) {
                if ((c = (9 > a.a.W ? 0 : b.nodes) ? b.nodes() : null))
                  return a.a.la(c.cloneNode(!0).childNodes);
                b = b.text();
                return a.a.ua(b, e);
              };
              a.ba.Ma = new a.ba();
              a.gc(a.ba.Ma);
              a.b("nativeTemplateEngine", a.ba);
              (function () {
                a.$a = function () {
                  var a = (this.Hd = (function () {
                    if (!v || !v.tmpl) return 0;
                    try {
                      if (0 <= v.tmpl.tag.tmpl.open.toString().indexOf("__"))
                        return 2;
                    } catch (a) {}
                    return 1;
                  })());
                  this.renderTemplateSource = function (b, e, f, g) {
                    g = g || w;
                    f = f || {};
                    if (2 > a)
                      throw Error(
                        "Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later."
                      );
                    var h = b.data("precompiled");
                    h ||
                      ((h = b.text() || ""),
                      (h = v.template(
                        null,
                        "{{ko_with $item.koBindingContext}}" +
                          h +
                          "{{/ko_with}}"
                      )),
                      b.data("precompiled", h));
                    b = [e.$data];
                    e = v.extend({ koBindingContext: e }, f.templateOptions);
                    e = v.tmpl(h, b, e);
                    e.appendTo(g.createElement("div"));
                    v.fragments = {};
                    return e;
                  };
                  this.createJavaScriptEvaluatorBlock = function (a) {
                    return "{{ko_code ((function() { return " + a + " })()) }}";
                  };
                  this.addTemplate = function (a, b) {
                    w.write(
                      "<script type='text/html' id='" +
                        a +
                        "'>" +
                        b +
                        "\x3c/script>"
                    );
                  };
                  0 < a &&
                    ((v.tmpl.tag.ko_code = { open: "__.push($1 || '');" }),
                    (v.tmpl.tag.ko_with = { open: "with($1) {", close: "} " }));
                };
                a.$a.prototype = new a.ca();
                a.$a.prototype.constructor = a.$a;
                var b = new a.$a();
                0 < b.Hd && a.gc(b);
                a.b("jqueryTmplTemplateEngine", a.$a);
              })();
            });
          })();
        })();

        /***/
      },
      /* 120 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);

        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
          )("Object");

        /***/
      },
      /* 121 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createSizePropertyCheck_js__ =
          __webpack_require__(52);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getByteLength_js__ =
          __webpack_require__(29);

        // Internal helper to determine whether we should spend extensive checks against
        // `ArrayBuffer` et al.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__createSizePropertyCheck_js__[
              "a" /* default */
            ]
          )(__WEBPACK_IMPORTED_MODULE_1__getByteLength_js__["a" /* default */]);

        /***/
      },
      /* 122 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = keyInObj;
        // Internal `_.pick` helper function to determine whether `key` is an enumerable
        // property name of `obj`.
        function keyInObj(value, key, obj) {
          return key in obj;
        }

        /***/
      },
      /* 123 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          toBufferView;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getByteLength_js__ =
          __webpack_require__(29);

        // Internal function to wrap or shallow-copy an ArrayBuffer,
        // typed array or DataView to a new view, reusing the buffer.
        function toBufferView(bufferSource) {
          return new Uint8Array(
            bufferSource.buffer || bufferSource,
            bufferSource.byteOffset || 0,
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__getByteLength_js__["a" /* default */]
            )(bufferSource)
          );
        }

        /***/
      },
      /* 124 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__invert_js__ =
          __webpack_require__(71);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__escapeMap_js__ =
          __webpack_require__(53);

        // Internal list of HTML entities for unescaping.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__invert_js__["a" /* default */]
          )(__WEBPACK_IMPORTED_MODULE_1__escapeMap_js__["a" /* default */]);

        /***/
      },
      /* 125 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = after;
        // Returns a function that will only be executed on and after the Nth call.
        function after(times, func) {
          return function () {
            if (--times < 1) {
              return func.apply(this, arguments);
            }
          };
        }

        /***/
      },
      /* 126 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__restArguments_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__flatten_js__ =
          __webpack_require__(14);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bind_js__ =
          __webpack_require__(57);

        // Bind a number of an object's methods to that object. Remaining arguments
        // are the method names to be bound. Useful for ensuring that all callbacks
        // defined on an object belong to it.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__restArguments_js__["a" /* default */]
          )(function (obj, keys) {
            keys = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__flatten_js__["a" /* default */]
            )(keys, false, false);
            var index = keys.length;
            if (index < 1)
              throw new Error("bindAll must be passed function names");
            while (index--) {
              var key = keys[index];
              obj[key] = __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__bind_js__["a" /* default */]
              )(obj[key], obj);
            }
            return obj;
          });

        /***/
      },
      /* 127 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = chain;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__underscore_js__ =
          __webpack_require__(7);

        // Start chaining a wrapped Underscore object.
        function chain(obj) {
          var instance = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__underscore_js__["a" /* default */]
          )(obj);
          instance._chain = true;
          return instance;
        }

        /***/
      },
      /* 128 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = chunk;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);

        // Chunk a single array into multiple arrays, each containing `count` or fewer
        // items.
        function chunk(array, count) {
          if (count == null || count < 1) return [];
          var result = [];
          var i = 0,
            length = array.length;
          while (i < length) {
            result.push(
              __WEBPACK_IMPORTED_MODULE_0__setup_js__["d" /* slice */].call(
                array,
                i,
                (i += count)
              )
            );
          }
          return result;
        }

        /***/
      },
      /* 129 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = clone;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isObject_js__ =
          __webpack_require__(13);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isArray_js__ =
          __webpack_require__(12);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__extend_js__ =
          __webpack_require__(62);

        // Create a (shallow-cloned) duplicate of an object.
        function clone(obj) {
          if (
            !__webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__isObject_js__["a" /* default */]
            )(obj)
          )
            return obj;
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_1__isArray_js__["a" /* default */]
          )(obj)
            ? obj.slice()
            : __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__extend_js__["a" /* default */]
              )({}, obj);
        }

        /***/
      },
      /* 130 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = compact;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__filter_js__ =
          __webpack_require__(22);

        // Trim out all falsy values from an array.
        function compact(array) {
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__filter_js__["a" /* default */]
          )(array, Boolean);
        }

        /***/
      },
      /* 131 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = compose;
        // Returns a function that is the composition of a list of functions, each
        // consuming the return value of the function that follows.
        function compose() {
          var args = arguments;
          var start = args.length - 1;
          return function () {
            var i = start;
            var result = args[start].apply(this, arguments);
            while (i--) result = args[i].call(this, result);
            return result;
          };
        }

        /***/
      },
      /* 132 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__group_js__ =
          __webpack_require__(24);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__has_js__ =
          __webpack_require__(10);

        // Counts instances of an object that group by a certain criterion. Pass
        // either a string attribute to count by, or a function that returns the
        // criterion.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__group_js__["a" /* default */]
          )(function (result, value, key) {
            if (
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__has_js__["a" /* default */]
              )(result, key)
            )
              result[key]++;
            else result[key] = 1;
          });

        /***/
      },
      /* 133 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = create;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__baseCreate_js__ =
          __webpack_require__(44);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__extendOwn_js__ =
          __webpack_require__(31);

        // Creates an object that inherits from the given prototype object.
        // If additional properties are provided then they will be added to the
        // created object.
        function create(prototype, props) {
          var result = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__baseCreate_js__["a" /* default */]
          )(prototype);
          if (props)
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__extendOwn_js__["a" /* default */]
            )(result, props);
          return result;
        }

        /***/
      },
      /* 134 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = debounce;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__restArguments_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__now_js__ =
          __webpack_require__(39);

        // When a sequence of calls of the returned function ends, the argument
        // function is triggered. The end of a sequence is defined by the `wait`
        // parameter. If `immediate` is passed, the argument function will be
        // triggered at the beginning of the sequence instead of at the end.
        function debounce(func, wait, immediate) {
          var timeout, previous, args, result, context;

          var later = function () {
            var passed =
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__now_js__["a" /* default */]
              )() - previous;
            if (wait > passed) {
              timeout = setTimeout(later, wait - passed);
            } else {
              timeout = null;
              if (!immediate) result = func.apply(context, args);
              // This check is needed because `func` can recursively invoke `debounced`.
              if (!timeout) args = context = null;
            }
          };

          var debounced = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__restArguments_js__["a" /* default */]
          )(function (_args) {
            context = this;
            args = _args;
            previous = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__now_js__["a" /* default */]
            )();
            if (!timeout) {
              timeout = setTimeout(later, wait);
              if (immediate) result = func.apply(context, args);
            }
            return result;
          });

          debounced.cancel = function () {
            clearTimeout(timeout);
            timeout = args = context = null;
          };

          return debounced;
        }

        /***/
      },
      /* 135 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__partial_js__ =
          __webpack_require__(26);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__delay_js__ =
          __webpack_require__(60);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__underscore_js__ =
          __webpack_require__(7);

        // Defers a function, scheduling it to run after the current call stack has
        // cleared.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__partial_js__["a" /* default */]
          )(
            __WEBPACK_IMPORTED_MODULE_1__delay_js__["a" /* default */],
            __WEBPACK_IMPORTED_MODULE_2__underscore_js__["a" /* default */],
            1
          );

        /***/
      },
      /* 136 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createEscaper_js__ =
          __webpack_require__(48);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__escapeMap_js__ =
          __webpack_require__(53);

        // Function for escaping strings to HTML interpolation.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__createEscaper_js__["a" /* default */]
          )(__WEBPACK_IMPORTED_MODULE_1__escapeMap_js__["a" /* default */]);

        /***/
      },
      /* 137 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = every;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cb_js__ =
          __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isArrayLike_js__ =
          __webpack_require__(5);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__keys_js__ =
          __webpack_require__(2);

        // Determine whether all of the elements pass a truth test.
        function every(obj, predicate, context) {
          predicate = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__cb_js__["a" /* default */]
          )(predicate, context);
          var _keys =
              !__webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__isArrayLike_js__["a" /* default */]
              )(obj) &&
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__keys_js__["a" /* default */]
              )(obj),
            length = (_keys || obj).length;
          for (var index = 0; index < length; index++) {
            var currentKey = _keys ? _keys[index] : index;
            if (!predicate(obj[currentKey], currentKey, obj)) return false;
          }
          return true;
        }

        /***/
      },
      /* 138 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = findWhere;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__find_js__ =
          __webpack_require__(63);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__matcher_js__ =
          __webpack_require__(25);

        // Convenience version of a common use case of `_.find`: getting the first
        // object containing specific `key:value` pairs.
        function findWhere(obj, attrs) {
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__find_js__["a" /* default */]
          )(
            obj,
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__matcher_js__["a" /* default */]
            )(attrs)
          );
        }

        /***/
      },
      /* 139 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = first;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__initial_js__ =
          __webpack_require__(70);

        // Get the first element of an array. Passing **n** will return the first N
        // values in the array. The **guard** check allows it to work with `_.map`.
        function first(array, n, guard) {
          if (array == null || array.length < 1)
            return n == null || guard ? void 0 : [];
          if (n == null || guard) return array[0];
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__initial_js__["a" /* default */]
          )(array, array.length - n);
        }

        /***/
      },
      /* 140 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = flatten;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__flatten_js__ =
          __webpack_require__(14);

        // Flatten out an array, either recursively (by default), or up to `depth`.
        // Passing `true` or `false` as `depth` means `1` or `Infinity`, respectively.
        function flatten(array, depth) {
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__flatten_js__["a" /* default */]
          )(array, depth, false);
        }

        /***/
      },
      /* 141 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__group_js__ =
          __webpack_require__(24);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__has_js__ =
          __webpack_require__(10);

        // Groups the object's values by a criterion. Pass either a string attribute
        // to group by, or a function that returns the criterion.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__group_js__["a" /* default */]
          )(function (result, value, key) {
            if (
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__has_js__["a" /* default */]
              )(result, key)
            )
              result[key].push(value);
            else result[key] = [value];
          });

        /***/
      },
      /* 142 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = has;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__has_js__ =
          __webpack_require__(10);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toPath_js__ =
          __webpack_require__(19);

        // Shortcut function for checking if an object has a given property directly on
        // itself (in other words, not on a prototype). Unlike the internal `has`
        // function, this public version can also traverse nested properties.
        function has(obj, path) {
          path = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_1__toPath_js__["a" /* default */]
          )(path);
          var length = path.length;
          for (var i = 0; i < length; i++) {
            var key = path[i];
            if (
              !__webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0__has_js__["a" /* default */]
              )(obj, key)
            )
              return false;
            obj = obj[key];
          }
          return !!length;
        }

        /***/
      },
      /* 143 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index_js__ =
          __webpack_require__(34);
        // Default Export
        // ==============
        // In this module, we mix our bundled exports into the `_` object and export
        // the result. This is analogous to setting `module.exports = _` in CommonJS.
        // Hence, this module is also the entry point of our UMD bundle and the package
        // entry point for CommonJS and AMD users. In other words, this is (the source
        // of) the module you are interfacing with when you do any of the following:
        //
        // ```js
        // // CommonJS
        // var _ = require('underscore');
        //
        // // AMD
        // define(['underscore'], function(_) {...});
        //
        // // UMD in the browser
        // // _ is available as a global variable
        // ```

        // Add all of the Underscore functions to the wrapper object.
        var _ = __webpack_require__.i(
          __WEBPACK_IMPORTED_MODULE_0__index_js__["mixin"]
        )(__WEBPACK_IMPORTED_MODULE_0__index_js__);
        // Legacy Node.js API.
        _._ = _;
        // Export the Underscore API.
        /* harmony default export */ __webpack_exports__["a"] = _;

        /***/
      },
      /* 144 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__group_js__ =
          __webpack_require__(24);

        // Indexes the object's values by a criterion, similar to `_.groupBy`, but for
        // when you know that your index values will be unique.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__group_js__["a" /* default */]
          )(function (result, value, key) {
            result[key] = value;
          });

        /***/
      },
      /* 145 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          intersection;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getLength_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__contains_js__ =
          __webpack_require__(21);

        // Produce an array that contains every item shared between all the
        // passed-in arrays.
        function intersection(array) {
          var result = [];
          var argsLength = arguments.length;
          for (
            var i = 0,
              length = __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0__getLength_js__["a" /* default */]
              )(array);
            i < length;
            i++
          ) {
            var item = array[i];
            if (
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__contains_js__["a" /* default */]
              )(result, item)
            )
              continue;
            var j;
            for (j = 1; j < argsLength; j++) {
              if (
                !__webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_1__contains_js__["a" /* default */]
                )(arguments[j], item)
              )
                break;
            }
            if (j === argsLength) result.push(item);
          }
          return result;
        }

        /***/
      },
      /* 146 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__restArguments_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isFunction_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__map_js__ =
          __webpack_require__(15);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__deepGet_js__ =
          __webpack_require__(28);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__toPath_js__ =
          __webpack_require__(19);

        // Invoke a method (with arguments) on every item in a collection.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__restArguments_js__["a" /* default */]
          )(function (obj, path, args) {
            var contextPath, func;
            if (
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__isFunction_js__["a" /* default */]
              )(path)
            ) {
              func = path;
            } else {
              path = __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_4__toPath_js__["a" /* default */]
              )(path);
              contextPath = path.slice(0, -1);
              path = path[path.length - 1];
            }
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__map_js__["a" /* default */]
            )(obj, function (context) {
              var method = func;
              if (!method) {
                if (contextPath && contextPath.length) {
                  context = __webpack_require__.i(
                    __WEBPACK_IMPORTED_MODULE_3__deepGet_js__["a" /* default */]
                  )(context, contextPath);
                }
                if (context == null) return void 0;
                method = context[path];
              }
              return method == null ? method : method.apply(context, args);
            });
          });

        /***/
      },
      /* 147 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);

        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
          )("Date");

        /***/
      },
      /* 148 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isElement;
        // Is a given value a DOM element?
        function isElement(obj) {
          return !!(obj && obj.nodeType === 1);
        }

        /***/
      },
      /* 149 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isEmpty;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getLength_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isArray_js__ =
          __webpack_require__(12);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isString_js__ =
          __webpack_require__(37);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__isArguments_js__ =
          __webpack_require__(35);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__keys_js__ =
          __webpack_require__(2);

        // Is a given array, string, or object empty?
        // An "empty" object has no enumerable own-properties.
        function isEmpty(obj) {
          if (obj == null) return true;
          // Skip the more expensive `toString`-based type checks if `obj` has no
          // `.length`.
          var length = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__getLength_js__["a" /* default */]
          )(obj);
          if (
            typeof length == "number" &&
            (__webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__isArray_js__["a" /* default */]
            )(obj) ||
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__isString_js__["a" /* default */]
              )(obj) ||
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_3__isArguments_js__["a" /* default */]
              )(obj))
          )
            return length === 0;
          return (
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__getLength_js__["a" /* default */]
            )(
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_4__keys_js__["a" /* default */]
              )(obj)
            ) === 0
          );
        }

        /***/
      },
      /* 150 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isEqual;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__underscore_js__ =
          __webpack_require__(7);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__setup_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getByteLength_js__ =
          __webpack_require__(29);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__isTypedArray_js__ =
          __webpack_require__(78);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__isFunction_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__stringTagBug_js__ =
          __webpack_require__(18);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__isDataView_js__ =
          __webpack_require__(36);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__keys_js__ =
          __webpack_require__(2);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__has_js__ =
          __webpack_require__(10);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__toBufferView_js__ =
          __webpack_require__(123);

        // We use this string twice, so give it a name for minification.
        var tagDataView = "[object DataView]";

        // Internal recursive comparison function for `_.isEqual`.
        function eq(a, b, aStack, bStack) {
          // Identical objects are equal. `0 === -0`, but they aren't identical.
          // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).
          if (a === b) return a !== 0 || 1 / a === 1 / b;
          // `null` or `undefined` only equal to itself (strict comparison).
          if (a == null || b == null) return false;
          // `NaN`s are equivalent, but non-reflexive.
          if (a !== a) return b !== b;
          // Exhaust primitive checks
          var type = typeof a;
          if (type !== "function" && type !== "object" && typeof b != "object")
            return false;
          return deepEq(a, b, aStack, bStack);
        }

        // Internal recursive comparison function for `_.isEqual`.
        function deepEq(a, b, aStack, bStack) {
          // Unwrap any wrapped objects.
          if (
            a instanceof
            __WEBPACK_IMPORTED_MODULE_0__underscore_js__["a" /* default */]
          )
            a = a._wrapped;
          if (
            b instanceof
            __WEBPACK_IMPORTED_MODULE_0__underscore_js__["a" /* default */]
          )
            b = b._wrapped;
          // Compare `[[Class]]` names.
          var className =
            __WEBPACK_IMPORTED_MODULE_1__setup_js__["l" /* toString */].call(a);
          if (
            className !==
            __WEBPACK_IMPORTED_MODULE_1__setup_js__["l" /* toString */].call(b)
          )
            return false;
          // Work around a bug in IE 10 - Edge 13.
          if (
            __WEBPACK_IMPORTED_MODULE_5__stringTagBug_js__[
              "b" /* hasStringTagBug */
            ] &&
            className == "[object Object]" &&
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_6__isDataView_js__["a" /* default */]
            )(a)
          ) {
            if (
              !__webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_6__isDataView_js__["a" /* default */]
              )(b)
            )
              return false;
            className = tagDataView;
          }
          switch (className) {
            // These types are compared by value.
            case "[object RegExp]":
            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
            case "[object String]":
              // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
              // equivalent to `new String("5")`.
              return "" + a === "" + b;
            case "[object Number]":
              // `NaN`s are equivalent, but non-reflexive.
              // Object(NaN) is equivalent to NaN.
              if (+a !== +a) return +b !== +b;
              // An `egal` comparison is performed for other numeric values.
              return +a === 0 ? 1 / +a === 1 / b : +a === +b;
            case "[object Date]":
            case "[object Boolean]":
              // Coerce dates and booleans to numeric primitive values. Dates are compared by their
              // millisecond representations. Note that invalid dates with millisecond representations
              // of `NaN` are not equivalent.
              return +a === +b;
            case "[object Symbol]":
              return (
                __WEBPACK_IMPORTED_MODULE_1__setup_js__[
                  "n" /* SymbolProto */
                ].valueOf.call(a) ===
                __WEBPACK_IMPORTED_MODULE_1__setup_js__[
                  "n" /* SymbolProto */
                ].valueOf.call(b)
              );
            case "[object ArrayBuffer]":
            case tagDataView:
              // Coerce to typed array so we can fall through.
              return deepEq(
                __webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_9__toBufferView_js__[
                    "a" /* default */
                  ]
                )(a),
                __webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_9__toBufferView_js__[
                    "a" /* default */
                  ]
                )(b),
                aStack,
                bStack
              );
          }

          var areArrays = className === "[object Array]";
          if (
            !areArrays &&
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_3__isTypedArray_js__["a" /* default */]
            )(a)
          ) {
            var byteLength = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__getByteLength_js__["a" /* default */]
            )(a);
            if (
              byteLength !==
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__getByteLength_js__[
                  "a" /* default */
                ]
              )(b)
            )
              return false;
            if (a.buffer === b.buffer && a.byteOffset === b.byteOffset)
              return true;
            areArrays = true;
          }
          if (!areArrays) {
            if (typeof a != "object" || typeof b != "object") return false;

            // Objects with different constructors are not equivalent, but `Object`s or `Array`s
            // from different frames are.
            var aCtor = a.constructor,
              bCtor = b.constructor;
            if (
              aCtor !== bCtor &&
              !(
                __webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_4__isFunction_js__[
                    "a" /* default */
                  ]
                )(aCtor) &&
                aCtor instanceof aCtor &&
                __webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_4__isFunction_js__[
                    "a" /* default */
                  ]
                )(bCtor) &&
                bCtor instanceof bCtor
              ) &&
              "constructor" in a &&
              "constructor" in b
            ) {
              return false;
            }
          }
          // Assume equality for cyclic structures. The algorithm for detecting cyclic
          // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.

          // Initializing stack of traversed objects.
          // It's done here since we only need them for objects and arrays comparison.
          aStack = aStack || [];
          bStack = bStack || [];
          var length = aStack.length;
          while (length--) {
            // Linear search. Performance is inversely proportional to the number of
            // unique nested structures.
            if (aStack[length] === a) return bStack[length] === b;
          }

          // Add the first object to the stack of traversed objects.
          aStack.push(a);
          bStack.push(b);

          // Recursively compare objects and arrays.
          if (areArrays) {
            // Compare array lengths to determine if a deep comparison is necessary.
            length = a.length;
            if (length !== b.length) return false;
            // Deep compare the contents, ignoring non-numeric properties.
            while (length--) {
              if (!eq(a[length], b[length], aStack, bStack)) return false;
            }
          } else {
            // Deep compare objects.
            var _keys = __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_7__keys_js__["a" /* default */]
              )(a),
              key;
            length = _keys.length;
            // Ensure that both objects contain the same number of properties before comparing deep equality.
            if (
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_7__keys_js__["a" /* default */]
              )(b).length !== length
            )
              return false;
            while (length--) {
              // Deep compare each member
              key = _keys[length];
              if (
                !(
                  __webpack_require__.i(
                    __WEBPACK_IMPORTED_MODULE_8__has_js__["a" /* default */]
                  )(b, key) && eq(a[key], b[key], aStack, bStack)
                )
              )
                return false;
            }
          }
          // Remove the first object from the stack of traversed objects.
          aStack.pop();
          bStack.pop();
          return true;
        }

        // Perform a deep comparison to check if two objects are equal.
        function isEqual(a, b) {
          return eq(a, b);
        }

        /***/
      },
      /* 151 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);

        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
          )("Error");

        /***/
      },
      /* 152 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isFinite;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setup_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isSymbol_js__ =
          __webpack_require__(77);

        // Is a given object a finite number?
        function isFinite(obj) {
          return (
            !__webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__isSymbol_js__["a" /* default */]
            )(obj) &&
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__setup_js__["r" /* _isFinite */]
            )(obj) &&
            !isNaN(parseFloat(obj))
          );
        }

        /***/
      },
      /* 153 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stringTagBug_js__ =
          __webpack_require__(18);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__methodFingerprint_js__ =
          __webpack_require__(30);

        /* harmony default export */ __webpack_exports__["a"] =
          __WEBPACK_IMPORTED_MODULE_1__stringTagBug_js__["a" /* isIE11 */]
            ? __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__methodFingerprint_js__[
                  "a" /* ie11fingerprint */
                ]
              )(
                __WEBPACK_IMPORTED_MODULE_2__methodFingerprint_js__[
                  "d" /* mapMethods */
                ]
              )
            : __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
              )("Map");

        /***/
      },
      /* 154 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isNull;
        // Is a given value equal to null?
        function isNull(obj) {
          return obj === null;
        }

        /***/
      },
      /* 155 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);

        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
          )("RegExp");

        /***/
      },
      /* 156 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stringTagBug_js__ =
          __webpack_require__(18);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__methodFingerprint_js__ =
          __webpack_require__(30);

        /* harmony default export */ __webpack_exports__["a"] =
          __WEBPACK_IMPORTED_MODULE_1__stringTagBug_js__["a" /* isIE11 */]
            ? __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__methodFingerprint_js__[
                  "a" /* ie11fingerprint */
                ]
              )(
                __WEBPACK_IMPORTED_MODULE_2__methodFingerprint_js__[
                  "b" /* setMethods */
                ]
              )
            : __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
              )("Set");

        /***/
      },
      /* 157 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stringTagBug_js__ =
          __webpack_require__(18);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__methodFingerprint_js__ =
          __webpack_require__(30);

        /* harmony default export */ __webpack_exports__["a"] =
          __WEBPACK_IMPORTED_MODULE_1__stringTagBug_js__["a" /* isIE11 */]
            ? __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__methodFingerprint_js__[
                  "a" /* ie11fingerprint */
                ]
              )(
                __WEBPACK_IMPORTED_MODULE_2__methodFingerprint_js__[
                  "c" /* weakMapMethods */
                ]
              )
            : __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
              )("WeakMap");

        /***/
      },
      /* 158 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tagTester_js__ =
          __webpack_require__(3);

        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__tagTester_js__["a" /* default */]
          )("WeakSet");

        /***/
      },
      /* 159 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = last;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__rest_js__ =
          __webpack_require__(85);

        // Get the last element of an array. Passing **n** will return the last N
        // values in the array.
        function last(array, n, guard) {
          if (array == null || array.length < 1)
            return n == null || guard ? void 0 : [];
          if (n == null || guard) return array[array.length - 1];
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__rest_js__["a" /* default */]
          )(array, Math.max(0, array.length - n));
        }

        /***/
      },
      /* 160 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__findLastIndex_js__ =
          __webpack_require__(65);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__createIndexFinder_js__ =
          __webpack_require__(49);

        // Return the position of the last occurrence of an item in an array,
        // or -1 if the item is not included in the array.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_1__createIndexFinder_js__[
              "a" /* default */
            ]
          )(
            -1,
            __WEBPACK_IMPORTED_MODULE_0__findLastIndex_js__["a" /* default */]
          );

        /***/
      },
      /* 161 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = mapObject;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cb_js__ =
          __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__keys_js__ =
          __webpack_require__(2);

        // Returns the results of applying the `iteratee` to each element of `obj`.
        // In contrast to `_.map` it returns an object.
        function mapObject(obj, iteratee, context) {
          iteratee = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__cb_js__["a" /* default */]
          )(iteratee, context);
          var _keys = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__keys_js__["a" /* default */]
            )(obj),
            length = _keys.length,
            results = {};
          for (var index = 0; index < length; index++) {
            var currentKey = _keys[index];
            results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
          }
          return results;
        }

        /***/
      },
      /* 162 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = memoize;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__has_js__ =
          __webpack_require__(10);

        // Memoize an expensive function by storing its results.
        function memoize(func, hasher) {
          var memoize = function (key) {
            var cache = memoize.cache;
            var address = "" + (hasher ? hasher.apply(this, arguments) : key);
            if (
              !__webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0__has_js__["a" /* default */]
              )(cache, address)
            )
              cache[address] = func.apply(this, arguments);
            return cache[address];
          };
          memoize.cache = {};
          return memoize;
        }

        /***/
      },
      /* 163 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = min;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__ =
          __webpack_require__(5);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__values_js__ =
          __webpack_require__(16);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__cb_js__ =
          __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__each_js__ =
          __webpack_require__(11);

        // Return the minimum element (or element-based computation).
        function min(obj, iteratee, context) {
          var result = Infinity,
            lastComputed = Infinity,
            value,
            computed;
          if (
            iteratee == null ||
            (typeof iteratee == "number" &&
              typeof obj[0] != "object" &&
              obj != null)
          ) {
            obj = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__["a" /* default */]
            )(obj)
              ? obj
              : __webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_1__values_js__["a" /* default */]
                )(obj);
            for (var i = 0, length = obj.length; i < length; i++) {
              value = obj[i];
              if (value != null && value < result) {
                result = value;
              }
            }
          } else {
            iteratee = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__cb_js__["a" /* default */]
            )(iteratee, context);
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_3__each_js__["a" /* default */]
            )(obj, function (v, index, list) {
              computed = iteratee(v, index, list);
              if (
                computed < lastComputed ||
                (computed === Infinity && result === Infinity)
              ) {
                result = v;
                lastComputed = computed;
              }
            });
          }
          return result;
        }

        /***/
      },
      /* 164 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = mixin;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__underscore_js__ =
          __webpack_require__(7);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__each_js__ =
          __webpack_require__(11);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__functions_js__ =
          __webpack_require__(66);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__setup_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__chainResult_js__ =
          __webpack_require__(46);

        // Add your own custom functions to the Underscore object.
        function mixin(obj) {
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_1__each_js__["a" /* default */]
          )(
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__functions_js__["a" /* default */]
            )(obj),
            function (name) {
              var func = (__WEBPACK_IMPORTED_MODULE_0__underscore_js__[
                "a" /* default */
              ][name] = obj[name]);
              __WEBPACK_IMPORTED_MODULE_0__underscore_js__[
                "a" /* default */
              ].prototype[name] = function () {
                var args = [this._wrapped];
                __WEBPACK_IMPORTED_MODULE_3__setup_js__["c" /* push */].apply(
                  args,
                  arguments
                );
                return __webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_4__chainResult_js__[
                    "a" /* default */
                  ]
                )(
                  this,
                  func.apply(
                    __WEBPACK_IMPORTED_MODULE_0__underscore_js__[
                      "a" /* default */
                    ],
                    args
                  )
                );
              };
            }
          );
          return __WEBPACK_IMPORTED_MODULE_0__underscore_js__[
            "a" /* default */
          ];
        }

        /***/
      },
      /* 165 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = object;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getLength_js__ =
          __webpack_require__(8);

        // Converts lists into objects. Pass either a single array of `[key, value]`
        // pairs, or two parallel arrays of the same length -- one of keys, and one of
        // the corresponding values. Passing by pairs is the reverse of `_.pairs`.
        function object(list, values) {
          var result = {};
          for (
            var i = 0,
              length = __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0__getLength_js__["a" /* default */]
              )(list);
            i < length;
            i++
          ) {
            if (values) {
              result[list[i]] = values[i];
            } else {
              result[list[i][0]] = list[i][1];
            }
          }
          return result;
        }

        /***/
      },
      /* 166 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__restArguments_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isFunction_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__negate_js__ =
          __webpack_require__(38);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__map_js__ =
          __webpack_require__(15);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__flatten_js__ =
          __webpack_require__(14);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__contains_js__ =
          __webpack_require__(21);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__pick_js__ =
          __webpack_require__(83);

        // Return a copy of the object without the disallowed properties.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__restArguments_js__["a" /* default */]
          )(function (obj, keys) {
            var iteratee = keys[0],
              context;
            if (
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__isFunction_js__["a" /* default */]
              )(iteratee)
            ) {
              iteratee = __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__negate_js__["a" /* default */]
              )(iteratee);
              if (keys.length > 1) context = keys[1];
            } else {
              keys = __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_3__map_js__["a" /* default */]
              )(
                __webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_4__flatten_js__["a" /* default */]
                )(keys, false, false),
                String
              );
              iteratee = function (value, key) {
                return !__webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_5__contains_js__["a" /* default */]
                )(keys, key);
              };
            }
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_6__pick_js__["a" /* default */]
            )(obj, iteratee, context);
          });

        /***/
      },
      /* 167 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__partial_js__ =
          __webpack_require__(26);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__before_js__ =
          __webpack_require__(56);

        // Returns a function that will be executed at most one time, no matter how
        // often you call it. Useful for lazy initialization.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__partial_js__["a" /* default */]
          )(__WEBPACK_IMPORTED_MODULE_1__before_js__["a" /* default */], 2);

        /***/
      },
      /* 168 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = pairs;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__keys_js__ =
          __webpack_require__(2);

        // Convert an object into a list of `[key, value]` pairs.
        // The opposite of `_.object` with one argument.
        function pairs(obj) {
          var _keys = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__keys_js__["a" /* default */]
          )(obj);
          var length = _keys.length;
          var pairs = Array(length);
          for (var i = 0; i < length; i++) {
            pairs[i] = [_keys[i], obj[_keys[i]]];
          }
          return pairs;
        }

        /***/
      },
      /* 169 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__group_js__ =
          __webpack_require__(24);

        // Split a collection into two arrays: one whose elements all pass the given
        // truth test, and one whose elements all do not pass the truth test.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__group_js__["a" /* default */]
          )(function (result, value, pass) {
            result[pass ? 0 : 1].push(value);
          }, true);

        /***/
      },
      /* 170 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = propertyOf;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__noop_js__ =
          __webpack_require__(82);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__get_js__ =
          __webpack_require__(67);

        // Generates a function for a given object that returns a given property.
        function propertyOf(obj) {
          if (obj == null)
            return __WEBPACK_IMPORTED_MODULE_0__noop_js__["a" /* default */];
          return function (path) {
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__get_js__["a" /* default */]
            )(obj, path);
          };
        }

        /***/
      },
      /* 171 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = range;
        // Generate an integer Array containing an arithmetic progression. A port of
        // the native Python `range()` function. See
        // [the Python documentation](https://docs.python.org/library/functions.html#range).
        function range(start, stop, step) {
          if (stop == null) {
            stop = start || 0;
            start = 0;
          }
          if (!step) {
            step = stop < start ? -1 : 1;
          }

          var length = Math.max(Math.ceil((stop - start) / step), 0);
          var range = Array(length);

          for (var idx = 0; idx < length; idx++, start += step) {
            range[idx] = start;
          }

          return range;
        }

        /***/
      },
      /* 172 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createReduce_js__ =
          __webpack_require__(51);

        // **Reduce** builds up a single result from a list of values, aka `inject`,
        // or `foldl`.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__createReduce_js__["a" /* default */]
          )(1);

        /***/
      },
      /* 173 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createReduce_js__ =
          __webpack_require__(51);

        // The right-associative version of reduce, also known as `foldr`.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__createReduce_js__["a" /* default */]
          )(-1);

        /***/
      },
      /* 174 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = reject;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__filter_js__ =
          __webpack_require__(22);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__negate_js__ =
          __webpack_require__(38);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__cb_js__ =
          __webpack_require__(4);

        // Return all the elements for which a truth test fails.
        function reject(obj, predicate, context) {
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__filter_js__["a" /* default */]
          )(
            obj,
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__negate_js__["a" /* default */]
            )(
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__cb_js__["a" /* default */]
              )(predicate)
            ),
            context
          );
        }

        /***/
      },
      /* 175 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = result;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isFunction_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toPath_js__ =
          __webpack_require__(19);

        // Traverses the children of `obj` along `path`. If a child is a function, it
        // is invoked with its parent as context. Returns the value of the final
        // child, or `fallback` if any child is undefined.
        function result(obj, path, fallback) {
          path = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_1__toPath_js__["a" /* default */]
          )(path);
          var length = path.length;
          if (!length) {
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__isFunction_js__["a" /* default */]
            )(fallback)
              ? fallback.call(obj)
              : fallback;
          }
          for (var i = 0; i < length; i++) {
            var prop = obj == null ? void 0 : obj[path[i]];
            if (prop === void 0) {
              prop = fallback;
              i = length; // Ensure we don't continue iterating.
            }
            obj = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__isFunction_js__["a" /* default */]
            )(prop)
              ? prop.call(obj)
              : prop;
          }
          return obj;
        }

        /***/
      },
      /* 176 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = shuffle;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__sample_js__ =
          __webpack_require__(86);

        // Shuffle a collection.
        function shuffle(obj) {
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__sample_js__["a" /* default */]
          )(obj, Infinity);
        }

        /***/
      },
      /* 177 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = size;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__ =
          __webpack_require__(5);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__keys_js__ =
          __webpack_require__(2);

        // Return the number of elements in a collection.
        function size(obj) {
          if (obj == null) return 0;
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__["a" /* default */]
          )(obj)
            ? obj.length
            : __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__keys_js__["a" /* default */]
              )(obj).length;
        }

        /***/
      },
      /* 178 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = some;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cb_js__ =
          __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isArrayLike_js__ =
          __webpack_require__(5);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__keys_js__ =
          __webpack_require__(2);

        // Determine if at least one element in the object passes a truth test.
        function some(obj, predicate, context) {
          predicate = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__cb_js__["a" /* default */]
          )(predicate, context);
          var _keys =
              !__webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_1__isArrayLike_js__["a" /* default */]
              )(obj) &&
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__keys_js__["a" /* default */]
              )(obj),
            length = (_keys || obj).length;
          for (var index = 0; index < length; index++) {
            var currentKey = _keys ? _keys[index] : index;
            if (predicate(obj[currentKey], currentKey, obj)) return true;
          }
          return false;
        }

        /***/
      },
      /* 179 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = sortBy;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cb_js__ =
          __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pluck_js__ =
          __webpack_require__(40);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__map_js__ =
          __webpack_require__(15);

        // Sort the object's values by a criterion produced by an iteratee.
        function sortBy(obj, iteratee, context) {
          var index = 0;
          iteratee = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__cb_js__["a" /* default */]
          )(iteratee, context);
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_1__pluck_js__["a" /* default */]
          )(
            __webpack_require__
              .i(__WEBPACK_IMPORTED_MODULE_2__map_js__["a" /* default */])(
                obj,
                function (value, key, list) {
                  return {
                    value: value,
                    index: index++,
                    criteria: iteratee(value, key, list),
                  };
                }
              )
              .sort(function (left, right) {
                var a = left.criteria;
                var b = right.criteria;
                if (a !== b) {
                  if (a > b || a === void 0) return 1;
                  if (a < b || b === void 0) return -1;
                }
                return left.index - right.index;
              }),
            "value"
          );
        }

        /***/
      },
      /* 180 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = tap;
        // Invokes `interceptor` with the `obj` and then returns `obj`.
        // The primary purpose of this method is to "tap into" a method chain, in
        // order to perform operations on intermediate results within the chain.
        function tap(obj, interceptor) {
          interceptor(obj);
          return obj;
        }

        /***/
      },
      /* 181 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = template;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__defaults_js__ =
          __webpack_require__(59);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__underscore_js__ =
          __webpack_require__(7);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__templateSettings_js__ =
          __webpack_require__(88);

        // When customizing `_.templateSettings`, if you don't want to define an
        // interpolation, evaluation or escaping regex, we need one that is
        // guaranteed not to match.
        var noMatch = /(.)^/;

        // Certain characters need to be escaped so that they can be put into a
        // string literal.
        var escapes = {
          "'": "'",
          "\\": "\\",
          "\r": "r",
          "\n": "n",
          "\u2028": "u2028",
          "\u2029": "u2029",
        };

        var escapeRegExp = /\\|'|\r|\n|\u2028|\u2029/g;

        function escapeChar(match) {
          return "\\" + escapes[match];
        }

        // In order to prevent third-party code injection through
        // `_.templateSettings.variable`, we test it against the following regular
        // expression. It is intentionally a bit more liberal than just matching valid
        // identifiers, but still prevents possible loopholes through defaults or
        // destructuring assignment.
        var bareIdentifier = /^\s*(\w|\$)+\s*$/;

        // JavaScript micro-templating, similar to John Resig's implementation.
        // Underscore templating handles arbitrary delimiters, preserves whitespace,
        // and correctly escapes quotes within interpolated code.
        // NB: `oldSettings` only exists for backwards compatibility.
        function template(text, settings, oldSettings) {
          if (!settings && oldSettings) settings = oldSettings;
          settings = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__defaults_js__["a" /* default */]
          )(
            {},
            settings,
            __WEBPACK_IMPORTED_MODULE_1__underscore_js__["a" /* default */]
              .templateSettings
          );

          // Combine delimiters into one regular expression via alternation.
          var matcher = RegExp(
            [
              (settings.escape || noMatch).source,
              (settings.interpolate || noMatch).source,
              (settings.evaluate || noMatch).source,
            ].join("|") + "|$",
            "g"
          );

          // Compile the template source, escaping string literals appropriately.
          var index = 0;
          var source = "__p+='";
          text.replace(
            matcher,
            function (match, escape, interpolate, evaluate, offset) {
              source += text
                .slice(index, offset)
                .replace(escapeRegExp, escapeChar);
              index = offset + match.length;

              if (escape) {
                source +=
                  "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
              } else if (interpolate) {
                source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
              } else if (evaluate) {
                source += "';\n" + evaluate + "\n__p+='";
              }

              // Adobe VMs need the match returned to produce the correct offset.
              return match;
            }
          );
          source += "';\n";

          var argument = settings.variable;
          if (argument) {
            // Insure against third-party code injection. (CVE-2021-23358)
            if (!bareIdentifier.test(argument))
              throw new Error("variable is not a bare identifier: " + argument);
          } else {
            // If a variable is not specified, place data values in local scope.
            source = "with(obj||{}){\n" + source + "}\n";
            argument = "obj";
          }

          source =
            "var __t,__p='',__j=Array.prototype.join," +
            "print=function(){__p+=__j.call(arguments,'');};\n" +
            source +
            "return __p;\n";

          var render;
          try {
            render = new Function(argument, "_", source);
          } catch (e) {
            e.source = source;
            throw e;
          }

          var template = function (data) {
            return render.call(
              this,
              data,
              __WEBPACK_IMPORTED_MODULE_1__underscore_js__["a" /* default */]
            );
          };

          // Provide the compiled source as a convenience for precompilation.
          template.source = "function(" + argument + "){\n" + source + "}";

          return template;
        }

        /***/
      },
      /* 182 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = throttle;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__now_js__ =
          __webpack_require__(39);

        // Returns a function, that, when invoked, will only be triggered at most once
        // during a given window of time. Normally, the throttled function will run
        // as much as it can, without ever going more than once per `wait` duration;
        // but if you'd like to disable the execution on the leading edge, pass
        // `{leading: false}`. To disable execution on the trailing edge, ditto.
        function throttle(func, wait, options) {
          var timeout, context, args, result;
          var previous = 0;
          if (!options) options = {};

          var later = function () {
            previous =
              options.leading === false
                ? 0
                : __webpack_require__.i(
                    __WEBPACK_IMPORTED_MODULE_0__now_js__["a" /* default */]
                  )();
            timeout = null;
            result = func.apply(context, args);
            if (!timeout) context = args = null;
          };

          var throttled = function () {
            var _now = __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__now_js__["a" /* default */]
            )();
            if (!previous && options.leading === false) previous = _now;
            var remaining = wait - (_now - previous);
            context = this;
            args = arguments;
            if (remaining <= 0 || remaining > wait) {
              if (timeout) {
                clearTimeout(timeout);
                timeout = null;
              }
              previous = _now;
              result = func.apply(context, args);
              if (!timeout) context = args = null;
            } else if (!timeout && options.trailing !== false) {
              timeout = setTimeout(later, remaining);
            }
            return result;
          };

          throttled.cancel = function () {
            clearTimeout(timeout);
            previous = 0;
            timeout = context = args = null;
          };

          return throttled;
        }

        /***/
      },
      /* 183 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = times;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__optimizeCb_js__ =
          __webpack_require__(17);

        // Run a function **n** times.
        function times(n, iteratee, context) {
          var accum = Array(Math.max(0, n));
          iteratee = __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__optimizeCb_js__["a" /* default */]
          )(iteratee, context, 1);
          for (var i = 0; i < n; i++) accum[i] = iteratee(i);
          return accum;
        }

        /***/
      },
      /* 184 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__underscore_js__ =
          __webpack_require__(7);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__each_js__ =
          __webpack_require__(11);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__setup_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__chainResult_js__ =
          __webpack_require__(46);

        // Add all mutator `Array` functions to the wrapper.
        __webpack_require__.i(
          __WEBPACK_IMPORTED_MODULE_1__each_js__["a" /* default */]
        )(
          ["pop", "push", "reverse", "shift", "sort", "splice", "unshift"],
          function (name) {
            var method =
              __WEBPACK_IMPORTED_MODULE_2__setup_js__["b" /* ArrayProto */][
                name
              ];
            __WEBPACK_IMPORTED_MODULE_0__underscore_js__[
              "a" /* default */
            ].prototype[name] = function () {
              var obj = this._wrapped;
              if (obj != null) {
                method.apply(obj, arguments);
                if (
                  (name === "shift" || name === "splice") &&
                  obj.length === 0
                ) {
                  delete obj[0];
                }
              }
              return __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_3__chainResult_js__["a" /* default */]
              )(this, obj);
            };
          }
        );

        // Add all accessor `Array` functions to the wrapper.
        __webpack_require__.i(
          __WEBPACK_IMPORTED_MODULE_1__each_js__["a" /* default */]
        )(["concat", "join", "slice"], function (name) {
          var method =
            __WEBPACK_IMPORTED_MODULE_2__setup_js__["b" /* ArrayProto */][name];
          __WEBPACK_IMPORTED_MODULE_0__underscore_js__[
            "a" /* default */
          ].prototype[name] = function () {
            var obj = this._wrapped;
            if (obj != null) obj = method.apply(obj, arguments);
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_3__chainResult_js__["a" /* default */]
            )(this, obj);
          };
        });

        /* harmony default export */ __webpack_exports__["a"] =
          __WEBPACK_IMPORTED_MODULE_0__underscore_js__["a" /* default */];

        /***/
      },
      /* 185 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createEscaper_js__ =
          __webpack_require__(48);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__unescapeMap_js__ =
          __webpack_require__(124);

        // Function for unescaping strings from HTML interpolation.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__createEscaper_js__["a" /* default */]
          )(__WEBPACK_IMPORTED_MODULE_1__unescapeMap_js__["a" /* default */]);

        /***/
      },
      /* 186 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__restArguments_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__uniq_js__ =
          __webpack_require__(91);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__flatten_js__ =
          __webpack_require__(14);

        // Produce an array that contains the union: each distinct element from all of
        // the passed-in arrays.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__restArguments_js__["a" /* default */]
          )(function (arrays) {
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__uniq_js__["a" /* default */]
            )(
              __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_2__flatten_js__["a" /* default */]
              )(arrays, true, true)
            );
          });

        /***/
      },
      /* 187 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = uniqueId;
        // Generate a unique integer id (unique within the entire client session).
        // Useful for temporary DOM ids.
        var idCounter = 0;
        function uniqueId(prefix) {
          var id = ++idCounter + "";
          return prefix ? prefix + id : id;
        }

        /***/
      },
      /* 188 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = where;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__filter_js__ =
          __webpack_require__(22);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__matcher_js__ =
          __webpack_require__(25);

        // Convenience version of a common use case of `_.filter`: selecting only
        // objects containing specific `key:value` pairs.
        function where(obj, attrs) {
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__filter_js__["a" /* default */]
          )(
            obj,
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__matcher_js__["a" /* default */]
            )(attrs)
          );
        }

        /***/
      },
      /* 189 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__restArguments_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__difference_js__ =
          __webpack_require__(61);

        // Return a version of the array that does not contain the specified value(s).
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__restArguments_js__["a" /* default */]
          )(function (array, otherArrays) {
            return __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__difference_js__["a" /* default */]
            )(array, otherArrays);
          });

        /***/
      },
      /* 190 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = wrap;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__partial_js__ =
          __webpack_require__(26);

        // Returns the first function passed as an argument to the second,
        // allowing you to adjust arguments, run code before and after, and
        // conditionally execute the original function.
        function wrap(func, wrapper) {
          return __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__partial_js__["a" /* default */]
          )(wrapper, func);
        }

        /***/
      },
      /* 191 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__restArguments_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__unzip_js__ =
          __webpack_require__(92);

        // Zip together multiple lists into a single array -- elements that share
        // an index go together.
        /* harmony default export */ __webpack_exports__["a"] =
          __webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0__restArguments_js__["a" /* default */]
          )(__WEBPACK_IMPORTED_MODULE_1__unzip_js__["a" /* default */]);

        /***/
      },
      /* 192 */
      /***/ function (module, exports, __webpack_require__) {
        __webpack_require__(93);
        __webpack_require__(42);
        __webpack_require__(94);
        __webpack_require__(95);
        __webpack_require__(97);
        __webpack_require__(0);
        __webpack_require__(98);
        __webpack_require__(99);
        __webpack_require__(100);
        __webpack_require__(101);
        __webpack_require__(43);
        __webpack_require__(102);
        __webpack_require__(103);
        __webpack_require__(104);
        __webpack_require__(105);
        __webpack_require__(106);
        __webpack_require__(107);
        __webpack_require__(108);
        module.exports = __webpack_require__(96);

        /***/
      },
      /******/
    ]
  );
});
